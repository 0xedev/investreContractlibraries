{
	"id": "170911508ecf6a12a3559f6594cf69b7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/**\n * @title ActionExecutor\n * @notice Central onchain dispatcher that executes module actions from user vaults.\n *         Uses EIP-712 signed approvals by the vault owner to allow a relayer/bot to\n *         call `executeModuleActionWithSig(...)` which will call `UserVault.executeCall(...)`.\n *CA: 0x2288B1E75e90B62012d527068A07bebE5F89be9d\n * Flow:\n *  1. Vault owner signs an EIP-712 message approving a module action for their vault.\n *  2. Offchain relayer (bot) pushes the signature and params to this contract.\n *  3. This contract validates signature, checks module whitelist, increments nonce,\n *     and calls `UserVault(vault).executeCall(module, value, data)`.\n *\n * Security notes:\n *  - The UserVault must whitelist this ActionExecutor via `setExecutorAllowed(executor, true)`\n *    for the call to succeed (UserVault enforces that).\n *  - Nonces are per-vault to prevent replay attacks.\n *  - Modules must be registered by the contract owner.\n */\n\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport { ECDSA } from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\ninterface IUserVault {\n    function executeCall(address target, uint256 value, bytes calldata data) external returns (bytes memory);\n    function owner() external view returns (address);\n}\n\nerror ZeroAddress();\nerror ModuleNotRegistered();\nerror SignatureExpired();\nerror InvalidSigner();\nerror ExecutionFailed();\nerror ModuleAlreadyRegistered();\nerror ModuleNotFound();\n\ncontract ActionExecutor is Ownable {\n    using ECDSA for bytes32;\n\n    /// ========== EVENTS ==========\n    event ModuleRegistered(bytes32 indexed moduleId, address indexed module);\n    event ModuleUnregistered(bytes32 indexed moduleId, address indexed module);\n    event ActionExecuted(\n        address indexed vault,\n        address indexed owner,\n        bytes32 indexed moduleId,\n        address module,\n        uint256 value,\n        bytes data,\n        bytes result\n    );\n\n    /// ========== MODULE REGISTRY ==========\n    /// moduleId => moduleAddress\n    mapping(bytes32 => address) public modules;\n\n    /// ========== NONCES ==========\n    /// vault => nonce\n    mapping(address => uint256) public nonces;\n\n    /// EIP-712 domain separator parameters\n    bytes32 public immutable DOMAIN_SEPARATOR;\n\n    // keccak256(\"Action(address vault,bytes32 moduleId,uint256 value,bytes data,uint256 nonce,uint256 deadline)\")\n    bytes32 public constant ACTION_TYPEHASH = keccak256(\"Action(address vault,bytes32 moduleId,uint256 value,bytes data,uint256 nonce,uint256 deadline)\");\n\n    constructor() Ownable(msg.sender) {\n        uint256 chainId;\n        assembly {\n            chainId := chainid()\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                // EIP-712 Domain: name + version + chainId + verifyingContract\n                keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                keccak256(bytes(\"ActionExecutor\")),\n                keccak256(bytes(\"1\")),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    /// ========== MODULE ADMIN ==========\n    function registerModule(bytes32 moduleId, address module) external onlyOwner {\n        if (module == address(0)) revert ZeroAddress();\n        if (modules[moduleId] != address(0)) revert ModuleAlreadyRegistered();\n        modules[moduleId] = module;\n        emit ModuleRegistered(moduleId, module);\n    }\n\n    function unregisterModule(bytes32 moduleId) external onlyOwner {\n        address mod = modules[moduleId];\n        if (mod == address(0)) revert ModuleNotFound();\n        delete modules[moduleId];\n        emit ModuleUnregistered(moduleId, mod);\n    }\n\n    /// ========== META-TX / EXECUTION ==========\n    /**\n     * @notice Execute a registered module's action on behalf of user vault, authorized by owner's signature.\n     *\n     * @param moduleId Registered module id (bytes32)\n     * @param vault Address of the UserVault clone\n     * @param value ETH value to forward from vault to module (in wei)\n     * @param data Calldata to pass to module (executed from vault context)\n     * @param deadline Timestamp after which the signature is invalid\n     * @param sig EIP-191 signature (65 bytes) from vault owner approving this action\n     */\n    function executeModuleActionWithSig(\n        bytes32 moduleId,\n        address vault,\n        uint256 value,\n        bytes calldata data,\n        uint256 deadline,\n        bytes calldata sig\n    ) external returns (bytes memory result) {\n        address module = modules[moduleId];\n        if (module == address(0)) revert ModuleNotRegistered();\n        if (vault == address(0)) revert ZeroAddress();\n        if (block.timestamp > deadline) revert SignatureExpired();\n\n        // Recreate digest\n        uint256 nonce = nonces[vault];\n        bytes32 structHash = keccak256(abi.encode(ACTION_TYPEHASH, vault, moduleId, value, keccak256(data), nonce, deadline));\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash));\n\n        // Recover signer\n        address signer = digest.recover(sig);\n        // Ensure signer is owner of the vault\n        address vaultOwner = IUserVault(vault).owner();\n        if (signer == address(0) || signer != vaultOwner) revert InvalidSigner();\n\n        // increment nonce\n        nonces[vault] = nonce + 1;\n\n        // Call the vault to execute the action (vault must whitelist this executor)\n        bytes memory res;\n        try IUserVault(vault).executeCall(module, value, data) returns (bytes memory r) {\n            res = r;\n        } catch (bytes memory reason) {\n            // Bubble revert if available\n            if (reason.length > 0) {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n            revert ExecutionFailed();\n        }\n\n        emit ActionExecuted(vault, signer, moduleId, module, value, data, res);\n        return res;\n    }\n\n    /// @notice Admin fallback: owner of this contract can execute module actions directly (no signature).\n    /// Useful for governance-driven or emergency operations.\n    function executeModuleActionByOwner(\n        bytes32 moduleId,\n        address vault,\n        uint256 value,\n        bytes calldata data\n    ) external onlyOwner returns (bytes memory) {\n        address module = modules[moduleId];\n        if (module == address(0)) revert ModuleNotRegistered();\n        if (vault == address(0)) revert ZeroAddress();\n\n        bytes memory res;\n        try IUserVault(vault).executeCall(module, value, data) returns (bytes memory r) {\n            res = r;\n        } catch (bytes memory reason) {\n            if (reason.length > 0) {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n            revert ExecutionFailed();\n        }\n\n        // Owner is executing as a privileged op â€” vault owner unknown here.\n        emit ActionExecuted(vault, address(0), moduleId, module, value, data, res);\n        return res;\n    }\n\n    /// ========== HELPERS / VIEWS ==========\n    function getModule(bytes32 moduleId) external view returns (address) {\n        return modules[moduleId];\n    }\n\n    function getNonce(address vault) external view returns (uint256) {\n        return nonces[vault];\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n Ã· 2 + 1, and for v in (302): v âˆˆ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7814  library ECDSA {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7814  library ECDSA {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220528573ba262f6b40f31cded9c3a9149b166cb479328a54aa4cd5e1dbb50c149264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220528573ba262f6b40f31cded9c3a9149b166cb479328a54aa4cd5e1dbb50c149264736f6c63430008180033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE DUP6 PUSH20 0xBA262F6B40F31CDED9C3A9149B166CB479328A54 0xAA 0x4C 0xD5 0xE1 0xDB 0xB5 0xC EQ SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "344:7470:2:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea2646970667358221220528573ba262f6b40f31cded9c3a9149b166cb479328a54aa4cd5e1dbb50c149264736f6c63430008180033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE DUP6 PUSH20 0xBA262F6B40F31CDED9C3A9149B166CB479328A54 0xAA 0x4C 0xD5 0xE1 0xDB 0xB5 0xC EQ SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "344:7470:2:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "library_deploy_address"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "RETURN",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "REVERT",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220528573ba262f6b40f31cded9c3a9149b166cb479328a54aa4cd5e1dbb50c149264736f6c63430008180033",
									".code": [
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol": {
				"ActionExecutor": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExecutionFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ModuleAlreadyRegistered",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ModuleNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ModuleNotRegistered",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SignatureExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "moduleId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "module",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"name": "ActionExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "moduleId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "module",
									"type": "address"
								}
							],
							"name": "ModuleRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "moduleId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "module",
									"type": "address"
								}
							],
							"name": "ModuleUnregistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ACTION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "moduleId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "executeModuleActionByOwner",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "moduleId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "executeModuleActionWithSig",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "moduleId",
									"type": "bytes32"
								}
							],
							"name": "getModule",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "getNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "modules",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "moduleId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "module",
									"type": "address"
								}
							],
							"name": "registerModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "moduleId",
									"type": "bytes32"
								}
							],
							"name": "unregisterModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"executeModuleActionWithSig(bytes32,address,uint256,bytes,uint256,bytes)": {
								"params": {
									"data": "Calldata to pass to module (executed from vault context)",
									"deadline": "Timestamp after which the signature is invalid",
									"moduleId": "Registered module id (bytes32)",
									"sig": "EIP-191 signature (65 bytes) from vault owner approving this action",
									"value": "ETH value to forward from vault to module (in wei)",
									"vault": "Address of the UserVault clone"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  0xa0\n  0x40\n  swap1\n  dup1\n  dup3\n  mstore\n  jumpi(tag_2, callvalue)\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":2651:2661  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  iszero\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_4\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  dup1\n  sload\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":2651:2661  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  dup3\n  and\n  dup2\n  or\n  dup4\n  sstore\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":2651:2661  msg.sender */\n  swap2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  0x0e\n  0x20\n  dup3\n  mload\n  tag_6\n  dup2\n  tag_1\n  jump\t// in\ntag_6:\n  dup3\n  dup2\n  mstore\n  add\n  shl(0x91, 0x20b1ba34b7b722bc32b1baba37b9)\n  dup2\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3023:3057  keccak256(bytes(\"ActionExecutor\")) */\n  keccak256\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  0x01\n  0x20\n  dup4\n  mload\n  tag_7\n  dup2\n  tag_1\n  jump\t// in\ntag_7:\n  dup3\n  dup2\n  mstore\n  add\n  shl(0xf8, 0x31)\n  dup2\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3075:3096  keccak256(bytes(\"1\")) */\n  keccak256\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  dup3\n  mload\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":2802:3166  abi.encode(... */\n  swap1\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  0x20\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":2802:3166  abi.encode(... */\n  dup3\n  add\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  swap3\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":2910:3005  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  dup5\n  mstore\n  dup5\n  dup4\n  add\n  mstore\n  0x60\n  dup3\n  add\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":2698:2751  assembly {... */\n  chainid\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  0x80\n  dup3\n  add\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3147:3151  this */\n  address\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  0xa0\n  dup3\n  add\n  mstore\n  0xa0\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":2802:3166  abi.encode(... */\n  dup2\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  0xc0\n  dup2\n  add\n  swap3\n  dup2\n  dup5\n  lt\n  0x01\n  dup1\n  0x40\n  shl\n  sub\n  dup6\n  gt\n  or\n  tag_8\n  jumpi\n  dup4\n  swap1\n  mstore\n  mload\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":2779:3176  keccak256(... */\n  swap1\n  keccak256\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  0x80\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":2760:3176  DOMAIN_SEPARATOR = keccak256(... */\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  mload(0x80)\n  dup2\n  assignImmutable(\"0x24f23eb2b7ec20f09b3b2a21f8addc5e0a93cdf731b4f8ae02783fb7a15edd99\")\n  return\ntag_8:\n  shl(0xe0, 0x4e487b71)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  mstore\n  mstore(0x04, 0x41)\n  0x24\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_4:\n  shl(0xe0, 0x1e4fbdf7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n  mstore\n  0x24\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  revert\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\ntag_2:\n  0x00\n  dup1\n  revert\ntag_1:\n  0x40\n  dup2\n  add\n  swap1\n  dup2\n  lt\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  or\n  tag_8\n  jumpi\n  0x40\n  mstore\n  jump\t// out\nstop\n\nsub_0: assembly {\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_43, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_43:\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x16ca96f4\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x2d0335ab\n      eq\n      tag_59\n      jumpi\n      dup1\n      0x2dac633b\n      eq\n      tag_49\n      jumpi\n      dup1\n      0x3595945d\n      eq\n      tag_51\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_53\n      jumpi\n      dup1\n      0x5a35b84a\n      eq\n      tag_55\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_57\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_59\n      jumpi\n      dup1\n      0x85acd641\n      eq\n      tag_67\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_63\n      jumpi\n      dup1\n      0xa78e922b\n      eq\n      tag_65\n      jumpi\n      dup1\n      0xb0b6cc1a\n      eq\n      tag_67\n      jumpi\n      0xf2fde38b\n      eq\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      tag_20\n      jump\t// in\n    tag_67:\n      tag_16\n      jump\t// in\n    tag_65:\n      tag_18\n      jump\t// in\n    tag_63:\n      tag_17\n      jump\t// in\n    tag_59:\n      tag_9\n      jump\t// in\n    tag_57:\n      tag_14\n      jump\t// in\n    tag_55:\n      tag_13\n      jump\t// in\n    tag_53:\n      tag_12\n      jump\t// in\n    tag_51:\n      tag_11\n      jump\t// in\n    tag_49:\n      tag_10\n      jump\t// in\n    tag_45:\n      tag_7\n      jump\t// in\n    tag_2:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      sub\n      tag_71\n      jumpi\n      jump\t// out\n    tag_71:\n      0x00\n      dup1\n      revert\n    tag_3:\n      swap2\n      dup2\n      0x1f\n      dup5\n      add\n      slt\n      iszero\n      tag_71\n      jumpi\n      dup3\n      calldataload\n      swap2\n      0xffffffffffffffff\n      dup4\n      gt\n      tag_71\n      jumpi\n      0x20\n      dup4\n      dup2\n      dup7\n      add\n      swap6\n      add\n      add\n      gt\n      tag_71\n      jumpi\n      jump\t// out\n    tag_4:\n      0x00\n    tag_79:\n      dup4\n      dup2\n      lt\n      tag_80\n      jumpi\n      pop\n      pop\n      0x00\n      swap2\n      add\n      mstore\n      jump\t// out\n    tag_80:\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_79)\n    tag_5:\n      swap1\n      0x20\n      swap2\n      tag_82\n      dup2\n      mload\n      dup1\n      swap3\n      dup2\n      dup6\n      mstore\n      dup6\n      dup1\n      dup7\n      add\n      swap2\n      add\n      tag_4\n      jump\t// in\n    tag_82:\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_6:\n      swap1\n      0x20\n      tag_83\n      swap3\n      dup2\n      dup2\n      mstore\n      add\n      swap1\n      tag_5\n      jump\t// in\n    tag_83:\n      swap1\n      jump\t// out\n    tag_7:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0xc0))\n      tag_88\n      calldataload(0x24)\n      tag_2\n      jump\t// in\n    tag_88:\n      calldataload(0x44)\n      0xffffffffffffffff\n      calldataload(0x64)\n      dup2\n      dup2\n      gt\n      tag_71\n      jumpi\n      tag_91\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_91:\n      swap3\n      swap1\n      swap2\n      calldataload(0xa4)\n      swap1\n      dup2\n      gt\n      tag_71\n      jumpi\n      tag_94\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_94:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4651:4668  modules[moduleId] */\n      tag_95\n      tag_96\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mstore(0x00, calldataload(0x04))\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6468:6475  modules */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4651:4668  modules[moduleId] */\n    tag_96:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4651:4668  modules[moduleId] */\n    tag_95:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4682:4702  module == address(0) */\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4678:4732  if (module == address(0)) revert ModuleNotRegistered() */\n      tag_97\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      and(sub(shl(0xa0, 0x01), 0x01), calldataload(0x24))\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4746:4765  vault == address(0) */\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4742:4787  if (vault == address(0)) revert ZeroAddress() */\n      tag_99\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      calldataload(0x84)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4801:4816  block.timestamp */\n      timestamp\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4801:4827  block.timestamp > deadline */\n      gt\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4797:4854  if (block.timestamp > deadline) revert SignatureExpired() */\n      tag_101\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      calldataload(0x24)\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4908:4914  nonces */\n      0x02\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5198:5217  digest.recover(sig) */\n      tag_103\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      swap1\n      tag_104\n      swap1\n      sload\n      swap5\n      tag_106\n      calldatasize\n      dup11\n      dup11\n      tag_25\n      jump\t// in\n    tag_106:\n      dup1\n      mload\n      0x20\n      swap2\n      dup3\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5014:5029  keccak256(data) */\n      keccak256\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x40\n      dup1\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":2515:2622  keccak256(\"Action(address vault,bytes32 moduleId,uint256 value,bytes data,uint256 nonce,uint256 deadline)\") */\n      0x2eaaf47f5d8d55bbdfc0070d3bf4e5c48f0e169aeb82b023197c8b2c69c6a338\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4962:5047  abi.encode(ACTION_TYPEHASH, vault, moduleId, value, keccak256(data), nonce, deadline) */\n      swap4\n      dup2\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      swap4\n      dup5\n      mstore\n      and(sub(shl(0xa0, 0x01), 0x01), calldataload(0x24))\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      calldataload(0x04)\n      0x60\n      dup3\n      add\n      mstore\n      0x80\n      dup2\n      add\n      dup11\n      swap1\n      mstore\n      0xa0\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0xc0\n      dup2\n      add\n      dup9\n      swap1\n      mstore\n      calldataload(0x84)\n      0xe0\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4962:5047  abi.encode(ACTION_TYPEHASH, vault, moduleId, value, keccak256(data), nonce, deadline) */\n      dup2\n      mstore\n      not(0x1f)\n      swap2\n      swap1\n      tag_108\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x0100\n      dup3\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4962:5047  abi.encode(ACTION_TYPEHASH, vault, moduleId, value, keccak256(data), nonce, deadline) */\n      tag_23\n      jump\t// in\n    tag_108:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4952:5048  keccak256(abi.encode(ACTION_TYPEHASH, vault, moduleId, value, keccak256(data), nonce, deadline)) */\n      swap1\n      keccak256\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xf0, 0x1901)\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5085:5143  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      dup3\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5114:5130  DOMAIN_SEPARATOR */\n      immutable(\"0x24f23eb2b7ec20f09b3b2a21f8addc5e0a93cdf731b4f8ae02783fb7a15edd99\")\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x22\n      dup4\n      add\n      mstore\n      0x42\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x62\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5085:5143  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      swap3\n      dup4\n      add\n      dup2\n      mstore\n      swap1\n      swap2\n      tag_109\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup3\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5085:5143  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      tag_23\n      jump\t// in\n    tag_109:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5075:5144  keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash)) */\n      swap1\n      keccak256\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      swap3\n      calldatasize\n      swap2\n      tag_25\n      jump\t// in\n    tag_104:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5198:5217  digest.recover(sig) */\n      swap1\n      tag_37\n      jump\t// in\n    tag_103:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x8da5cb5b)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5295:5320  IUserVault(vault).owner() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      swap3\n      swap1\n      0x20\n      dup5\n      0x04\n      dup2\n      and(sub(shl(0xa0, 0x01), 0x01), calldataload(0x24))\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5295:5320  IUserVault(vault).owner() */\n      gas\n      staticcall\n      swap4\n      dup5\n      iszero\n      tag_111\n      jumpi\n      0x00\n      swap5\n      tag_113\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n    tag_114:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap3\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5334:5354  signer == address(0) */\n      dup4\n      iszero\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5334:5378  signer == address(0) || signer != vaultOwner */\n      dup2\n      iszero\n      tag_115\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n    tag_116:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5330:5402  if (signer == address(0) || signer != vaultOwner) revert InvalidSigner() */\n      pop\n      tag_117\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5456:5465  nonce + 1 */\n      tag_119\n      swap1\n      tag_30\n      jump\t// in\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      calldataload(0x24)\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4908:4914  nonces */\n      0x02\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sstore\n      mload(0x40)\n      shl(0xe0, 0x9e5d4c49)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5591:5641  IUserVault(vault).executeCall(module, value, data) */\n      dup2\n      mstore\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup2\n      dup1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5591:5641  IUserVault(vault).executeCall(module, value, data) */\n      tag_121\n      dup10\n      dup10\n      dup10\n      dup9\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x04\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5591:5641  IUserVault(vault).executeCall(module, value, data) */\n      dup7\n      add\n      tag_33\n      jump\t// in\n    tag_121:\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup2\n      dup4\n      and(sub(shl(0xa0, 0x01), 0x01), calldataload(0x24))\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5591:5641  IUserVault(vault).executeCall(module, value, data) */\n      gas\n      call\n      0x00\n      swap2\n      dup2\n      tag_122\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n    tag_123:\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5587:5974  try IUserVault(vault).executeCall(module, value, data) returns (bytes memory r) {... */\n      tag_124\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5700:5974  catch (bytes memory reason) {... */\n      tag_126\n      tag_34\n      jump\t// in\n    tag_126:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup1\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5788:5805  reason.length > 0 */\n      swap1\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5784:5926  if (reason.length > 0) {... */\n      tag_127\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe2, 0x2b3f6d11)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5946:5963  ExecutionFailed() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x04\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5946:5963  ExecutionFailed() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5784:5926  if (reason.length > 0) {... */\n    tag_127:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5825:5912  assembly {... */\n      add\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5587:5974  try IUserVault(vault).executeCall(module, value, data) returns (bytes memory r) {... */\n    tag_124:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      tag_129\n      swap7\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5681:5688  res = r */\n      swap2\n      swap6\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      calldataload(0x04)\n      swap6\n      and(sub(shl(0xa0, 0x01), 0x01), calldataload(0x24))\n      swap5\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5989:6054  ActionExecuted(vault, signer, moduleId, module, value, data, res) */\n      0xbdc4e709cee662270d6b1f3b98b847541936a3762b56f7229d50448d83476e24\n      swap5\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup5\n      swap4\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5989:6054  ActionExecuted(vault, signer, moduleId, module, value, data, res) */\n      tag_130\n      swap4\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5681:5688  res = r */\n      dup12\n      swap4\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup7\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5989:6054  ActionExecuted(vault, signer, moduleId, module, value, data, res) */\n      tag_35\n      jump\t// in\n    tag_130:\n      sub\n      swap1\n      log4\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_6\n      jump\t// in\n    tag_129:\n      sub\n      swap1\n      return\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5591:5641  IUserVault(vault).executeCall(module, value, data) */\n    tag_122:\n      tag_131\n      swap2\n      swap3\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup4\n      returndatacopy\n      tag_132\n      dup2\n      dup4\n      tag_23\n      jump\t// in\n    tag_132:\n      dup2\n      add\n      swap1\n      tag_31\n      jump\t// in\n    tag_131:\n      swap1\n      0x00\n      jump(tag_123)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5330:5402  if (signer == address(0) || signer != vaultOwner) revert InvalidSigner() */\n    tag_117:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe2, 0x20578759)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5387:5402  InvalidSigner() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x04\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5387:5402  InvalidSigner() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5334:5378  signer == address(0) || signer != vaultOwner */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5358:5378  signer != vaultOwner */\n      dup5\n      eq\n      iszero\n      swap1\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5334:5378  signer == address(0) || signer != vaultOwner */\n      0x00\n      jump(tag_116)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5295:5320  IUserVault(vault).owner() */\n    tag_113:\n      tag_133\n      swap2\n      swap5\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5295:5320  IUserVault(vault).owner() */\n      returndatasize\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":5295:5320  IUserVault(vault).owner() */\n      gt\n      tag_134\n      jumpi\n    tag_135:\n      tag_136\n      dup2\n      dup4\n      tag_23\n      jump\t// in\n    tag_136:\n      dup2\n      add\n      swap1\n      tag_28\n      jump\t// in\n    tag_133:\n      swap3\n      0x00\n      jump(tag_114)\n    tag_134:\n      pop\n      returndatasize\n      jump(tag_135)\n    tag_111:\n      tag_29\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4797:4854  if (block.timestamp > deadline) revert SignatureExpired() */\n    tag_101:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x0819bdcd)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4836:4854  SignatureExpired() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x04\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4836:4854  SignatureExpired() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4742:4787  if (vault == address(0)) revert ZeroAddress() */\n    tag_99:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4774:4787  ZeroAddress() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x04\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4774:4787  ZeroAddress() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4678:4732  if (module == address(0)) revert ModuleNotRegistered() */\n    tag_97:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe1, 0x4e25774f)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4711:4732  ModuleNotRegistered() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x04\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4711:4732  ModuleNotRegistered() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n    tag_9:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      tag_141\n      dup2\n      tag_2\n      jump\t// in\n    tag_141:\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":7426:7432  nonces */\n      0x02\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      0x20\n      sload(keccak256(0x00, 0x40))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_10:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x80))\n      0x04\n      calldataload(0x24)\n      dup2\n      calldataload\n      tag_146\n      dup3\n      tag_2\n      jump\t// in\n    tag_146:\n      calldataload(0x44)\n      swap2\n      calldataload(0x64)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_71\n      jumpi\n      tag_149\n      swap1\n      calldatasize\n      swap1\n      dup7\n      add\n      tag_3\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      swap4\n      swap1\n      swap2\n      tag_150\n      tag_38\n      jump\t// in\n    tag_150:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6468:6485  modules[moduleId] */\n      tag_151\n      tag_96\n      dup6\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x00\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6468:6475  modules */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6468:6485  modules[moduleId] */\n    tag_151:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      dup4\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6499:6519  module == address(0) */\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6495:6549  if (module == address(0)) revert ModuleNotRegistered() */\n      tag_153\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6563:6582  vault == address(0) */\n      swap3\n      dup4\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6559:6604  if (vault == address(0)) revert ZeroAddress() */\n      tag_155\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup3\n      0x00\n      dup4\n      dup10\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6645:6695  IUserVault(vault).executeCall(module, value, data) */\n      tag_157\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup11\n      dup7\n      mload(0x40)\n      swap7\n      dup8\n      swap6\n      dup7\n      swap6\n      shl(0xe0, 0x9e5d4c49)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6645:6695  IUserVault(vault).executeCall(module, value, data) */\n      dup8\n      mstore\n      dup7\n      add\n      tag_33\n      jump\t// in\n    tag_157:\n      sub\n      dup2\n      dup4\n      dup10\n      gas\n      call\n      0x00\n      swap2\n      dup2\n      tag_158\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n    tag_159:\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6641:6986  try IUserVault(vault).executeCall(module, value, data) returns (bytes memory r) {... */\n      tag_160\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6754:6986  catch (bytes memory reason) {... */\n      dup8\n      tag_162\n      tag_34\n      jump\t// in\n    tag_162:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup1\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6800:6817  reason.length > 0 */\n      swap1\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6796:6938  if (reason.length > 0) {... */\n      tag_127\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe2, 0x2b3f6d11)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6958:6975  ExecutionFailed() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup4\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6958:6975  ExecutionFailed() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6641:6986  try IUserVault(vault).executeCall(module, value, data) returns (bytes memory r) {... */\n    tag_160:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      tag_129\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6735:6742  res = r */\n      swap8\n      pop\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":7080:7149  ActionExecuted(vault, address(0), moduleId, module, value, data, res) */\n      tag_130\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6735:6742  res = r */\n      swap6\n      swap5\n      swap3\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":7080:7149  ActionExecuted(vault, address(0), moduleId, module, value, data, res) */\n      0xbdc4e709cee662270d6b1f3b98b847541936a3762b56f7229d50448d83476e24\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6735:6742  res = r */\n      swap5\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6641:6986  try IUserVault(vault).executeCall(module, value, data) returns (bytes memory r) {... */\n      swap9\n      dup10\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":7080:7149  ActionExecuted(vault, address(0), moduleId, module, value, data, res) */\n      swap6\n      dup7\n      swap6\n      dup7\n      tag_35\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6645:6695  IUserVault(vault).executeCall(module, value, data) */\n    tag_158:\n      tag_167\n      swap2\n      swap3\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup4\n      returndatacopy\n      tag_132\n      dup2\n      dup4\n      tag_23\n      jump\t// in\n    tag_167:\n      swap1\n      0x00\n      jump(tag_159)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6559:6604  if (vault == address(0)) revert ZeroAddress() */\n    tag_155:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6591:6604  ZeroAddress() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup8\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6591:6604  ZeroAddress() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6495:6549  if (module == address(0)) revert ModuleNotRegistered() */\n    tag_153:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe1, 0x4e25774f)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6528:6549  ModuleNotRegistered() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup9\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6528:6549  ModuleNotRegistered() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n    tag_11:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_173\n      tag_38\n      jump\t// in\n    tag_173:\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup2\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3629:3636  modules */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3660:3677  mod == address(0) */\n      dup2\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3656:3702  if (mod == address(0)) revert ModuleNotFound() */\n      tag_174\n      jumpi\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup2\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3629:3636  modules */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3751:3784  ModuleUnregistered(moduleId, mod) */\n      0xc631c273472e359a1548940daca1e146b3b6bf7582363a16e11b9f570783baee\n      swap1\n      dup1\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      stop\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3656:3702  if (mod == address(0)) revert ModuleNotFound() */\n    tag_174:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe2, 0x1c94b023)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3686:3702  ModuleNotFound() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x04\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3686:3702  ModuleNotFound() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n    tag_12:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":2310:2351  bytes32 public immutable DOMAIN_SEPARATOR */\n      immutable(\"0x24f23eb2b7ec20f09b3b2a21f8addc5e0a93cdf731b4f8ae02783fb7a15edd99\")\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup2\n      mstore\n      return\n    tag_13:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":2515:2622  keccak256(\"Action(address vault,bytes32 moduleId,uint256 value,bytes data,uint256 nonce,uint256 deadline)\") */\n      0x2eaaf47f5d8d55bbdfc0070d3bf4e5c48f0e169aeb82b023197c8b2c69c6a338\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup2\n      mstore\n      return\n    tag_14:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_188\n      tag_38\n      jump\t// in\n    tag_188:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x00\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup3\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      stop\n    tag_16:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":7314:7321  modules */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      0x20\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(keccak256(0x00, 0x40))\n      and\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_17:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x00)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_18:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x24)\n      calldataload(0x04)\n      tag_201\n      dup3\n      tag_2\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_202\n      tag_38\n      jump\t// in\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup3\n      dup2\n      and\n      swap3\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3323:3343  module == address(0) */\n      dup4\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3319:3365  if (module == address(0)) revert ZeroAddress() */\n      tag_99\n      jumpi\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup4\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3379:3386  modules */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3375:3444  if (modules[moduleId] != address(0)) revert ModuleAlreadyRegistered() */\n      tag_206\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3454:3480  modules[moduleId] = module */\n      tag_208\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3454:3471  modules[moduleId] */\n      swap1\n      tag_209\n      dup4\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x00\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":6468:6475  modules */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3454:3471  modules[moduleId] */\n    tag_209:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3454:3480  modules[moduleId] = module */\n    tag_208:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3495:3529  ModuleRegistered(moduleId, module) */\n      0xd63be02155b46636309fb0a4a79647c60971aecaad53cbc83aad90cd75fd9d54\n      0x00\n      dup1\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      stop\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3375:3444  if (modules[moduleId] != address(0)) revert ModuleAlreadyRegistered() */\n    tag_206:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x95b0718d)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3419:3444  ModuleAlreadyRegistered() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x04\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":3419:3444  ModuleAlreadyRegistered() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n    tag_20:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      tag_214\n      dup2\n      tag_2\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_215\n      tag_38\n      jump\t// in\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      swap1\n      dup2\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      sload\n      dup3\n      shl(0xa0, 0xffffffffffffffffffffffff)\n      dup3\n      and\n      or\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      sstore\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      dup1\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_216:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      dup2\n      mstore\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      0x04\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      dup3\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n    tag_22:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_23:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_218\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_218:\n      tag_22\n      jump\t// in\n    tag_24:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_218\n      jumpi\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_25:\n      swap3\n      swap2\n      swap3\n      tag_222\n      dup3\n      tag_24\n      jump\t// in\n    tag_222:\n      swap2\n      tag_223\n      mload(0x40)\n      swap4\n      dup5\n      tag_23\n      jump\t// in\n    tag_223:\n      dup3\n      swap5\n      dup2\n      dup5\n      mstore\n      dup2\n      dup4\n      add\n      gt\n      tag_71\n      jumpi\n      dup3\n      dup2\n      0x20\n      swap4\n      dup5\n      0x00\n      swap7\n      add\n      calldatacopy\n      add\n      add\n      mstore\n      jump\t// out\n    tag_28:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_71\n      jumpi\n      mload\n      tag_83\n      dup2\n      tag_2\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_30:\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":4651:4658  modules */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_229\n      jumpi\n      jump\t// out\n    tag_229:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_31:\n      0x20\n      dup2\n      dup4\n      sub\n      slt\n      tag_71\n      jumpi\n      dup1\n      mload\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_71\n      jumpi\n      add\n      dup2\n      0x1f\n      dup3\n      add\n      slt\n      iszero\n      tag_71\n      jumpi\n      dup1\n      mload\n      tag_237\n      dup2\n      tag_24\n      jump\t// in\n    tag_237:\n      swap3\n      tag_238\n      mload(0x40)\n      swap5\n      dup6\n      tag_23\n      jump\t// in\n    tag_238:\n      dup2\n      dup5\n      mstore\n      0x20\n      dup3\n      dup5\n      add\n      add\n      gt\n      tag_71\n      jumpi\n      tag_83\n      swap2\n      0x20\n      dup1\n      dup6\n      add\n      swap2\n      add\n      tag_4\n      jump\t// in\n    tag_32:\n      swap1\n      dup1\n      0x20\n      swap4\n      swap3\n      dup2\n      dup5\n      mstore\n      dup5\n      dup5\n      add\n      calldatacopy\n      0x00\n      dup3\n      dup3\n      add\n      dup5\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_33:\n      tag_83\n      swap5\n      swap3\n      0x60\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      0x40\n      dup3\n      add\n      mstore\n      add\n      swap2\n      tag_32\n      jump\t// in\n    tag_34:\n      jumpi(tag_243, iszero(returndatasize))\n      returndatasize\n      swap1\n      tag_245\n      dup3\n      tag_24\n      jump\t// in\n    tag_245:\n      swap2\n      tag_246\n      mload(0x40)\n      swap4\n      dup5\n      tag_23\n      jump\t// in\n    tag_246:\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump\t// out\n    tag_243:\n      0x60\n      swap1\n      jump\t// out\n    tag_35:\n      swap4\n      tag_248\n      swap3\n      tag_83\n      swap7\n      swap5\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      dup7\n      mstore\n      0x20\n      dup7\n      add\n      mstore\n      0x80\n      0x40\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      swap2\n      tag_32\n      jump\t// in\n    tag_248:\n      swap2\n      0x60\n      dup2\n      dup5\n      sub\n      swap2\n      add\n      mstore\n      tag_5\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3714:3969  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3927:3935  errorArg */\n      tag_83\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3714:3969  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n      swap2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3871:3898  tryRecover(hash, signature) */\n      tag_251\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3714:3969  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n      swap2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3871:3898  tryRecover(hash, signature) */\n      tag_39\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3927:3935  errorArg */\n      swap1\n      swap3\n      swap2\n      swap3\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_252:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2129:2907  function tryRecover(... */\n    tag_39:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup2\n      mload\n      swap2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2129:2907  function tryRecover(... */\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2319:2321  65 */\n      0x41\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2299:2321  signature.length == 65 */\n      dup4\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2319:2321  65 */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2751:2776  tryRecover(hash, v, r, s) */\n      tag_256\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2535:2731  assembly (\"memory-safe\") {... */\n      swap3\n      pop\n      0x20\n      dup3\n      add\n      mload\n      swap1\n      0x60\n      0x40\n      dup5\n      add\n      mload\n      swap4\n      add\n      mload\n      0x00\n      byte\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2751:2776  tryRecover(hash, v, r, s) */\n      swap1\n      tag_42\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2744:2776  return tryRecover(hash, v, r, s) */\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2295:2901  if (signature.length == 65) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2807:2890  return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length)) */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2823:2824  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2807:2890  return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length)) */\n      swap2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2827:2862  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2807:2890  return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length)) */\n      swap2\n      swap1\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n    tag_40:\n      0x04\n      gt\n      iszero\n      tag_257\n      jumpi\n      jump\t// out\n    tag_257:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7280:7812  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_41:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      tag_259\n      dup2\n      tag_40\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7366:7395  error == RecoverError.NoError */\n      dup1\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7411:7418  return; */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7362:7806  if (error == RecoverError.NoError) {... */\n    tag_260:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      tag_262\n      dup2\n      tag_40\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7471:7500  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7462:7500  error == RecoverError.InvalidSignature */\n      dup2\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7471:7500  RecoverError.InvalidSignature */\n      tag_263\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0xf645eedf)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7523:7546  ECDSAInvalidSignature() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7458:7806  if (error == RecoverError.InvalidSignature) {... */\n    tag_263:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      tag_265\n      dup2\n      tag_40\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7576:7611  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7567:7611  error == RecoverError.InvalidSignatureLength */\n      dup2\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7576:7611  RecoverError.InvalidSignatureLength */\n      tag_266\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0xfce698f7)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7634:7680  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup4\n      swap1\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7634:7680  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7563:7806  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_266:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup1\n      tag_269\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7710:7740  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      swap3\n      tag_40\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7701:7740  error == RecoverError.InvalidSignatureS */\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7697:7806  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7563:7806  if (error == RecoverError.InvalidSignatureLength) {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7280:7812  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7697:7806  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_270:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe2, 0x35e2f383)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7763:7795  ECDSAInvalidSignatureS(errorArg) */\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      swap2\n      swap1\n      swap2\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7634:7680  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5203:6754  function tryRecover(... */\n    tag_42:\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6283:6349  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6270:6349  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup5\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6266:6430  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      tag_273\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      swap2\n      0x20\n      swap4\n      0x80\n      swap3\n      0xff\n      0x00\n      swap6\n      mload(0x40)\n      swap5\n      dup6\n      mstore\n      and\n      dup7\n      dup5\n      add\n      mstore\n      0x40\n      dup4\n      add\n      mstore\n      0x60\n      dup3\n      add\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n      dup3\n      dup1\n      mstore\n      0x01\n      gas\n      staticcall\n      iszero\n      tag_111\n      jumpi\n      mload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":1545:7448  contract ActionExecutor is Ownable {... */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6579:6599  signer == address(0) */\n      iszero\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6575:6688  if (signer == address(0)) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6698:6747  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap1\n      0x00\n      swap1\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5203:6754  function tryRecover(... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6575:6688  if (signer == address(0)) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6615:6677  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      pop\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6615:6677  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap1\n      0x00\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6266:6430  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6365:6419  return (address(0), RecoverError.InvalidSignatureS, s) */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6381:6382  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6365:6419  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6385:6415  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6365:6419  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap2\n      swap1\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209e113db34b87c58ae94f157ee0e2523c4f51ba7281512a8fe193a9dc8d9e4d5d64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"finalize_allocation": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040908082523461014257331561012d57505f8054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600e6020825161006681610146565b828152016d20b1ba34b7b722bc32b1baba37b960911b81522060016020835161008e81610146565b82815201603160f81b81522082519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f84528483015260608201524660808201523060a082015260a0815260c081019281841060018060401b0385111761011957839052519020608052610d69908161016282396080518181816102ec01526107520152f35b634e487b7160e01b5f52604160045260245ffd5b631e4fbdf760e01b81525f6004820152602490fd5b5f80fd5b604081019081106001600160401b038211176101195760405256fe60806040526004361015610011575f80fd5b5f3560e01c806316ca96f4146100da5780632d0335ab146100bc5780632dac633b146100d55780633595945d146100d05780633644e515146100cb5780635a35b84a146100c6578063715018a6146100c15780637ecebe00146100bc57806385acd641146100ad5780638da5cb5b146100b7578063a78e922b146100b2578063b0b6cc1a146100ad5763f2fde38b146100a8575f80fd5b610923565b610806565b61085f565b610838565b610522565b6107af565b610775565b61073b565b6106ae565b61055d565b61017c565b6001600160a01b038116036100f057565b5f80fd5b9181601f840112156100f05782359167ffffffffffffffff83116100f057602083818601950101116100f057565b5f5b8381106101335750505f910152565b8181015183820152602001610124565b9060209161015c81518092818552858086019101610122565b601f01601f1916010190565b906020610179928181520190610143565b90565b346100f05760c03660031901126100f0576101986024356100df565b60443567ffffffffffffffff6064358181116100f0576101bc9036906004016100f4565b92909160a4359081116100f0576101d79036906004016100f4565b6101fb6101ee6004355f52600160205260405f2090565b546001600160a01b031690565b906001600160a01b03821615610510576024356001600160a01b0316156104fe5760843542116104ec576001600160a01b03602435165f90815260026020526040902061033c9190610336905494610254368a8a610a08565b8051602091820120604080517f2eaaf47f5d8d55bbdfc0070d3bf4e5c48f0e169aeb82b023197c8b2c69c6a3389381019384526024356001600160a01b0316918101919091526004356060820152608081018a905260a081019190915260c0810188905260843560e0808301919091528152601f1991906102d7610100826109c5565b51902060405161190160f01b602082019081527f00000000000000000000000000000000000000000000000000000000000000006022830152604282019290925260629283018152909161032b90826109c5565b519020923691610a08565b90610b8b565b604051638da5cb5b60e01b815292906020846004816024356001600160a01b03165afa9384156104e7575f946104b6575b506001600160a01b03169283159081156104a2575b506104905761039090610a5e565b6001600160a01b03602435165f90815260026020526040902055604051639e5d4c4960e01b81525f81806103ca8989898860048601610aff565b0381836024356001600160a01b03165af15f918161046c575b5061040f576103f0610b23565b8051908161040a57604051632b3f6d1160e21b8152600490fd5b602001fd5b604051610468969195600435956024356001600160a01b0316947fbdc4e709cee662270d6b1f3b98b847541936a3762b56f7229d50448d83476e24948493610459938b9386610b52565b0390a460405191829182610168565b0390f35b6104899192503d805f833e61048181836109c5565b810190610a80565b905f6103e3565b604051632057875960e21b8152600490fd5b6001600160a01b031684141590505f610382565b6104d991945060203d6020116104e0575b6104d181836109c5565b810190610a3e565b925f61036d565b503d6104c7565b610a53565b604051630819bdcd60e01b8152600490fd5b60405163d92e233d60e01b8152600490fd5b604051634e25774f60e11b8152600490fd5b346100f05760203660031901126100f05760043561053f816100df565b60018060a01b03165f526002602052602060405f2054604051908152f35b346100f05760803660031901126100f0576004602435813561057e826100df565b6044359160643567ffffffffffffffff81116100f0576105a190369086016100f4565b9390916105ac610ba1565b6105c16101ee855f52600160205260405f2090565b906001600160a01b03908183161561069d571692831561068c57825f83896105fd8a866040519687958695639e5d4c4960e01b87528601610aff565b038183895af15f9181610670575b506106325787610619610b23565b8051908161040a57604051632b3f6d1160e21b81528390fd5b6104689750916104595f9594927fbdc4e709cee662270d6b1f3b98b847541936a3762b56f7229d50448d83476e249498899160405195869586610b52565b6106859192503d805f833e61048181836109c5565b905f61060b565b60405163d92e233d60e01b81528790fd5b604051634e25774f60e11b81528890fd5b346100f05760203660031901126100f0576004356106ca610ba1565b5f818152600160205260409020546001600160a01b0316908115610729575f81815260016020526040812080546001600160a01b03191690557fc631c273472e359a1548940daca1e146b3b6bf7582363a16e11b9f570783baee9080a3005b604051631c94b02360e21b8152600490fd5b346100f0575f3660031901126100f05760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346100f0575f3660031901126100f05760206040517f2eaaf47f5d8d55bbdfc0070d3bf4e5c48f0e169aeb82b023197c8b2c69c6a3388152f35b346100f0575f3660031901126100f0576107c7610ba1565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100f05760203660031901126100f0576004355f526001602052602060018060a01b0360405f205416604051908152f35b346100f0575f3660031901126100f0575f546040516001600160a01b039091168152602090f35b346100f05760403660031901126100f05760243560043561087f826100df565b610887610ba1565b6001600160a01b03828116929083156104fe575f83815260016020526040902054166001600160a01b0316610911576108eb906108cc835f52600160205260405f2090565b80546001600160a01b0319166001600160a01b03909216919091179055565b7fd63be02155b46636309fb0a4a79647c60971aecaad53cbc83aad90cd75fd9d545f80a3005b6040516395b0718d60e01b8152600490fd5b346100f05760203660031901126100f057600435610940816100df565b610948610ba1565b6001600160a01b03908116908115610999575f54826bffffffffffffffffffffffff60a01b8216175f55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b604051631e4fbdf760e01b81525f6004820152602490fd5b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff8211176109e757604052565b6109b1565b67ffffffffffffffff81116109e757601f01601f191660200190565b929192610a14826109ec565b91610a2260405193846109c5565b8294818452818301116100f0578281602093845f960137010152565b908160209103126100f05751610179816100df565b6040513d5f823e3d90fd5b9060018201809211610a6c57565b634e487b7160e01b5f52601160045260245ffd5b6020818303126100f05780519067ffffffffffffffff82116100f0570181601f820112156100f0578051610ab3816109ec565b92610ac160405194856109c5565b818452602082840101116100f0576101799160208085019101610122565b908060209392818452848401375f828201840152601f01601f1916010190565b610179949260609260018060a01b0316825260208201528160408201520191610adf565b3d15610b4d573d90610b34826109ec565b91610b4260405193846109c5565b82523d5f602084013e565b606090565b93610b7d9261017996949260018060a01b031686526020860152608060408601526080850191610adf565b916060818403910152610143565b61017991610b9891610bcc565b90929192610c24565b5f546001600160a01b03163303610bb457565b60405163118cdaa760e01b8152336004820152602490fd5b8151919060418303610bfc57610bf59250602082015190606060408401519301515f1a90610cb1565b9192909190565b50505f9160029190565b60041115610c1057565b634e487b7160e01b5f52602160045260245ffd5b610c2d81610c06565b80610c36575050565b610c3f81610c06565b60018103610c595760405163f645eedf60e01b8152600490fd5b610c6281610c06565b60028103610c835760405163fce698f760e01b815260048101839052602490fd5b80610c8f600392610c06565b14610c975750565b6040516335e2f38360e21b81526004810191909152602490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610d28579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa156104e7575f516001600160a01b03811615610d1e57905f905f90565b505f906001905f90565b5050505f916003919056fea26469706673582212209e113db34b87c58ae94f157ee0e2523c4f51ba7281512a8fe193a9dc8d9e4d5d64736f6c63430008180033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE CALLVALUE PUSH2 0x142 JUMPI CALLER ISZERO PUSH2 0x12D JUMPI POP PUSH0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0xE PUSH1 0x20 DUP3 MLOAD PUSH2 0x66 DUP2 PUSH2 0x146 JUMP JUMPDEST DUP3 DUP2 MSTORE ADD PUSH14 0x20B1BA34B7B722BC32B1BABA37B9 PUSH1 0x91 SHL DUP2 MSTORE KECCAK256 PUSH1 0x1 PUSH1 0x20 DUP4 MLOAD PUSH2 0x8E DUP2 PUSH2 0x146 JUMP JUMPDEST DUP3 DUP2 MSTORE ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE KECCAK256 DUP3 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE DUP5 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD SWAP3 DUP2 DUP5 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP6 GT OR PUSH2 0x119 JUMPI DUP4 SWAP1 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE PUSH2 0xD69 SWAP1 DUP2 PUSH2 0x162 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2EC ADD MSTORE PUSH2 0x752 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x119 JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16CA96F4 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x2D0335AB EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x2DAC633B EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x3595945D EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x5A35B84A EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x85ACD641 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xA78E922B EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xB0B6CC1A EQ PUSH2 0xAD JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x923 JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH2 0x73B JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST PUSH2 0x17C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0xF0 JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xF0 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xF0 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0xF0 JUMPI JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x133 JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x15C DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x122 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x179 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x143 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH2 0x198 PUSH1 0x24 CALLDATALOAD PUSH2 0xDF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x64 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xF0 JUMPI PUSH2 0x1BC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF4 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0xA4 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xF0 JUMPI PUSH2 0x1D7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x1FB PUSH2 0x1EE PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x510 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x4FE JUMPI PUSH1 0x84 CALLDATALOAD TIMESTAMP GT PUSH2 0x4EC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x336 SWAP1 SLOAD SWAP5 PUSH2 0x254 CALLDATASIZE DUP11 DUP11 PUSH2 0xA08 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH32 0x2EAAF47F5D8D55BBDFC0070D3BF4E5C48F0E169AEB82B023197C8B2C69C6A338 SWAP4 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xE0 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0x1F NOT SWAP2 SWAP1 PUSH2 0x2D7 PUSH2 0x100 DUP3 PUSH2 0x9C5 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH32 0x0 PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x42 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x62 SWAP3 DUP4 ADD DUP2 MSTORE SWAP1 SWAP2 PUSH2 0x32B SWAP1 DUP3 PUSH2 0x9C5 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 CALLDATASIZE SWAP2 PUSH2 0xA08 JUMP JUMPDEST SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP1 PUSH1 0x20 DUP5 PUSH1 0x4 DUP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x4E7 JUMPI PUSH0 SWAP5 PUSH2 0x4B6 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x4A2 JUMPI JUMPDEST POP PUSH2 0x490 JUMPI PUSH2 0x390 SWAP1 PUSH2 0xA5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x40 MLOAD PUSH4 0x9E5D4C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP2 DUP1 PUSH2 0x3CA DUP10 DUP10 DUP10 DUP9 PUSH1 0x4 DUP7 ADD PUSH2 0xAFF JUMP JUMPDEST SUB DUP2 DUP4 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH0 SWAP2 DUP2 PUSH2 0x46C JUMPI JUMPDEST POP PUSH2 0x40F JUMPI PUSH2 0x3F0 PUSH2 0xB23 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2B3F6D11 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x468 SWAP7 SWAP2 SWAP6 PUSH1 0x4 CALLDATALOAD SWAP6 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH32 0xBDC4E709CEE662270D6B1F3B98B847541936A3762B56F7229D50448D83476E24 SWAP5 DUP5 SWAP4 PUSH2 0x459 SWAP4 DUP12 SWAP4 DUP7 PUSH2 0xB52 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x168 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x489 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x481 DUP2 DUP4 PUSH2 0x9C5 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA80 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20578759 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 EQ ISZERO SWAP1 POP PUSH0 PUSH2 0x382 JUMP JUMPDEST PUSH2 0x4D9 SWAP2 SWAP5 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4E0 JUMPI JUMPDEST PUSH2 0x4D1 DUP2 DUP4 PUSH2 0x9C5 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA3E JUMP JUMPDEST SWAP3 PUSH0 PUSH2 0x36D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x819BDCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4E25774F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x53F DUP2 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 PUSH1 0x24 CALLDATALOAD DUP2 CALLDATALOAD PUSH2 0x57E DUP3 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF0 JUMPI PUSH2 0x5A1 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0xF4 JUMP JUMPDEST SWAP4 SWAP1 SWAP2 PUSH2 0x5AC PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x1EE DUP6 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND ISZERO PUSH2 0x69D JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x68C JUMPI DUP3 PUSH0 DUP4 DUP10 PUSH2 0x5FD DUP11 DUP7 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0x9E5D4C49 PUSH1 0xE0 SHL DUP8 MSTORE DUP7 ADD PUSH2 0xAFF JUMP JUMPDEST SUB DUP2 DUP4 DUP10 GAS CALL PUSH0 SWAP2 DUP2 PUSH2 0x670 JUMPI JUMPDEST POP PUSH2 0x632 JUMPI DUP8 PUSH2 0x619 PUSH2 0xB23 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2B3F6D11 PUSH1 0xE2 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST PUSH2 0x468 SWAP8 POP SWAP2 PUSH2 0x459 PUSH0 SWAP6 SWAP5 SWAP3 PUSH32 0xBDC4E709CEE662270D6B1F3B98B847541936A3762B56F7229D50448D83476E24 SWAP5 SWAP9 DUP10 SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 PUSH2 0xB52 JUMP JUMPDEST PUSH2 0x685 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x481 DUP2 DUP4 PUSH2 0x9C5 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x60B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP8 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4E25774F PUSH1 0xE1 SHL DUP2 MSTORE DUP9 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6CA PUSH2 0xBA1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x729 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH32 0xC631C273472E359A1548940DACA1E146B3B6BF7582363A16E11B9F570783BAEE SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C94B023 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x2EAAF47F5D8D55BBDFC0070D3BF4E5C48F0E169AEB82B023197C8B2C69C6A338 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH2 0x7C7 PUSH2 0xBA1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x87F DUP3 PUSH2 0xDF JUMP JUMPDEST PUSH2 0x887 PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP3 SWAP1 DUP4 ISZERO PUSH2 0x4FE JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x911 JUMPI PUSH2 0x8EB SWAP1 PUSH2 0x8CC DUP4 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0xD63BE02155B46636309FB0A4A79647C60971AECAAD53CBC83AAD90CD75FD9D54 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95B0718D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x940 DUP2 PUSH2 0xDF JUMP JUMPDEST PUSH2 0x948 PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x999 JUMPI PUSH0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9E7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x9E7 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xA14 DUP3 PUSH2 0x9EC JUMP JUMPDEST SWAP2 PUSH2 0xA22 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x9C5 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0xF0 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xF0 JUMPI MLOAD PUSH2 0x179 DUP2 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xA6C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0xF0 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xF0 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xF0 JUMPI DUP1 MLOAD PUSH2 0xAB3 DUP2 PUSH2 0x9EC JUMP JUMPDEST SWAP3 PUSH2 0xAC1 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x9C5 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0xF0 JUMPI PUSH2 0x179 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x122 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x179 SWAP5 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP2 PUSH2 0xADF JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xB4D JUMPI RETURNDATASIZE SWAP1 PUSH2 0xB34 DUP3 PUSH2 0x9EC JUMP JUMPDEST SWAP2 PUSH2 0xB42 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x9C5 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP4 PUSH2 0xB7D SWAP3 PUSH2 0x179 SWAP7 SWAP5 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP2 PUSH2 0xADF JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x143 JUMP JUMPDEST PUSH2 0x179 SWAP2 PUSH2 0xB98 SWAP2 PUSH2 0xBCC JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xC24 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xBB4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0xBFC JUMPI PUSH2 0xBF5 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH0 BYTE SWAP1 PUSH2 0xCB1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0xC10 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xC2D DUP2 PUSH2 0xC06 JUMP JUMPDEST DUP1 PUSH2 0xC36 JUMPI POP POP JUMP JUMPDEST PUSH2 0xC3F DUP2 PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0xC59 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0xC62 DUP2 PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xC8F PUSH1 0x3 SWAP3 PUSH2 0xC06 JUMP JUMPDEST EQ PUSH2 0xC97 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0xD28 JUMPI SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP3 PUSH1 0xFF PUSH0 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x4E7 JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD1E JUMPI SWAP1 PUSH0 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 PUSH1 0x1 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 GT RETURNDATASIZE 0xB3 0x4B DUP8 0xC5 DUP11 0xE9 0x4F ISZERO PUSH31 0xE0E2523C4F51BA7281512A8FE193A9DC8D9E4D5D64736F6C63430008180033 ",
							"sourceMap": "1545:5903:3:-:0;;;;;;;;;2651:10;1273:26:0;1269:95;;-1:-1:-1;1297:1:0;1545:5903:3;;2651:10;-1:-1:-1;;;;;;1545:5903:3;;;;;;2651:10;-1:-1:-1;;;;;1545:5903:3;;;;3052:40:0;;1297:1;3052:40;1545:5903:3;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;1545:5903:3;;3023:34;1545:5903;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;1545:5903:3;;3075:21;1545:5903;;2802:364;1545:5903;2802:364;;1545:5903;2910:95;1545:5903;;;;;;;;;;2698:53;1545:5903;;;;3147:4;1545:5903;;;;;2802:364;;1545:5903;;;;;;;;;;;;;;;;;;;;;2779:397;;1545:5903;2760:416;1545:5903;;;;;;;;;;;;;;;;;;;;;;1297:1:0;1545:5903:3;;;;;1297:1:0;1545:5903:3;1269:95:0;-1:-1:-1;;;1322:31:0;;1297:1;1322:31;;;1545:5903:3;;;1322:31:0;1545:5903:3;;;;;;;;;;;-1:-1:-1;;;;;1545:5903:3;;;;;;;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 2622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 2568,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_bytes_fromMemory": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address_uint256_bytes_calldata": {
									"entryPoint": 2815,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_address_uint256_bytes_calldata_bytes": {
									"entryPoint": 2898,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes32_address_bytes32_uint256_bytes32_uint256_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_bytes_calldata": {
									"entryPoint": 2783,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_bytes_memory_ptr": {
									"entryPoint": 323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_packed_stringliteral_301a_bytes32_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 2540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 2654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 290,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"external_fun_ACTION_TYPEHASH": {
									"entryPoint": 1909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_DOMAIN_SEPARATOR": {
									"entryPoint": 1851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_executeModuleActionByOwner": {
									"entryPoint": 1373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_executeModuleActionWithSig": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getModule": {
									"entryPoint": 2054,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getNonce": {
									"entryPoint": 1314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_owner": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_registerModule": {
									"entryPoint": 2143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_renounceOwnership": {
									"entryPoint": 1967,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_transferOwnership": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_unregisterModule": {
									"entryPoint": 1710,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"extract_returndata": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_checkOwner": {
									"entryPoint": 2977,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_recover": {
									"entryPoint": 2955,
									"id": 281,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_throwError": {
									"entryPoint": 3108,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_tryRecover": {
									"entryPoint": 3020,
									"id": 251,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"fun_tryRecover_439": {
									"entryPoint": 3249,
									"id": 439,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"mapping_index_access_mapping_address_uint256_of_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_bytes32_address_of_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"read_from_storage_split_offset_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_forward": {
									"entryPoint": 2643,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"update_storage_value_offsett_address_to_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"validator_assert_enum_RecoverError": {
									"entryPoint": 3078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"609": [
									{
										"length": 32,
										"start": 748
									},
									{
										"length": 32,
										"start": 1874
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361015610011575f80fd5b5f3560e01c806316ca96f4146100da5780632d0335ab146100bc5780632dac633b146100d55780633595945d146100d05780633644e515146100cb5780635a35b84a146100c6578063715018a6146100c15780637ecebe00146100bc57806385acd641146100ad5780638da5cb5b146100b7578063a78e922b146100b2578063b0b6cc1a146100ad5763f2fde38b146100a8575f80fd5b610923565b610806565b61085f565b610838565b610522565b6107af565b610775565b61073b565b6106ae565b61055d565b61017c565b6001600160a01b038116036100f057565b5f80fd5b9181601f840112156100f05782359167ffffffffffffffff83116100f057602083818601950101116100f057565b5f5b8381106101335750505f910152565b8181015183820152602001610124565b9060209161015c81518092818552858086019101610122565b601f01601f1916010190565b906020610179928181520190610143565b90565b346100f05760c03660031901126100f0576101986024356100df565b60443567ffffffffffffffff6064358181116100f0576101bc9036906004016100f4565b92909160a4359081116100f0576101d79036906004016100f4565b6101fb6101ee6004355f52600160205260405f2090565b546001600160a01b031690565b906001600160a01b03821615610510576024356001600160a01b0316156104fe5760843542116104ec576001600160a01b03602435165f90815260026020526040902061033c9190610336905494610254368a8a610a08565b8051602091820120604080517f2eaaf47f5d8d55bbdfc0070d3bf4e5c48f0e169aeb82b023197c8b2c69c6a3389381019384526024356001600160a01b0316918101919091526004356060820152608081018a905260a081019190915260c0810188905260843560e0808301919091528152601f1991906102d7610100826109c5565b51902060405161190160f01b602082019081527f00000000000000000000000000000000000000000000000000000000000000006022830152604282019290925260629283018152909161032b90826109c5565b519020923691610a08565b90610b8b565b604051638da5cb5b60e01b815292906020846004816024356001600160a01b03165afa9384156104e7575f946104b6575b506001600160a01b03169283159081156104a2575b506104905761039090610a5e565b6001600160a01b03602435165f90815260026020526040902055604051639e5d4c4960e01b81525f81806103ca8989898860048601610aff565b0381836024356001600160a01b03165af15f918161046c575b5061040f576103f0610b23565b8051908161040a57604051632b3f6d1160e21b8152600490fd5b602001fd5b604051610468969195600435956024356001600160a01b0316947fbdc4e709cee662270d6b1f3b98b847541936a3762b56f7229d50448d83476e24948493610459938b9386610b52565b0390a460405191829182610168565b0390f35b6104899192503d805f833e61048181836109c5565b810190610a80565b905f6103e3565b604051632057875960e21b8152600490fd5b6001600160a01b031684141590505f610382565b6104d991945060203d6020116104e0575b6104d181836109c5565b810190610a3e565b925f61036d565b503d6104c7565b610a53565b604051630819bdcd60e01b8152600490fd5b60405163d92e233d60e01b8152600490fd5b604051634e25774f60e11b8152600490fd5b346100f05760203660031901126100f05760043561053f816100df565b60018060a01b03165f526002602052602060405f2054604051908152f35b346100f05760803660031901126100f0576004602435813561057e826100df565b6044359160643567ffffffffffffffff81116100f0576105a190369086016100f4565b9390916105ac610ba1565b6105c16101ee855f52600160205260405f2090565b906001600160a01b03908183161561069d571692831561068c57825f83896105fd8a866040519687958695639e5d4c4960e01b87528601610aff565b038183895af15f9181610670575b506106325787610619610b23565b8051908161040a57604051632b3f6d1160e21b81528390fd5b6104689750916104595f9594927fbdc4e709cee662270d6b1f3b98b847541936a3762b56f7229d50448d83476e249498899160405195869586610b52565b6106859192503d805f833e61048181836109c5565b905f61060b565b60405163d92e233d60e01b81528790fd5b604051634e25774f60e11b81528890fd5b346100f05760203660031901126100f0576004356106ca610ba1565b5f818152600160205260409020546001600160a01b0316908115610729575f81815260016020526040812080546001600160a01b03191690557fc631c273472e359a1548940daca1e146b3b6bf7582363a16e11b9f570783baee9080a3005b604051631c94b02360e21b8152600490fd5b346100f0575f3660031901126100f05760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346100f0575f3660031901126100f05760206040517f2eaaf47f5d8d55bbdfc0070d3bf4e5c48f0e169aeb82b023197c8b2c69c6a3388152f35b346100f0575f3660031901126100f0576107c7610ba1565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100f05760203660031901126100f0576004355f526001602052602060018060a01b0360405f205416604051908152f35b346100f0575f3660031901126100f0575f546040516001600160a01b039091168152602090f35b346100f05760403660031901126100f05760243560043561087f826100df565b610887610ba1565b6001600160a01b03828116929083156104fe575f83815260016020526040902054166001600160a01b0316610911576108eb906108cc835f52600160205260405f2090565b80546001600160a01b0319166001600160a01b03909216919091179055565b7fd63be02155b46636309fb0a4a79647c60971aecaad53cbc83aad90cd75fd9d545f80a3005b6040516395b0718d60e01b8152600490fd5b346100f05760203660031901126100f057600435610940816100df565b610948610ba1565b6001600160a01b03908116908115610999575f54826bffffffffffffffffffffffff60a01b8216175f55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b604051631e4fbdf760e01b81525f6004820152602490fd5b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff8211176109e757604052565b6109b1565b67ffffffffffffffff81116109e757601f01601f191660200190565b929192610a14826109ec565b91610a2260405193846109c5565b8294818452818301116100f0578281602093845f960137010152565b908160209103126100f05751610179816100df565b6040513d5f823e3d90fd5b9060018201809211610a6c57565b634e487b7160e01b5f52601160045260245ffd5b6020818303126100f05780519067ffffffffffffffff82116100f0570181601f820112156100f0578051610ab3816109ec565b92610ac160405194856109c5565b818452602082840101116100f0576101799160208085019101610122565b908060209392818452848401375f828201840152601f01601f1916010190565b610179949260609260018060a01b0316825260208201528160408201520191610adf565b3d15610b4d573d90610b34826109ec565b91610b4260405193846109c5565b82523d5f602084013e565b606090565b93610b7d9261017996949260018060a01b031686526020860152608060408601526080850191610adf565b916060818403910152610143565b61017991610b9891610bcc565b90929192610c24565b5f546001600160a01b03163303610bb457565b60405163118cdaa760e01b8152336004820152602490fd5b8151919060418303610bfc57610bf59250602082015190606060408401519301515f1a90610cb1565b9192909190565b50505f9160029190565b60041115610c1057565b634e487b7160e01b5f52602160045260245ffd5b610c2d81610c06565b80610c36575050565b610c3f81610c06565b60018103610c595760405163f645eedf60e01b8152600490fd5b610c6281610c06565b60028103610c835760405163fce698f760e01b815260048101839052602490fd5b80610c8f600392610c06565b14610c975750565b6040516335e2f38360e21b81526004810191909152602490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610d28579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa156104e7575f516001600160a01b03811615610d1e57905f905f90565b505f906001905f90565b5050505f916003919056fea26469706673582212209e113db34b87c58ae94f157ee0e2523c4f51ba7281512a8fe193a9dc8d9e4d5d64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16CA96F4 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x2D0335AB EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x2DAC633B EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x3595945D EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x5A35B84A EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x85ACD641 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xA78E922B EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xB0B6CC1A EQ PUSH2 0xAD JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x923 JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH2 0x73B JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST PUSH2 0x17C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0xF0 JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xF0 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xF0 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0xF0 JUMPI JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x133 JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x15C DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x122 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x179 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x143 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH2 0x198 PUSH1 0x24 CALLDATALOAD PUSH2 0xDF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x64 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xF0 JUMPI PUSH2 0x1BC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF4 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0xA4 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xF0 JUMPI PUSH2 0x1D7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x1FB PUSH2 0x1EE PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x510 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x4FE JUMPI PUSH1 0x84 CALLDATALOAD TIMESTAMP GT PUSH2 0x4EC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x336 SWAP1 SLOAD SWAP5 PUSH2 0x254 CALLDATASIZE DUP11 DUP11 PUSH2 0xA08 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH32 0x2EAAF47F5D8D55BBDFC0070D3BF4E5C48F0E169AEB82B023197C8B2C69C6A338 SWAP4 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xE0 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0x1F NOT SWAP2 SWAP1 PUSH2 0x2D7 PUSH2 0x100 DUP3 PUSH2 0x9C5 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH32 0x0 PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x42 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x62 SWAP3 DUP4 ADD DUP2 MSTORE SWAP1 SWAP2 PUSH2 0x32B SWAP1 DUP3 PUSH2 0x9C5 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 CALLDATASIZE SWAP2 PUSH2 0xA08 JUMP JUMPDEST SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP1 PUSH1 0x20 DUP5 PUSH1 0x4 DUP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x4E7 JUMPI PUSH0 SWAP5 PUSH2 0x4B6 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x4A2 JUMPI JUMPDEST POP PUSH2 0x490 JUMPI PUSH2 0x390 SWAP1 PUSH2 0xA5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x40 MLOAD PUSH4 0x9E5D4C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP2 DUP1 PUSH2 0x3CA DUP10 DUP10 DUP10 DUP9 PUSH1 0x4 DUP7 ADD PUSH2 0xAFF JUMP JUMPDEST SUB DUP2 DUP4 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH0 SWAP2 DUP2 PUSH2 0x46C JUMPI JUMPDEST POP PUSH2 0x40F JUMPI PUSH2 0x3F0 PUSH2 0xB23 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2B3F6D11 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x468 SWAP7 SWAP2 SWAP6 PUSH1 0x4 CALLDATALOAD SWAP6 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH32 0xBDC4E709CEE662270D6B1F3B98B847541936A3762B56F7229D50448D83476E24 SWAP5 DUP5 SWAP4 PUSH2 0x459 SWAP4 DUP12 SWAP4 DUP7 PUSH2 0xB52 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x168 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x489 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x481 DUP2 DUP4 PUSH2 0x9C5 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA80 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20578759 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 EQ ISZERO SWAP1 POP PUSH0 PUSH2 0x382 JUMP JUMPDEST PUSH2 0x4D9 SWAP2 SWAP5 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4E0 JUMPI JUMPDEST PUSH2 0x4D1 DUP2 DUP4 PUSH2 0x9C5 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA3E JUMP JUMPDEST SWAP3 PUSH0 PUSH2 0x36D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x819BDCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4E25774F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x53F DUP2 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 PUSH1 0x24 CALLDATALOAD DUP2 CALLDATALOAD PUSH2 0x57E DUP3 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF0 JUMPI PUSH2 0x5A1 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0xF4 JUMP JUMPDEST SWAP4 SWAP1 SWAP2 PUSH2 0x5AC PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x1EE DUP6 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND ISZERO PUSH2 0x69D JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x68C JUMPI DUP3 PUSH0 DUP4 DUP10 PUSH2 0x5FD DUP11 DUP7 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0x9E5D4C49 PUSH1 0xE0 SHL DUP8 MSTORE DUP7 ADD PUSH2 0xAFF JUMP JUMPDEST SUB DUP2 DUP4 DUP10 GAS CALL PUSH0 SWAP2 DUP2 PUSH2 0x670 JUMPI JUMPDEST POP PUSH2 0x632 JUMPI DUP8 PUSH2 0x619 PUSH2 0xB23 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2B3F6D11 PUSH1 0xE2 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST PUSH2 0x468 SWAP8 POP SWAP2 PUSH2 0x459 PUSH0 SWAP6 SWAP5 SWAP3 PUSH32 0xBDC4E709CEE662270D6B1F3B98B847541936A3762B56F7229D50448D83476E24 SWAP5 SWAP9 DUP10 SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 PUSH2 0xB52 JUMP JUMPDEST PUSH2 0x685 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x481 DUP2 DUP4 PUSH2 0x9C5 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x60B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP8 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4E25774F PUSH1 0xE1 SHL DUP2 MSTORE DUP9 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6CA PUSH2 0xBA1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x729 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH32 0xC631C273472E359A1548940DACA1E146B3B6BF7582363A16E11B9F570783BAEE SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C94B023 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x2EAAF47F5D8D55BBDFC0070D3BF4E5C48F0E169AEB82B023197C8B2C69C6A338 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH2 0x7C7 PUSH2 0xBA1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x87F DUP3 PUSH2 0xDF JUMP JUMPDEST PUSH2 0x887 PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP3 SWAP1 DUP4 ISZERO PUSH2 0x4FE JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x911 JUMPI PUSH2 0x8EB SWAP1 PUSH2 0x8CC DUP4 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0xD63BE02155B46636309FB0A4A79647C60971AECAAD53CBC83AAD90CD75FD9D54 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95B0718D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x940 DUP2 PUSH2 0xDF JUMP JUMPDEST PUSH2 0x948 PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x999 JUMPI PUSH0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9E7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x9E7 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xA14 DUP3 PUSH2 0x9EC JUMP JUMPDEST SWAP2 PUSH2 0xA22 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x9C5 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0xF0 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xF0 JUMPI MLOAD PUSH2 0x179 DUP2 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xA6C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0xF0 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xF0 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xF0 JUMPI DUP1 MLOAD PUSH2 0xAB3 DUP2 PUSH2 0x9EC JUMP JUMPDEST SWAP3 PUSH2 0xAC1 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x9C5 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0xF0 JUMPI PUSH2 0x179 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x122 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x179 SWAP5 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP2 PUSH2 0xADF JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xB4D JUMPI RETURNDATASIZE SWAP1 PUSH2 0xB34 DUP3 PUSH2 0x9EC JUMP JUMPDEST SWAP2 PUSH2 0xB42 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x9C5 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP4 PUSH2 0xB7D SWAP3 PUSH2 0x179 SWAP7 SWAP5 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP2 PUSH2 0xADF JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x143 JUMP JUMPDEST PUSH2 0x179 SWAP2 PUSH2 0xB98 SWAP2 PUSH2 0xBCC JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xC24 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xBB4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0xBFC JUMPI PUSH2 0xBF5 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH0 BYTE SWAP1 PUSH2 0xCB1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0xC10 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xC2D DUP2 PUSH2 0xC06 JUMP JUMPDEST DUP1 PUSH2 0xC36 JUMPI POP POP JUMP JUMPDEST PUSH2 0xC3F DUP2 PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0xC59 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0xC62 DUP2 PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xC8F PUSH1 0x3 SWAP3 PUSH2 0xC06 JUMP JUMPDEST EQ PUSH2 0xC97 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0xD28 JUMPI SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP3 PUSH1 0xFF PUSH0 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x4E7 JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD1E JUMPI SWAP1 PUSH0 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 PUSH1 0x1 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 GT RETURNDATASIZE 0xB3 0x4B DUP8 0xC5 DUP11 0xE9 0x4F ISZERO PUSH31 0xE0E2523C4F51BA7281512A8FE193A9DC8D9E4D5D64736F6C63430008180033 ",
							"sourceMap": "1545:5903:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;1545:5903:3;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1545:5903:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1545:5903:3;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;1545:5903:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;4651:17;;1545:5903;;;;6468:7;1545:5903;;;;;;;4651:17;1545:5903;-1:-1:-1;;;;;1545:5903:3;;;4651:17;1545:5903;-1:-1:-1;;;;;1545:5903:3;;4682:20;4678:54;;1545:5903;;-1:-1:-1;;;;;1545:5903:3;4746:19;4742:45;;1545:5903;;4801:15;:26;4797:57;;-1:-1:-1;;;;;1545:5903:3;;;;;;;4908:6;1545:5903;;;;;5198:19;;1545:5903;;;;;;;;;;:::i;:::-;;;;;;;5014:15;1545:5903;;;2515:107;4962:85;;;1545:5903;;;;;-1:-1:-1;;;;;1545:5903:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4962:85;;-1:-1:-1;;;4962:85:3;;1545:5903;;4962:85;:::i;:::-;1545:5903;4952:96;;1545:5903;;-1:-1:-1;;;1545:5903:3;5085:58;;1545:5903;;;5114:16;1545:5903;;;;;;;;;;;;5085:58;;;;;;;;;1545:5903;5085:58;:::i;:::-;1545:5903;5075:69;;1545:5903;;;;:::i;:::-;5198:19;;:::i;:::-;1545:5903;;-1:-1:-1;;;5295:25:3;;1545:5903;;;;;;;;-1:-1:-1;;;;;1545:5903:3;5295:25;;;;;;;-1:-1:-1;5295:25:3;;;1545:5903;-1:-1:-1;;;;;;1545:5903:3;;5334:20;;;:44;;;;1545:5903;5330:72;;;5456:9;;;:::i;:::-;-1:-1:-1;;;;;1545:5903:3;;;;;;;4908:6;1545:5903;;;;;;;;-1:-1:-1;;;5591:50:3;;-1:-1:-1;1545:5903:3;;5591:50;;;;;1545:5903;5591:50;;;:::i;:::-;;1545:5903;;;;-1:-1:-1;;;;;1545:5903:3;5591:50;;-1:-1:-1;;5591:50:3;;;1545:5903;-1:-1:-1;5587:387:3;;5700:274;;:::i;:::-;1545:5903;;5788:17;;5784:142;;1545:5903;;-1:-1:-1;;;5946:17:3;;1545:5903;;5946:17;5784:142;1545:5903;5825:87;;5587:387;1545:5903;;;;5681:7;;1545:5903;;;;;-1:-1:-1;;;;;1545:5903:3;;5989:65;;1545:5903;;5989:65;;5681:7;;1545:5903;5989:65;:::i;:::-;;;;1545:5903;;;;;;;:::i;:::-;;;;5591:50;;;;;;;-1:-1:-1;5591:50:3;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;5330:72;1545:5903;;-1:-1:-1;;;5387:15:3;;1545:5903;;5387:15;5334:44;-1:-1:-1;;;;;1545:5903:3;5358:20;;;;-1:-1:-1;5334:44:3;;;5295:25;;;;;1545:5903;5295:25;1545:5903;5295:25;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;4797:57::-;1545:5903;;-1:-1:-1;;;4836:18:3;;1545:5903;;4836:18;4742:45;1545:5903;;-1:-1:-1;;;4774:13:3;;1545:5903;;4774:13;4678:54;1545:5903;;-1:-1:-1;;;4711:21:3;;1545:5903;;4711:21;1545:5903;;;;;;-1:-1:-1;;1545:5903:3;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1545:5903:3;7426:6;1545:5903;;;;-1:-1:-1;1545:5903:3;;;;;;;;;;;;;;-1:-1:-1;;1545:5903:3;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;;;;:::i;:::-;6468:17:3;;;1545:5903;;6468:7;1545:5903;;;;;;;6468:17;1545:5903;-1:-1:-1;;;;;1545:5903:3;;;;6499:20;6495:54;;1545:5903;6563:19;;;6559:45;;1545:5903;-1:-1:-1;1545:5903:3;;6645:50;1545:5903;;;;;;;;;;;;6645:50;;;;;:::i;:::-;;;;;;;-1:-1:-1;;6645:50:3;;;1545:5903;-1:-1:-1;6641:345:3;;6754:232;;;:::i;:::-;1545:5903;;6800:17;;6796:142;;1545:5903;;-1:-1:-1;;;6958:17:3;;1545:5903;;6958:17;6641:345;1545:5903;6735:7;;;7080:69;-1:-1:-1;6735:7:3;;;7080:69;6735:7;6641:345;;;1545:5903;;7080:69;;;;;:::i;6645:50::-;;;;;;;-1:-1:-1;6645:50:3;;;;;;:::i;:::-;;;;;6559:45;1545:5903;;-1:-1:-1;;;6591:13:3;;1545:5903;;6591:13;6495:54;1545:5903;;-1:-1:-1;;;6528:21:3;;1545:5903;;6528:21;1545:5903;;;;;;-1:-1:-1;;1545:5903:3;;;;;;1500:62:0;;:::i;:::-;-1:-1:-1;1545:5903:3;;;3629:7;1545:5903;;;;;;-1:-1:-1;;;;;1545:5903:3;;3660:17;;3656:46;;-1:-1:-1;1545:5903:3;;;3629:7;1545:5903;;;;;;;-1:-1:-1;;;;;;1545:5903:3;;;3751:33;;-1:-1:-1;3751:33:3;1545:5903;3656:46;1545:5903;;-1:-1:-1;;;3686:16:3;;1545:5903;;3686:16;1545:5903;;;;;;-1:-1:-1;;1545:5903:3;;;;;;;2310:41;1545:5903;;;;;;;;;-1:-1:-1;;1545:5903:3;;;;;;;2515:107;1545:5903;;;;;;;;;-1:-1:-1;;1545:5903:3;;;;1500:62:0;;:::i;:::-;1545:5903:3;;;-1:-1:-1;;;;;;1545:5903:3;;;;-1:-1:-1;;;;;1545:5903:3;3052:40:0;1545:5903:3;;3052:40:0;1545:5903:3;;;;;;;-1:-1:-1;;1545:5903:3;;;;;;-1:-1:-1;1545:5903:3;7314:7;1545:5903;;;;;;;;;-1:-1:-1;1545:5903:3;;;;;;;;;;;;;;;-1:-1:-1;;1545:5903:3;;;;;;;;-1:-1:-1;;;;;1545:5903:3;;;;;;;;;;;;;;-1:-1:-1;;1545:5903:3;;;;;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;1545:5903:3;;;;;3323:20;;3319:46;;-1:-1:-1;1545:5903:3;;;3379:7;1545:5903;;;;;;;-1:-1:-1;;;;;1545:5903:3;3375:69;;3454:26;:17;;;1545:5903;;6468:7;1545:5903;;;;;;;3454:17;1545:5903;;-1:-1:-1;;;;;;1545:5903:3;-1:-1:-1;;;;;1545:5903:3;;;;;;;;;;3454:26;3495:34;-1:-1:-1;3495:34:3;;1545:5903;3375:69;1545:5903;;-1:-1:-1;;;3419:25:3;;1545:5903;;3419:25;1545:5903;;;;;;-1:-1:-1;;1545:5903:3;;;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;1545:5903:3;;;;2627:22:0;;2623:91;;3004:6;1545:5903:3;;;;;;;;3004:6:0;1545:5903:3;;3052:40:0;3004:6;3052:40;;1545:5903:3;2623:91:0;1545:5903:3;;-1:-1:-1;;;2672:31:0;;-1:-1:-1;1545:5903:3;2672:31:0;;1545:5903:3;;;2672:31:0;1545:5903:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;-1:-1:-1;;1545:5903:3;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1545:5903:3;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;4651:7;1545:5903;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1545:5903:3;;;;;;;;-1:-1:-1;;1545:5903:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;1545:5903:3;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;3714:255:2:-;3927:8;3714:255;3871:27;3714:255;3871:27;:::i;:::-;3927:8;;;;;:::i;1796:162:0:-;1710:6;1545:5903:3;-1:-1:-1;;;;;1545:5903:3;735:10:1;1855:23:0;1851:101;;1796:162::o;1851:101::-;1545:5903:3;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;1545:5903:3;;;1901:40:0;2129:778:2;1545:5903:3;;;2129:778:2;2319:2;2299:22;;2319:2;;2751:25;2535:196;;;;;;;;;;;;;;;-1:-1:-1;2535:196:2;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2807:83;;2823:1;2807:83;2827:35;2807:83;;:::o;1545:5903:3:-;;-1:-1:-1;1545:5903:3;;;:::o;:::-;;;;;;;;;;;;7280:532:2;1545:5903:3;;;:::i;:::-;7366:29:2;;;7411:7;;:::o;7362:444::-;1545:5903:3;;;:::i;:::-;7471:29:2;7462:38;;7471:29;;1545:5903:3;;-1:-1:-1;;;7523:23:2;;;;;7458:348;1545:5903:3;;;:::i;:::-;7576:35:2;7567:44;;7576:35;;1545:5903:3;;-1:-1:-1;;;7634:46:2;;;;;1545:5903:3;;;;;7634:46:2;7563:243;1545:5903:3;;7710:30:2;1545:5903:3;;:::i;:::-;7701:39:2;7697:109;;7563:243;7280:532::o;7697:109::-;1545:5903:3;;-1:-1:-1;;;7763:32:2;;;;;1545:5903:3;;;;;;7634:46:2;5203:1551;;;6283:66;6270:79;;6266:164;;1545:5903:3;;;;;;-1:-1:-1;1545:5903:3;;;;;;;;;;;;;;;;;;;6541:24:2;;;;;;;;;-1:-1:-1;6541:24:2;-1:-1:-1;;;;;1545:5903:3;;6579:20:2;6575:113;;6698:49;-1:-1:-1;6698:49:2;-1:-1:-1;5203:1551:2;:::o;6575:113::-;6615:62;-1:-1:-1;6615:62:2;6541:24;6615:62;-1:-1:-1;6615:62:2;:::o;6266:164::-;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "686600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ACTION_TYPEHASH()": "267",
								"DOMAIN_SEPARATOR()": "infinite",
								"executeModuleActionByOwner(bytes32,address,uint256,bytes)": "infinite",
								"executeModuleActionWithSig(bytes32,address,uint256,bytes,uint256,bytes)": "infinite",
								"getModule(bytes32)": "2519",
								"getNonce(address)": "2429",
								"modules(bytes32)": "2585",
								"nonces(address)": "2561",
								"owner()": "2481",
								"registerModule(bytes32,address)": "30708",
								"renounceOwnership()": "28186",
								"transferOwnership(address)": "28409",
								"unregisterModule(bytes32)": "30380"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2651,
									"end": 2661,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2651,
									"end": 2661,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2651,
									"end": 2661,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "E"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1545,
									"end": 7448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20B1BA34B7B722BC32B1BABA37B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "91"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3023,
									"end": 3057,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1545,
									"end": 7448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3075,
									"end": 3096,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2802,
									"end": 3166,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2802,
									"end": 3166,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2802,
									"end": 3166,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2910,
									"end": 3005,
									"name": "PUSH",
									"source": 3,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2698,
									"end": 2751,
									"name": "CHAINID",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3147,
									"end": 3151,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 2802,
									"end": 3166,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2802,
									"end": 3166,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2779,
									"end": 3176,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2779,
									"end": 3176,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 2760,
									"end": 3176,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "609"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "RETURN",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B71"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "LT",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1545,
									"end": 7448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1545,
									"end": 7448,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e113db34b87c58ae94f157ee0e2523c4f51ba7281512a8fe193a9dc8d9e4d5d64736f6c63430008180033",
									".code": [
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "16CA96F4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "2D0335AB"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "2DAC633B"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "3595945D"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "3644E515"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "5A35B84A"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "7ECEBE00"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "85ACD641"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "A78E922B"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "B0B6CC1A"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "A4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4651,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6475,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4668,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4651,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4668,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4651,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4682,
											"end": 4702,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4678,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4678,
											"end": 4732,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4765,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4742,
											"end": 4787,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4801,
											"end": 4816,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 4801,
											"end": 4827,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4797,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4797,
											"end": 4854,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4914,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5198,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5198,
											"end": 5217,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5014,
											"end": 5029,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2515,
											"end": 2622,
											"name": "PUSH",
											"source": 3,
											"value": "2EAAF47F5D8D55BBDFC0070D3BF4E5C48F0E169AEB82B023197C8B2C69C6A338"
										},
										{
											"begin": 4962,
											"end": 5047,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4962,
											"end": 5047,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4962,
											"end": 5047,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4962,
											"end": 5047,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4962,
											"end": 5047,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4962,
											"end": 5047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4962,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4962,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 4962,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4962,
											"end": 5047,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4962,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4952,
											"end": 5048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4952,
											"end": 5048,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5085,
											"end": 5143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5114,
											"end": 5130,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "609"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5085,
											"end": 5143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5143,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5085,
											"end": 5143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 5085,
											"end": 5143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5143,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5085,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5144,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5198,
											"end": 5217,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5198,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5198,
											"end": 5217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5198,
											"end": 5217,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5198,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DA5CB5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 5354,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 5354,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 5354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 5378,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 5378,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5334,
											"end": 5378,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5330,
											"end": 5402,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5456,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4914,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9E5D4C49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5591,
											"end": 5641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5587,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 5587,
											"end": 5974,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 5700,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 5700,
											"end": 5974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5974,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 5700,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5788,
											"end": 5805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5788,
											"end": 5805,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5784,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5784,
											"end": 5926,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2B3F6D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5946,
											"end": 5963,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5946,
											"end": 5963,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5946,
											"end": 5963,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5784,
											"end": 5926,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5784,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5825,
											"end": 5912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5825,
											"end": 5912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5587,
											"end": 5974,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 5587,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 5681,
											"end": 5688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5681,
											"end": 5688,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "BDC4E709CEE662270D6B1F3B98B847541936A3762B56F7229D50448D83476E24"
										},
										{
											"begin": 5989,
											"end": 6054,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5989,
											"end": 6054,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5681,
											"end": 5688,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 5681,
											"end": 5688,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5989,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5989,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6054,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 5591,
											"end": 5641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5591,
											"end": 5641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5591,
											"end": 5641,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5402,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5330,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20578759"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5387,
											"end": 5402,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5387,
											"end": 5402,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5387,
											"end": 5402,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 5378,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5334,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5378,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5378,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5378,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5334,
											"end": 5378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5334,
											"end": 5378,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 5295,
											"end": 5320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5295,
											"end": 5320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 5295,
											"end": 5320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4797,
											"end": 4854,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4797,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "819BDCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4787,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4742,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4774,
											"end": 4787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4774,
											"end": 4787,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4774,
											"end": 4787,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4678,
											"end": 4732,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4678,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E25774F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4711,
											"end": 4732,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4732,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4732,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7426,
											"end": 7432,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6468,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 6468,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 6468,
											"end": 6485,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6475,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6485,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 6468,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6499,
											"end": 6519,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 6495,
											"end": 6549,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6563,
											"end": 6582,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6563,
											"end": 6582,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6563,
											"end": 6582,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6559,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 6559,
											"end": 6604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "9E5D4C49"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 6645,
											"end": 6695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6641,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 6641,
											"end": 6986,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6754,
											"end": 6986,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6754,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 6754,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 6754,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6754,
											"end": 6986,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 6754,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6800,
											"end": 6817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6800,
											"end": 6817,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6796,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6796,
											"end": 6938,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2B3F6D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6958,
											"end": 6975,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6958,
											"end": 6975,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6958,
											"end": 6975,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6641,
											"end": 6986,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 6641,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 6735,
											"end": 6742,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 6735,
											"end": 6742,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6735,
											"end": 6742,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7080,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6735,
											"end": 6742,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 6735,
											"end": 6742,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6735,
											"end": 6742,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7080,
											"end": 7149,
											"name": "PUSH",
											"source": 3,
											"value": "BDC4E709CEE662270D6B1F3B98B847541936A3762B56F7229D50448D83476E24"
										},
										{
											"begin": 6735,
											"end": 6742,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6641,
											"end": 6986,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 6641,
											"end": 6986,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 6641,
											"end": 6986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7080,
											"end": 7149,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 7080,
											"end": 7149,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7080,
											"end": 7149,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 7080,
											"end": 7149,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7080,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 7080,
											"end": 7149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 6645,
											"end": 6695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 6645,
											"end": 6695,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6559,
											"end": 6604,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 6559,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6591,
											"end": 6604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6604,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6549,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 6495,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E25774F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6528,
											"end": 6549,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6528,
											"end": 6549,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6528,
											"end": 6549,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3629,
											"end": 3636,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3656,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3656,
											"end": 3702,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3629,
											"end": 3636,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "PUSH",
											"source": 3,
											"value": "C631C273472E359A1548940DACA1E146B3B6BF7582363A16E11B9F570783BAEE"
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3751,
											"end": 3784,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3656,
											"end": 3702,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3656,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C94B023"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 3702,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 3702,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 3702,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2310,
											"end": 2351,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "609"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2515,
											"end": 2622,
											"name": "PUSH",
											"source": 3,
											"value": "2EAAF47F5D8D55BBDFC0070D3BF4E5C48F0E169AEB82B023197C8B2C69C6A338"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7314,
											"end": 7321,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3343,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3343,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3319,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3319,
											"end": 3365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3379,
											"end": 3386,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3375,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 3375,
											"end": 3444,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3454,
											"end": 3480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 3454,
											"end": 3471,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3454,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3454,
											"end": 3471,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6475,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3454,
											"end": 3471,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3454,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3454,
											"end": 3480,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 3454,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3529,
											"name": "PUSH",
											"source": 3,
											"value": "D63BE02155B46636309FB0A4A79647C60971AECAAD53CBC83AAD90CD75FD9D54"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3529,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3529,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3375,
											"end": 3444,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 3375,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95B0718D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3419,
											"end": 3444,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3444,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3444,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4658,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3871,
											"end": 3898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3871,
											"end": 3898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3871,
											"end": 3898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3871,
											"end": 3898,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 3871,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3927,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2299,
											"end": 2321,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2321,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2751,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2535,
											"end": 2731,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2731,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2535,
											"end": 2731,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2731,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2731,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2731,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2535,
											"end": 2731,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2731,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2731,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2731,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2731,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2731,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2731,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2731,
											"name": "BYTE",
											"source": 2
										},
										{
											"begin": 2751,
											"end": 2776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2751,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2751,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2751,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2751,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2295,
											"end": 2901,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2295,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7411,
											"end": 7418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7362,
											"end": 7806,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 7362,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7471,
											"end": 7500,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7471,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7471,
											"end": 7500,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F645EEDF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7576,
											"end": 7611,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 7576,
											"end": 7611,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FCE698F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 7710,
											"end": 7740,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7280,
											"end": 7812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35E2F383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6283,
											"end": 6349,
											"name": "PUSH",
											"source": 2,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6270,
											"end": 6349,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6270,
											"end": 6349,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 7448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6385,
											"end": 6415,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6365,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ACTION_TYPEHASH()": "5a35b84a",
							"DOMAIN_SEPARATOR()": "3644e515",
							"executeModuleActionByOwner(bytes32,address,uint256,bytes)": "2dac633b",
							"executeModuleActionWithSig(bytes32,address,uint256,bytes,uint256,bytes)": "16ca96f4",
							"getModule(bytes32)": "85acd641",
							"getNonce(address)": "2d0335ab",
							"modules(bytes32)": "b0b6cc1a",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"registerModule(bytes32,address)": "a78e922b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unregisterModule(bytes32)": "3595945d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModuleAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModuleNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModuleNotRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"name\":\"ActionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleUnregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACTION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeModuleActionByOwner\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"executeModuleActionWithSig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"}],\"name\":\"getModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"modules\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"registerModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"}],\"name\":\"unregisterModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"executeModuleActionWithSig(bytes32,address,uint256,bytes,uint256,bytes)\":{\"params\":{\"data\":\"Calldata to pass to module (executed from vault context)\",\"deadline\":\"Timestamp after which the signature is invalid\",\"moduleId\":\"Registered module id (bytes32)\",\"sig\":\"EIP-191 signature (65 bytes) from vault owner approving this action\",\"value\":\"ETH value to forward from vault to module (in wei)\",\"vault\":\"Address of the UserVault clone\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ModuleRegistered(bytes32,address)\":{\"notice\":\"========== EVENTS ==========\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"EIP-712 domain separator parameters\"},\"executeModuleActionByOwner(bytes32,address,uint256,bytes)\":{\"notice\":\"Admin fallback: owner of this contract can execute module actions directly (no signature). Useful for governance-driven or emergency operations.\"},\"executeModuleActionWithSig(bytes32,address,uint256,bytes,uint256,bytes)\":{\"notice\":\"Execute a registered module's action on behalf of user vault, authorized by owner's signature.\"},\"getModule(bytes32)\":{\"notice\":\"========== HELPERS / VIEWS ==========\"},\"modules(bytes32)\":{\"notice\":\"========== MODULE REGISTRY ========== moduleId => moduleAddress\"},\"nonces(address)\":{\"notice\":\"========== NONCES ========== vault => nonce\"},\"registerModule(bytes32,address)\":{\"notice\":\"========== MODULE ADMIN ==========\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":\"ActionExecutor\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":{\"keccak256\":\"0x7c44feb7542d0587d2a0fd346b9c096b7712dc1c7360a315081ee41a8c8859d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f6334375ff337bc9ec569acc46f8adef9d8ee7ad3d7e2cad1e379bdc26020c3\",\"dweb:/ipfs/QmUkgbQeFyi3LgDmjGqQ72CzxWyiybtyd1XUMFsMevuU3k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "src/Contract Architecture/Core Infrastructure/ActionExecutor.sol:ActionExecutor",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 601,
								"contract": "src/Contract Architecture/Core Infrastructure/ActionExecutor.sol:ActionExecutor",
								"label": "modules",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_address)"
							},
							{
								"astId": 606,
								"contract": "src/Contract Architecture/Core Infrastructure/ActionExecutor.sol:ActionExecutor",
								"label": "nonces",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_address)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"ModuleRegistered(bytes32,address)": {
								"notice": "========== EVENTS =========="
							}
						},
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "EIP-712 domain separator parameters"
							},
							"executeModuleActionByOwner(bytes32,address,uint256,bytes)": {
								"notice": "Admin fallback: owner of this contract can execute module actions directly (no signature). Useful for governance-driven or emergency operations."
							},
							"executeModuleActionWithSig(bytes32,address,uint256,bytes,uint256,bytes)": {
								"notice": "Execute a registered module's action on behalf of user vault, authorized by owner's signature."
							},
							"getModule(bytes32)": {
								"notice": "========== HELPERS / VIEWS =========="
							},
							"modules(bytes32)": {
								"notice": "========== MODULE REGISTRY ========== moduleId => moduleAddress"
							},
							"nonces(address)": {
								"notice": "========== NONCES ========== vault => nonce"
							},
							"registerModule(bytes32,address)": {
								"notice": "========== MODULE ADMIN =========="
							}
						},
						"version": 1
					}
				},
				"IUserVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "executeCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"executeCall(address,uint256,bytes)": "9e5d4c49",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":\"IUserVault\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\":{\"keccak256\":\"0x7c44feb7542d0587d2a0fd346b9c096b7712dc1c7360a315081ee41a8c8859d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f6334375ff337bc9ec569acc46f8adef9d8ee7ad3d7e2cad1e379bdc26020c3\",\"dweb:/ipfs/QmUkgbQeFyi3LgDmjGqQ72CzxWyiybtyd1XUMFsMevuU3k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							525
						]
					},
					"id": 526,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 180,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:2",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 525,
							"linearizedBaseContracts": [
								525
							],
							"name": "ECDSA",
							"nameLocation": "352:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 185,
									"members": [
										{
											"id": 181,
											"name": "NoError",
											"nameLocation": "392:7:2",
											"nodeType": "EnumValue",
											"src": "392:7:2"
										},
										{
											"id": 182,
											"name": "InvalidSignature",
											"nameLocation": "409:16:2",
											"nodeType": "EnumValue",
											"src": "409:16:2"
										},
										{
											"id": 183,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:2",
											"nodeType": "EnumValue",
											"src": "435:22:2"
										},
										{
											"id": 184,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:2",
											"nodeType": "EnumValue",
											"src": "467:17:2"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:2",
									"nodeType": "EnumDefinition",
									"src": "364:126:2"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:2",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 188,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:2"
									},
									"src": "564:30:2"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:2",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 193,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "699:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:2"
									},
									"src": "665:50:2"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:2",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 198,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "840:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 195,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:2"
									},
									"src": "811:40:2"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "2285:622:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 213,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "2299:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2309:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2299:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2319:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2299:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 248,
													"nodeType": "Block",
													"src": "2793:108:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 237,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2823:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2815:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 235,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2815:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2815:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 239,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 185,
																			"src": "2827:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$185_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2840:22:2",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 183,
																		"src": "2827:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$185",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 243,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 203,
																					"src": "2872:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 244,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2882:6:2",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2872:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2864:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 241,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2864:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2864:25:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 246,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2814:76:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 212,
															"id": 247,
															"nodeType": "Return",
															"src": "2807:83:2"
														}
													]
												},
												"id": 249,
												"nodeType": "IfStatement",
												"src": "2295:606:2",
												"trueBody": {
													"id": 234,
													"nodeType": "Block",
													"src": "2323:464:2",
													"statements": [
														{
															"assignments": [
																218
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 218,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2345:1:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 234,
																	"src": "2337:9:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 217,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2337:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 219,
															"nodeType": "VariableDeclarationStatement",
															"src": "2337:9:2"
														},
														{
															"assignments": [
																221
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 221,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2368:1:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 234,
																	"src": "2360:9:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 220,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2360:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 222,
															"nodeType": "VariableDeclarationStatement",
															"src": "2360:9:2"
														},
														{
															"assignments": [
																224
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 224,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2389:1:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 234,
																	"src": "2383:7:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 223,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2383:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 225,
															"nodeType": "VariableDeclarationStatement",
															"src": "2383:7:2"
														},
														{
															"AST": {
																"nativeSrc": "2560:171:2",
																"nodeType": "YulBlock",
																"src": "2560:171:2",
																"statements": [
																	{
																		"nativeSrc": "2578:32:2",
																		"nodeType": "YulAssignment",
																		"src": "2578:32:2",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2593:9:2",
																							"nodeType": "YulIdentifier",
																							"src": "2593:9:2"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2604:4:2",
																							"nodeType": "YulLiteral",
																							"src": "2604:4:2",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2589:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "2589:3:2"
																					},
																					"nativeSrc": "2589:20:2",
																					"nodeType": "YulFunctionCall",
																					"src": "2589:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2583:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2583:5:2"
																			},
																			"nativeSrc": "2583:27:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2583:27:2"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2578:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "2578:1:2"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2627:32:2",
																		"nodeType": "YulAssignment",
																		"src": "2627:32:2",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2642:9:2",
																							"nodeType": "YulIdentifier",
																							"src": "2642:9:2"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2653:4:2",
																							"nodeType": "YulLiteral",
																							"src": "2653:4:2",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2638:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "2638:3:2"
																					},
																					"nativeSrc": "2638:20:2",
																					"nodeType": "YulFunctionCall",
																					"src": "2638:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2632:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2632:5:2"
																			},
																			"nativeSrc": "2632:27:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2632:27:2"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2627:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "2627:1:2"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2676:41:2",
																		"nodeType": "YulAssignment",
																		"src": "2676:41:2",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2686:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2686:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2699:9:2",
																									"nodeType": "YulIdentifier",
																									"src": "2699:9:2"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2710:4:2",
																									"nodeType": "YulLiteral",
																									"src": "2710:4:2",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2695:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "2695:3:2"
																							},
																							"nativeSrc": "2695:20:2",
																							"nodeType": "YulFunctionCall",
																							"src": "2695:20:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2689:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "2689:5:2"
																					},
																					"nativeSrc": "2689:27:2",
																					"nodeType": "YulFunctionCall",
																					"src": "2689:27:2"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2681:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "2681:4:2"
																			},
																			"nativeSrc": "2681:36:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2681:36:2"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2676:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "2676:1:2"
																			}
																		]
																	}
																]
															},
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 218,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2578:1:2",
																	"valueSize": 1
																},
																{
																	"declaration": 221,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2627:1:2",
																	"valueSize": 1
																},
																{
																	"declaration": 203,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2593:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 203,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2642:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 203,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2699:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 224,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2676:1:2",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 226,
															"nodeType": "InlineAssembly",
															"src": "2535:196:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 228,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 201,
																		"src": "2762:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 229,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "2768:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 230,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "2771:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 231,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "2774:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 227,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		251,
																		331,
																		439
																	],
																	"referencedDeclaration": 439,
																	"src": "2751:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2751:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 212,
															"id": 233,
															"nodeType": "Return",
															"src": "2744:32:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:2",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2166:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2158:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 200,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2193:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2180:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:60:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "2240:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2232:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "2264:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2251:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$185",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 208,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 207,
														"name": "RecoverError",
														"nameLocations": [
															"2251:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 185,
														"src": "2251:12:2"
													},
													"referencedDeclaration": 185,
													"src": "2251:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$185",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "2277:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2269:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 210,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2231:53:2"
									},
									"scope": 525,
									"src": "2129:778:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "3801:168:2",
										"statements": [
											{
												"assignments": [
													262,
													265,
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 262,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3820:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 280,
														"src": "3812:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 261,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3812:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3844:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 280,
														"src": "3831:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$185",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 264,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 263,
																"name": "RecoverError",
																"nameLocations": [
																	"3831:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 185,
																"src": "3831:12:2"
															},
															"referencedDeclaration": 185,
															"src": "3831:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3859:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 280,
														"src": "3851:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 266,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3851:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 272,
												"initialValue": {
													"arguments": [
														{
															"id": 269,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "3882:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 270,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "3888:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 268,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															331,
															439
														],
														"referencedDeclaration": 251,
														"src": "3871:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3871:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3811:87:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "3920:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 275,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "3927:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 273,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "3908:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$185_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3908:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "3908:28:2"
											},
											{
												"expression": {
													"id": 278,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 262,
													"src": "3953:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 260,
												"id": 279,
												"nodeType": "Return",
												"src": "3946:16:2"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "2913:796:2",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3723:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3739:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3731:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3758:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3745:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3745:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3730:38:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3792:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3792:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3791:9:2"
									},
									"scope": 525,
									"src": "3714:255:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "4348:342:2",
										"statements": [
											{
												"id": 329,
												"nodeType": "UncheckedBlock",
												"src": "4358:326:2",
												"statements": [
													{
														"assignments": [
															299
														],
														"declarations": [
															{
																"constant": false,
																"id": 299,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4390:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 329,
																"src": "4382:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 298,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4382:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 306,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 300,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "4394:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4407:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4399:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 301,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4399:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4399:75:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4394:80:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4382:92:2"
													},
													{
														"assignments": [
															308
														],
														"declarations": [
															{
																"constant": false,
																"id": 308,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4591:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 329,
																"src": "4585:7:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 307,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4585:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 321,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 313,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 288,
																							"src": "4610:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 312,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4602:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 311,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4602:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 314,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4602:11:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 315,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4617:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4602:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 317,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4601:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4624:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4601:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4595:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 309,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4595:5:2",
																	"typeDescriptions": {}
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4595:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4585:42:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 323,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "4659:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 324,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "4665:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 325,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "4668:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 326,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "4671:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 322,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	251,
																	331,
																	439
																],
																"referencedDeclaration": 439,
																"src": "4648:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4648:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 297,
														"id": 328,
														"nodeType": "Return",
														"src": "4641:32:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "3975:205:2",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4194:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4222:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4214:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 283,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4244:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4236:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4263:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4255:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 287,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4255:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4204:67:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "4303:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4295:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4295:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "4327:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4314:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$185",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 293,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 292,
														"name": "RecoverError",
														"nameLocations": [
															"4314:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 185,
														"src": "4314:12:2"
													},
													"referencedDeclaration": 185,
													"src": "4314:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$185",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "4340:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4332:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 295,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4332:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4294:53:2"
									},
									"scope": 525,
									"src": "4185:505:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "4903:164:2",
										"statements": [
											{
												"assignments": [
													344,
													347,
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4922:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "4914:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 343,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4914:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4946:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "4933:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$185",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 346,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 345,
																"name": "RecoverError",
																"nameLocations": [
																	"4933:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 185,
																"src": "4933:12:2"
															},
															"referencedDeclaration": 185,
															"src": "4933:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4961:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "4953:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 348,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4953:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"arguments": [
														{
															"id": 351,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "4984:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 352,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "4990:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 353,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "4993:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 350,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															331,
															439
														],
														"referencedDeclaration": 331,
														"src": "4973:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4973:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4913:83:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 357,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "5018:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 358,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "5025:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 356,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "5006:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$185_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5006:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "5006:28:2"
											},
											{
												"expression": {
													"id": 361,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 344,
													"src": "5051:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 342,
												"id": 362,
												"nodeType": "Return",
												"src": "5044:16:2"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "4696:116:2",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4826:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4842:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4834:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4834:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4856:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4848:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 335,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4848:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4867:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4859:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4833:37:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4894:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4894:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4893:9:2"
									},
									"scope": 525,
									"src": "4817:250:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "5382:1372:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 385,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "6278:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6270:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 383,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6270:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6270:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6283:66:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6270:79:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 399,
												"nodeType": "IfStatement",
												"src": "6266:164:2",
												"trueBody": {
													"id": 398,
													"nodeType": "Block",
													"src": "6351:79:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6381:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6373:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 389,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6373:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 393,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 185,
																			"src": "6385:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$185_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6398:17:2",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 184,
																		"src": "6385:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$185",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 395,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "6417:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 396,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6372:47:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 382,
															"id": 397,
															"nodeType": "Return",
															"src": "6365:54:2"
														}
													]
												}
											},
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6532:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "6524:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 400,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6524:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 408,
												"initialValue": {
													"arguments": [
														{
															"id": 403,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "6551:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 404,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "6557:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 405,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "6560:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 406,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "6563:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 402,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6541:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6524:41:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 409,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "6579:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6597:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6589:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 410,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6589:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6589:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6579:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 428,
												"nodeType": "IfStatement",
												"src": "6575:113:2",
												"trueBody": {
													"id": 427,
													"nodeType": "Block",
													"src": "6601:87:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6631:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6623:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 415,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6623:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6623:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 419,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 185,
																			"src": "6635:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$185_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6648:16:2",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 182,
																		"src": "6635:29:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$185",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 423,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6674:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6666:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 421,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6666:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6666:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 425,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6622:55:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 382,
															"id": 426,
															"nodeType": "Return",
															"src": "6615:62:2"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 429,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "6706:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 430,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6714:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$185_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6727:7:2",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "6714:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6744:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6736:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 432,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6736:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6736:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 436,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6705:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 382,
												"id": 437,
												"nodeType": "Return",
												"src": "6698:49:2"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "5073:125:2",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5212:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5240:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5232:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 366,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5232:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5260:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5254:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 368,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5254:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5279:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5271:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 370,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5271:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5298:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5290:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5290:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5222:83:2"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "5337:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5329:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5329:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "5361:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5348:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$185",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 378,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 377,
														"name": "RecoverError",
														"nameLocations": [
															"5348:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 185,
														"src": "5348:12:2"
													},
													"referencedDeclaration": 185,
													"src": "5348:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$185",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "5374:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5366:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 380,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5328:53:2"
									},
									"scope": 525,
									"src": "5203:1551:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "6981:166:2",
										"statements": [
											{
												"assignments": [
													454,
													457,
													459
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "7000:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "6992:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 453,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6992:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "7024:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "7011:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$185",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 456,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 455,
																"name": "RecoverError",
																"nameLocations": [
																	"7011:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 185,
																"src": "7011:12:2"
															},
															"referencedDeclaration": 185,
															"src": "7011:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 459,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "7039:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "7031:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 458,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7031:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [
														{
															"id": 461,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "7062:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 462,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "7068:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 463,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "7071:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 464,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "7074:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 460,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															331,
															439
														],
														"referencedDeclaration": 439,
														"src": "7051:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7051:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$185_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6991:85:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "7098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 469,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "7105:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 467,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "7086:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$185_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7086:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "7086:28:2"
											},
											{
												"expression": {
													"id": 472,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 454,
													"src": "7131:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 452,
												"id": 473,
												"nodeType": "Return",
												"src": "7124:16:2"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "6760:122:2",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6896:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6912:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6904:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6904:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6924:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6918:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 443,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6918:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6935:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6927:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 445,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6927:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6946:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6938:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 447,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6938:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6903:45:2"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "6972:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6972:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6971:9:2"
									},
									"scope": 525,
									"src": "6887:260:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "7352:460:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$185",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 484,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "7366:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$185",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 485,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "7375:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$185_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7388:7:2",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 181,
														"src": "7375:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$185",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7366:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$185",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 490,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "7462:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 491,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "7471:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$185_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7484:16:2",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "7471:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7462:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$185",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 498,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "7567:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$185",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 499,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "7576:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$185_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7589:22:2",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 183,
																"src": "7576:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$185",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7567:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$185",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 510,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "7701:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$185",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 511,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "7710:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$185_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7723:17:2",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 184,
																	"src": "7710:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$185",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7701:39:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 519,
															"nodeType": "IfStatement",
															"src": "7697:109:2",
															"trueBody": {
																"id": 518,
																"nodeType": "Block",
																"src": "7742:64:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 515,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 481,
																					"src": "7786:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 514,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 198,
																				"src": "7763:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7763:32:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 517,
																		"nodeType": "RevertStatement",
																		"src": "7756:39:2"
																	}
																]
															}
														},
														"id": 520,
														"nodeType": "IfStatement",
														"src": "7563:243:2",
														"trueBody": {
															"id": 509,
															"nodeType": "Block",
															"src": "7613:78:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 505,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 481,
																						"src": "7670:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 504,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7662:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 503,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7662:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7662:17:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 502,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "7634:27:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7634:46:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 508,
																	"nodeType": "RevertStatement",
																	"src": "7627:53:2"
																}
															]
														}
													},
													"id": 521,
													"nodeType": "IfStatement",
													"src": "7458:348:2",
													"trueBody": {
														"id": 497,
														"nodeType": "Block",
														"src": "7502:55:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 494,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 188,
																		"src": "7523:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7523:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 496,
																"nodeType": "RevertStatement",
																"src": "7516:30:2"
															}
														]
													}
												},
												"id": 522,
												"nodeType": "IfStatement",
												"src": "7362:444:2",
												"trueBody": {
													"id": 489,
													"nodeType": "Block",
													"src": "7397:55:2",
													"statements": [
														{
															"functionReturnParameters": 483,
															"id": 488,
															"nodeType": "Return",
															"src": "7411:7:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "7153:122:2",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7289:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7314:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7301:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$185",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 478,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 477,
														"name": "RecoverError",
														"nameLocations": [
															"7301:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 185,
														"src": "7301:12:2"
													},
													"referencedDeclaration": 185,
													"src": "7301:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$185",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7329:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7321:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 480,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7321:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7300:38:2"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7352:0:2"
									},
									"scope": 525,
									"src": "7280:532:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 526,
							"src": "344:7470:2",
							"usedErrors": [
								188,
								193,
								198
							],
							"usedEvents": []
						}
					],
					"src": "112:7703:2"
				},
				"id": 2
			},
			"src/Contract Architecture/Core Infrastructure/ActionExecutor.sol": {
				"ast": {
					"absolutePath": "src/Contract Architecture/Core Infrastructure/ActionExecutor.sol",
					"exportedSymbols": {
						"ActionExecutor": [
							1024
						],
						"ECDSA": [
							525
						],
						"ExecutionFailed": [
							558
						],
						"IUserVault": [
							548
						],
						"InvalidSigner": [
							556
						],
						"ModuleAlreadyRegistered": [
							560
						],
						"ModuleNotFound": [
							562
						],
						"ModuleNotRegistered": [
							552
						],
						"Ownable": [
							147
						],
						"SignatureExpired": [
							554
						],
						"ZeroAddress": [
							550
						]
					},
					"id": 1025,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 527,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 529,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1025,
							"sourceUnit": 148,
							"src": "1024:69:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 528,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "1033:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 531,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1025,
							"sourceUnit": 526,
							"src": "1094:77:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 530,
										"name": "ECDSA",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 525,
										"src": "1103:5:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUserVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 548,
							"linearizedBaseContracts": [
								548
							],
							"name": "IUserVault",
							"nameLocation": "1183:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "9e5d4c49",
									"id": 542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeCall",
									"nameLocation": "1209:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1229:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1221:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1237:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1267:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1252:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1252:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:52:3"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1291:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1291:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:14:3"
									},
									"scope": 548,
									"src": "1200:105:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8da5cb5b",
									"id": 547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1319:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1324:2:3"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1350:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1350:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1349:9:3"
									},
									"scope": 548,
									"src": "1310:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1025,
							"src": "1173:188:3",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"errorSelector": "d92e233d",
							"id": 550,
							"name": "ZeroAddress",
							"nameLocation": "1369:11:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 549,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1380:2:3"
							},
							"src": "1363:20:3"
						},
						{
							"errorSelector": "9c4aee9e",
							"id": 552,
							"name": "ModuleNotRegistered",
							"nameLocation": "1390:19:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 551,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1409:2:3"
							},
							"src": "1384:28:3"
						},
						{
							"errorSelector": "0819bdcd",
							"id": 554,
							"name": "SignatureExpired",
							"nameLocation": "1419:16:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 553,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1435:2:3"
							},
							"src": "1413:25:3"
						},
						{
							"errorSelector": "815e1d64",
							"id": 556,
							"name": "InvalidSigner",
							"nameLocation": "1445:13:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 555,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1458:2:3"
							},
							"src": "1439:22:3"
						},
						{
							"errorSelector": "acfdb444",
							"id": 558,
							"name": "ExecutionFailed",
							"nameLocation": "1468:15:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 557,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1483:2:3"
							},
							"src": "1462:24:3"
						},
						{
							"errorSelector": "95b0718d",
							"id": 560,
							"name": "ModuleAlreadyRegistered",
							"nameLocation": "1493:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 559,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1516:2:3"
							},
							"src": "1487:32:3"
						},
						{
							"errorSelector": "7252c08c",
							"id": 562,
							"name": "ModuleNotFound",
							"nameLocation": "1526:14:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 561,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1540:2:3"
							},
							"src": "1520:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 563,
										"name": "Ownable",
										"nameLocations": [
											"1572:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1572:7:3"
									},
									"id": 564,
									"nodeType": "InheritanceSpecifier",
									"src": "1572:7:3"
								}
							],
							"canonicalName": "ActionExecutor",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1024,
							"linearizedBaseContracts": [
								1024,
								147,
								177
							],
							"name": "ActionExecutor",
							"nameLocation": "1554:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 567,
									"libraryName": {
										"id": 565,
										"name": "ECDSA",
										"nameLocations": [
											"1592:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 525,
										"src": "1592:5:3"
									},
									"nodeType": "UsingForDirective",
									"src": "1586:24:3",
									"typeName": {
										"id": 566,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1602:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1616:32:3",
										"text": "========== EVENTS =========="
									},
									"eventSelector": "d63be02155b46636309fb0a4a79647c60971aecaad53cbc83aad90cd75fd9d54",
									"id": 574,
									"name": "ModuleRegistered",
									"nameLocation": "1659:16:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"indexed": true,
												"mutability": "mutable",
												"name": "moduleId",
												"nameLocation": "1692:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1676:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 569,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"indexed": true,
												"mutability": "mutable",
												"name": "module",
												"nameLocation": "1718:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1702:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1702:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1675:50:3"
									},
									"src": "1653:73:3"
								},
								{
									"anonymous": false,
									"eventSelector": "c631c273472e359a1548940daca1e146b3b6bf7582363a16e11b9f570783baee",
									"id": 580,
									"name": "ModuleUnregistered",
									"nameLocation": "1737:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"indexed": true,
												"mutability": "mutable",
												"name": "moduleId",
												"nameLocation": "1772:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "1756:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 575,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"indexed": true,
												"mutability": "mutable",
												"name": "module",
												"nameLocation": "1798:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "1782:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1782:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:50:3"
									},
									"src": "1731:75:3"
								},
								{
									"anonymous": false,
									"eventSelector": "bdc4e709cee662270d6b1f3b98b847541936a3762b56f7229d50448d83476e24",
									"id": 596,
									"name": "ActionExecuted",
									"nameLocation": "1817:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "1857:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "1841:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1888:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "1872:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1872:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"indexed": true,
												"mutability": "mutable",
												"name": "moduleId",
												"nameLocation": "1919:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "1903:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 585,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"indexed": false,
												"mutability": "mutable",
												"name": "module",
												"nameLocation": "1945:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "1937:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1969:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "1961:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1961:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1990:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "1984:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 591,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1984:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": false,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2010:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2004:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 593,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2004:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1831:191:3"
									},
									"src": "1811:212:3"
								},
								{
									"constant": false,
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "2029:75:3",
										"text": "========== MODULE REGISTRY ==========\n moduleId => moduleAddress"
									},
									"functionSelector": "b0b6cc1a",
									"id": 601,
									"mutability": "mutable",
									"name": "modules",
									"nameLocation": "2144:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "2109:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
										"typeString": "mapping(bytes32 => address)"
									},
									"typeName": {
										"id": 600,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 598,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2117:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2109:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
											"typeString": "mapping(bytes32 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 599,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2128:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "2158:55:3",
										"text": "========== NONCES ==========\n vault => nonce"
									},
									"functionSelector": "7ecebe00",
									"id": 606,
									"mutability": "mutable",
									"name": "nonces",
									"nameLocation": "2253:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "2218:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 605,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 603,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2226:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2218:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 604,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2237:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "2266:39:3",
										"text": "EIP-712 domain separator parameters"
									},
									"functionSelector": "3644e515",
									"id": 609,
									"mutability": "immutable",
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2335:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "2310:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 608,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2310:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5a35b84a",
									"id": 614,
									"mutability": "constant",
									"name": "ACTION_TYPEHASH",
									"nameLocation": "2497:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "2473:149:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 610,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2473:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "416374696f6e2861646472657373207661756c742c62797465733332206d6f64756c6549642c75696e743235362076616c75652c627974657320646174612c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 612,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2525:96:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_2eaaf47f5d8d55bbdfc0070d3bf4e5c48f0e169aeb82b023197c8b2c69c6a338",
													"typeString": "literal_string \"Action(address vault,bytes32 moduleId,uint256 value,bytes data,uint256 nonce,uint256 deadline)\""
												},
												"value": "Action(address vault,bytes32 moduleId,uint256 value,bytes data,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_2eaaf47f5d8d55bbdfc0070d3bf4e5c48f0e169aeb82b023197c8b2c69c6a338",
													"typeString": "literal_string \"Action(address vault,bytes32 moduleId,uint256 value,bytes data,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 611,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2515:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 613,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2515:107:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "2663:520:3",
										"statements": [
											{
												"assignments": [
													622
												],
												"declarations": [
													{
														"constant": false,
														"id": 622,
														"mutability": "mutable",
														"name": "chainId",
														"nameLocation": "2681:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "2673:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 621,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2673:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 623,
												"nodeType": "VariableDeclarationStatement",
												"src": "2673:15:3"
											},
											{
												"AST": {
													"nativeSrc": "2707:44:3",
													"nodeType": "YulBlock",
													"src": "2707:44:3",
													"statements": [
														{
															"nativeSrc": "2721:20:3",
															"nodeType": "YulAssignment",
															"src": "2721:20:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nativeSrc": "2732:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "2732:7:3"
																},
																"nativeSrc": "2732:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2732:9:3"
															},
															"variableNames": [
																{
																	"name": "chainId",
																	"nativeSrc": "2721:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "2721:7:3"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 622,
														"isOffset": false,
														"isSlot": false,
														"src": "2721:7:3",
														"valueSize": 1
													}
												],
												"id": 624,
												"nodeType": "InlineAssembly",
												"src": "2698:53:3"
											},
											{
												"expression": {
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 625,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "2760:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 630,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2920:84:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 629,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "2910:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2910:95:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416374696f6e4578656375746f72",
																						"id": 635,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3039:16:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_3f44aa184ab6fa31533dfbf9ef3cd970e5d63a4acb4cfad9d1d294daaac5bd92",
																							"typeString": "literal_string \"ActionExecutor\""
																						},
																						"value": "ActionExecutor"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_3f44aa184ab6fa31533dfbf9ef3cd970e5d63a4acb4cfad9d1d294daaac5bd92",
																							"typeString": "literal_string \"ActionExecutor\""
																						}
																					],
																					"id": 634,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3033:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 633,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "3033:5:3",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3033:23:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 632,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "3023:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3023:34:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "31",
																						"id": 641,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3091:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 640,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3085:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 639,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "3085:5:3",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3085:10:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 638,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "3075:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3075:21:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 644,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "3114:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3147:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ActionExecutor_$1024",
																					"typeString": "contract ActionExecutor"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ActionExecutor_$1024",
																					"typeString": "contract ActionExecutor"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3139:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3139:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3139:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 627,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2802:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2806:6:3",
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"src": "2802:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2802:364:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 626,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2779:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2779:397:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2760:416:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "2760:416:3"
											}
										]
									},
									"id": 654,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 617,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2651:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2655:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2651:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 619,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 616,
												"name": "Ownable",
												"nameLocations": [
													"2643:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2643:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2643:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:3"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2663:0:3"
									},
									"scope": 1024,
									"src": "2629:554:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "3309:227:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 664,
														"name": "module",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "3323:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3341:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3333:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 665,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3333:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3333:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3323:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 673,
												"nodeType": "IfStatement",
												"src": "3319:46:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 670,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3352:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3352:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 672,
													"nodeType": "RevertStatement",
													"src": "3345:20:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 674,
															"name": "modules",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "3379:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 676,
														"indexExpression": {
															"id": 675,
															"name": "moduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "3387:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3379:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3408:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3400:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 677,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3400:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3400:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3379:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 685,
												"nodeType": "IfStatement",
												"src": "3375:69:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 682,
															"name": "ModuleAlreadyRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "3419:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3419:25:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 684,
													"nodeType": "RevertStatement",
													"src": "3412:32:3"
												}
											},
											{
												"expression": {
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 686,
															"name": "modules",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "3454:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 688,
														"indexExpression": {
															"id": 687,
															"name": "moduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "3462:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3454:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 689,
														"name": "module",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "3474:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3454:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "3454:26:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 693,
															"name": "moduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "3512:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 694,
															"name": "module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "3522:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 692,
														"name": "ModuleRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "3495:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3495:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "EmitStatement",
												"src": "3490:39:3"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "3189:38:3",
										"text": "========== MODULE ADMIN =========="
									},
									"functionSelector": "a78e922b",
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 662,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 661,
												"name": "onlyOwner",
												"nameLocations": [
													"3299:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3299:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3299:9:3"
										}
									],
									"name": "registerModule",
									"nameLocation": "3241:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "moduleId",
												"nameLocation": "3264:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "3256:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 656,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3256:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "module",
												"nameLocation": "3282:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "3274:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3255:34:3"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3309:0:3"
									},
									"scope": 1024,
									"src": "3232:304:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "3605:186:3",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "mod",
														"nameLocation": "3623:3:3",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "3615:11:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 705,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3615:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"initialValue": {
													"baseExpression": {
														"id": 707,
														"name": "modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "3629:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
															"typeString": "mapping(bytes32 => address)"
														}
													},
													"id": 709,
													"indexExpression": {
														"id": 708,
														"name": "moduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "3637:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3629:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:31:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 711,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "3660:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3675:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3667:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 712,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3667:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3667:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3660:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "3656:46:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 717,
															"name": "ModuleNotFound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "3686:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3686:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 719,
													"nodeType": "RevertStatement",
													"src": "3679:23:3"
												}
											},
											{
												"expression": {
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3712:24:3",
													"subExpression": {
														"baseExpression": {
															"id": 721,
															"name": "modules",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "3719:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 723,
														"indexExpression": {
															"id": 722,
															"name": "moduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "3727:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3719:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "3712:24:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 727,
															"name": "moduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "3770:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 728,
															"name": "mod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "3780:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 726,
														"name": "ModuleUnregistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "3751:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3751:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "EmitStatement",
												"src": "3746:38:3"
											}
										]
									},
									"functionSelector": "3595945d",
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 703,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 702,
												"name": "onlyOwner",
												"nameLocations": [
													"3595:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3595:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3595:9:3"
										}
									],
									"name": "unregisterModule",
									"nameLocation": "3551:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "moduleId",
												"nameLocation": "3576:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3568:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 699,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3567:18:3"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3605:0:3"
									},
									"scope": 1024,
									"src": "3542:249:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "4624:1457:3",
										"statements": [
											{
												"assignments": [
													751
												],
												"declarations": [
													{
														"constant": false,
														"id": 751,
														"mutability": "mutable",
														"name": "module",
														"nameLocation": "4642:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "4634:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 750,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4634:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 755,
												"initialValue": {
													"baseExpression": {
														"id": 752,
														"name": "modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "4651:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
															"typeString": "mapping(bytes32 => address)"
														}
													},
													"id": 754,
													"indexExpression": {
														"id": 753,
														"name": "moduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "4659:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4651:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4634:34:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 756,
														"name": "module",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "4682:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4700:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4692:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 757,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4692:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4692:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4682:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 765,
												"nodeType": "IfStatement",
												"src": "4678:54:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 762,
															"name": "ModuleNotRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4711:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4711:21:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 764,
													"nodeType": "RevertStatement",
													"src": "4704:28:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 766,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "4746:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4763:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4755:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 767,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4755:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4755:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4746:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 775,
												"nodeType": "IfStatement",
												"src": "4742:45:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 772,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "4774:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4774:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 774,
													"nodeType": "RevertStatement",
													"src": "4767:20:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 776,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4801:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4807:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4801:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 778,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "4819:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4801:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "4797:57:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 780,
															"name": "SignatureExpired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4836:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4836:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 782,
													"nodeType": "RevertStatement",
													"src": "4829:25:3"
												}
											},
											{
												"assignments": [
													785
												],
												"declarations": [
													{
														"constant": false,
														"id": 785,
														"mutability": "mutable",
														"name": "nonce",
														"nameLocation": "4900:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "4892:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 784,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4892:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 789,
												"initialValue": {
													"baseExpression": {
														"id": 786,
														"name": "nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "4908:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 788,
													"indexExpression": {
														"id": 787,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "4915:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4908:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4892:29:3"
											},
											{
												"assignments": [
													791
												],
												"declarations": [
													{
														"constant": false,
														"id": 791,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "4939:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "4931:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 790,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4931:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 806,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 795,
																	"name": "ACTION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "4973:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 796,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "4990:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 797,
																	"name": "moduleId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "4997:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 798,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "5007:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 800,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 741,
																			"src": "5024:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		],
																		"id": 799,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "5014:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5014:15:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 802,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "5031:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 803,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "5038:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 793,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4962:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4966:6:3",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4962:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4962:85:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 792,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4952:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4952:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4931:117:3"
											},
											{
												"assignments": [
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "digest",
														"nameLocation": "5066:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "5058:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 807,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5058:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 817,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5102:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 813,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "5114:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 814,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "5132:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 810,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5085:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5089:12:3",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "5085:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5085:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 809,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "5075:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5075:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5058:86:3"
											},
											{
												"assignments": [
													819
												],
												"declarations": [
													{
														"constant": false,
														"id": 819,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "5189:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "5181:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 818,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5181:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"arguments": [
														{
															"id": 822,
															"name": "sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "5213:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"id": 820,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "5198:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5205:7:3",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 281,
														"src": "5198:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5198:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5181:36:3"
											},
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "vaultOwner",
														"nameLocation": "5282:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "5274:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 825,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5274:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 832,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 828,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5306:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 827,
																"name": "IUserVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "5295:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUserVault_$548_$",
																	"typeString": "type(contract IUserVault)"
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5295:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUserVault_$548",
																"typeString": "contract IUserVault"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5313:5:3",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 547,
														"src": "5295:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5295:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5274:46:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 833,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "5334:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5352:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5344:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 834,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5344:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5344:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "5334:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 839,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "5358:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 840,
															"name": "vaultOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "5368:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "5358:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5334:44:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"nodeType": "IfStatement",
												"src": "5330:72:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 843,
															"name": "InvalidSigner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "5387:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5387:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 845,
													"nodeType": "RevertStatement",
													"src": "5380:22:3"
												}
											},
											{
												"expression": {
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 847,
															"name": "nonces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "5440:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 849,
														"indexExpression": {
															"id": 848,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "5447:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5440:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 850,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "5456:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5464:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "5456:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5440:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "5440:25:3"
											},
											{
												"assignments": [
													856
												],
												"declarations": [
													{
														"constant": false,
														"id": 856,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "5574:3:3",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "5561:16:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 855,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5561:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 857,
												"nodeType": "VariableDeclarationStatement",
												"src": "5561:16:3"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 873,
															"nodeType": "Block",
															"src": "5667:32:3",
															"statements": [
																{
																	"expression": {
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 869,
																			"name": "res",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "5681:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 870,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 867,
																			"src": "5687:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"src": "5681:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 872,
																	"nodeType": "ExpressionStatement",
																	"src": "5681:7:3"
																}
															]
														},
														"errorName": "",
														"id": 874,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 868,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 867,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "5664:1:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 874,
																	"src": "5651:14:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 866,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "5651:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "5650:16:3"
														},
														"src": "5642:57:3"
													},
													{
														"block": {
															"id": 888,
															"nodeType": "Block",
															"src": "5728:246:3",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 878,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 876,
																				"src": "5788:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5795:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5788:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5804:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5788:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 884,
																	"nodeType": "IfStatement",
																	"src": "5784:142:3",
																	"trueBody": {
																		"id": 883,
																		"nodeType": "Block",
																		"src": "5807:119:3",
																		"statements": [
																			{
																				"AST": {
																					"nativeSrc": "5834:78:3",
																					"nodeType": "YulBlock",
																					"src": "5834:78:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nativeSrc": "5867:2:3",
																												"nodeType": "YulLiteral",
																												"src": "5867:2:3",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nativeSrc": "5871:6:3",
																												"nodeType": "YulIdentifier",
																												"src": "5871:6:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5863:3:3",
																											"nodeType": "YulIdentifier",
																											"src": "5863:3:3"
																										},
																										"nativeSrc": "5863:15:3",
																										"nodeType": "YulFunctionCall",
																										"src": "5863:15:3"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nativeSrc": "5886:6:3",
																												"nodeType": "YulIdentifier",
																												"src": "5886:6:3"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5880:5:3",
																											"nodeType": "YulIdentifier",
																											"src": "5880:5:3"
																										},
																										"nativeSrc": "5880:13:3",
																										"nodeType": "YulFunctionCall",
																										"src": "5880:13:3"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nativeSrc": "5856:6:3",
																									"nodeType": "YulIdentifier",
																									"src": "5856:6:3"
																								},
																								"nativeSrc": "5856:38:3",
																								"nodeType": "YulFunctionCall",
																								"src": "5856:38:3"
																							},
																							"nativeSrc": "5856:38:3",
																							"nodeType": "YulExpressionStatement",
																							"src": "5856:38:3"
																						}
																					]
																				},
																				"evmVersion": "shanghai",
																				"externalReferences": [
																					{
																						"declaration": 876,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "5871:6:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 876,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "5886:6:3",
																						"valueSize": 1
																					}
																				],
																				"id": 882,
																				"nodeType": "InlineAssembly",
																				"src": "5825:87:3"
																			}
																		]
																	}
																},
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 885,
																			"name": "ExecutionFailed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "5946:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5946:17:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 887,
																	"nodeType": "RevertStatement",
																	"src": "5939:24:3"
																}
															]
														},
														"errorName": "",
														"id": 889,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 877,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 876,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "5720:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 889,
																	"src": "5707:19:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 875,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "5707:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "5706:21:3"
														},
														"src": "5700:274:3"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 862,
															"name": "module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "5621:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 863,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "5629:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 864,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "5636:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 859,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5602:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 858,
																"name": "IUserVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "5591:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUserVault_$548_$",
																	"typeString": "type(contract IUserVault)"
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5591:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUserVault_$548",
																"typeString": "contract IUserVault"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5609:11:3",
														"memberName": "executeCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 542,
														"src": "5591:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,uint256,bytes memory) external returns (bytes memory)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5591:50:3",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 890,
												"nodeType": "TryStatement",
												"src": "5587:387:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 892,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "6004:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 893,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "6011:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 894,
															"name": "moduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "6019:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 895,
															"name": "module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "6029:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 896,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "6037:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 897,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "6044:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 898,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "6050:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 891,
														"name": "ActionExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "5989:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,bytes32,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5989:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "EmitStatement",
												"src": "5984:70:3"
											},
											{
												"expression": {
													"id": 901,
													"name": "res",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 856,
													"src": "6071:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 749,
												"id": 902,
												"nodeType": "Return",
												"src": "6064:10:3"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "3847:536:3",
										"text": " @notice Execute a registered module's action on behalf of user vault, authorized by owner's signature.\n @param moduleId Registered module id (bytes32)\n @param vault Address of the UserVault clone\n @param value ETH value to forward from vault to module (in wei)\n @param data Calldata to pass to module (executed from vault context)\n @param deadline Timestamp after which the signature is invalid\n @param sig EIP-191 signature (65 bytes) from vault owner approving this action"
									},
									"functionSelector": "16ca96f4",
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeModuleActionWithSig",
									"nameLocation": "4397:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "moduleId",
												"nameLocation": "4441:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "4433:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 734,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4433:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "4467:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "4459:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4490:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "4482:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4520:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "4505:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 740,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4505:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4542:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "4534:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4534:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "4575:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "4560:18:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 744,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4560:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4423:161:3"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4616:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "4603:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 747,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4603:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4602:21:3"
									},
									"scope": 1024,
									"src": "4388:1693:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "6441:735:3",
										"statements": [
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "module",
														"nameLocation": "6459:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 997,
														"src": "6451:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 920,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6451:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 925,
												"initialValue": {
													"baseExpression": {
														"id": 922,
														"name": "modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "6468:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
															"typeString": "mapping(bytes32 => address)"
														}
													},
													"id": 924,
													"indexExpression": {
														"id": 923,
														"name": "moduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "6476:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6468:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6451:34:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 926,
														"name": "module",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "6499:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6517:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6509:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 927,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6509:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6509:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6499:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 935,
												"nodeType": "IfStatement",
												"src": "6495:54:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 932,
															"name": "ModuleNotRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "6528:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6528:21:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 934,
													"nodeType": "RevertStatement",
													"src": "6521:28:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 936,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "6563:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6580:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6572:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 937,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6572:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6572:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6563:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 945,
												"nodeType": "IfStatement",
												"src": "6559:45:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 942,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "6591:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6591:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 944,
													"nodeType": "RevertStatement",
													"src": "6584:20:3"
												}
											},
											{
												"assignments": [
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "6628:3:3",
														"nodeType": "VariableDeclaration",
														"scope": 997,
														"src": "6615:16:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 946,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6615:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 948,
												"nodeType": "VariableDeclarationStatement",
												"src": "6615:16:3"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 964,
															"nodeType": "Block",
															"src": "6721:32:3",
															"statements": [
																{
																	"expression": {
																		"id": 962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 960,
																			"name": "res",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 947,
																			"src": "6735:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 961,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "6741:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"src": "6735:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 963,
																	"nodeType": "ExpressionStatement",
																	"src": "6735:7:3"
																}
															]
														},
														"errorName": "",
														"id": 965,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 959,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 958,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "6718:1:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 965,
																	"src": "6705:14:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 957,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6705:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6704:16:3"
														},
														"src": "6696:57:3"
													},
													{
														"block": {
															"id": 979,
															"nodeType": "Block",
															"src": "6782:204:3",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 969,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "6800:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6807:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6800:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6816:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6800:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 975,
																	"nodeType": "IfStatement",
																	"src": "6796:142:3",
																	"trueBody": {
																		"id": 974,
																		"nodeType": "Block",
																		"src": "6819:119:3",
																		"statements": [
																			{
																				"AST": {
																					"nativeSrc": "6846:78:3",
																					"nodeType": "YulBlock",
																					"src": "6846:78:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nativeSrc": "6879:2:3",
																												"nodeType": "YulLiteral",
																												"src": "6879:2:3",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nativeSrc": "6883:6:3",
																												"nodeType": "YulIdentifier",
																												"src": "6883:6:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6875:3:3",
																											"nodeType": "YulIdentifier",
																											"src": "6875:3:3"
																										},
																										"nativeSrc": "6875:15:3",
																										"nodeType": "YulFunctionCall",
																										"src": "6875:15:3"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nativeSrc": "6898:6:3",
																												"nodeType": "YulIdentifier",
																												"src": "6898:6:3"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6892:5:3",
																											"nodeType": "YulIdentifier",
																											"src": "6892:5:3"
																										},
																										"nativeSrc": "6892:13:3",
																										"nodeType": "YulFunctionCall",
																										"src": "6892:13:3"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nativeSrc": "6868:6:3",
																									"nodeType": "YulIdentifier",
																									"src": "6868:6:3"
																								},
																								"nativeSrc": "6868:38:3",
																								"nodeType": "YulFunctionCall",
																								"src": "6868:38:3"
																							},
																							"nativeSrc": "6868:38:3",
																							"nodeType": "YulExpressionStatement",
																							"src": "6868:38:3"
																						}
																					]
																				},
																				"evmVersion": "shanghai",
																				"externalReferences": [
																					{
																						"declaration": 967,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "6883:6:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 967,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "6898:6:3",
																						"valueSize": 1
																					}
																				],
																				"id": 973,
																				"nodeType": "InlineAssembly",
																				"src": "6837:87:3"
																			}
																		]
																	}
																},
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 976,
																			"name": "ExecutionFailed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "6958:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6958:17:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 978,
																	"nodeType": "RevertStatement",
																	"src": "6951:24:3"
																}
															]
														},
														"errorName": "",
														"id": 980,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 968,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 967,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "6774:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 980,
																	"src": "6761:19:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 966,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6761:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6760:21:3"
														},
														"src": "6754:232:3"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 953,
															"name": "module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "6675:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "6683:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 955,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "6690:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 950,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "6656:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 949,
																"name": "IUserVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "6645:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUserVault_$548_$",
																	"typeString": "type(contract IUserVault)"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6645:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUserVault_$548",
																"typeString": "contract IUserVault"
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6663:11:3",
														"memberName": "executeCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 542,
														"src": "6645:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,uint256,bytes memory) external returns (bytes memory)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6645:50:3",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 981,
												"nodeType": "TryStatement",
												"src": "6641:345:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 983,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "7095:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7110:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7102:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 984,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7102:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7102:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 988,
															"name": "moduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "7114:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 989,
															"name": "module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "7124:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 990,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "7132:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 991,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "7139:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 992,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "7145:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 982,
														"name": "ActionExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "7080:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,bytes32,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7080:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "EmitStatement",
												"src": "7075:74:3"
											},
											{
												"expression": {
													"id": 995,
													"name": "res",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 947,
													"src": "7166:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 919,
												"id": 996,
												"nodeType": "Return",
												"src": "7159:10:3"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "6087:164:3",
										"text": "@notice Admin fallback: owner of this contract can execute module actions directly (no signature).\n Useful for governance-driven or emergency operations."
									},
									"functionSelector": "2dac633b",
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 916,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 915,
												"name": "onlyOwner",
												"nameLocations": [
													"6408:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6408:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "6408:9:3"
										}
									],
									"name": "executeModuleActionByOwner",
									"nameLocation": "6265:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "moduleId",
												"nameLocation": "6309:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "6301:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 906,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6301:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "6335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "6327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6327:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6358:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "6350:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6350:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6388:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "6373:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 912,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6373:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6291:107:3"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "6427:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6427:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6426:14:3"
									},
									"scope": 1024,
									"src": "6256:920:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "7297:41:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1006,
														"name": "modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "7314:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
															"typeString": "mapping(bytes32 => address)"
														}
													},
													"id": 1008,
													"indexExpression": {
														"id": 1007,
														"name": "moduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "7322:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7314:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1005,
												"id": 1009,
												"nodeType": "Return",
												"src": "7307:24:3"
											}
										]
									},
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "7182:41:3",
										"text": "========== HELPERS / VIEWS =========="
									},
									"functionSelector": "85acd641",
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getModule",
									"nameLocation": "7237:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "moduleId",
												"nameLocation": "7255:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "7247:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1000,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:18:3"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "7288:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7287:9:3"
									},
									"scope": 1024,
									"src": "7228:110:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "7409:37:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1018,
														"name": "nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7426:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1020,
													"indexExpression": {
														"id": 1019,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "7433:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7426:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1017,
												"id": 1021,
												"nodeType": "Return",
												"src": "7419:20:3"
											}
										]
									},
									"functionSelector": "2d0335ab",
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNonce",
									"nameLocation": "7353:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "7370:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "7362:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7362:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7361:15:3"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "7400:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7400:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7399:9:3"
									},
									"scope": 1024,
									"src": "7344:102:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1025,
							"src": "1545:5903:3",
							"usedErrors": [
								13,
								18,
								188,
								193,
								198,
								550,
								552,
								554,
								556,
								558,
								560,
								562
							],
							"usedEvents": [
								24,
								574,
								580,
								596
							]
						}
					],
					"src": "32:7417:3"
				},
				"id": 3
			}
		}
	}
}