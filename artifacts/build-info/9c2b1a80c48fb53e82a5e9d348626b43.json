{
	"id": "9c2b1a80c48fb53e82a5e9d348626b43",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"src/Contract Architecture/Core Infrastructure/UserVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/**\n * @title UserVault (cloneable)\n * @notice Minimal, secure per-user vault meant to be cloned via EIP-1167 (WalletManager).\n *         Initialize once via `initialize(owner_)`.\n *\n * Security notes:\n *  - This contract is intentionally small and avoids full OpenZeppelin upgradeable patterns\n *    to keep clone bytecode minimal. It implements a simple initializer guard.\n *  - Owner controls funds; ActionExecutor should be whitelisted off-chain/onchain to call `executeCall`\n *    or Gnosis-style multisig flows should be used if you want shared control.\n */\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { SafeERC20 } from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/// Basic errors (cheaper than revert strings)\nerror AlreadyInitialized();\nerror NotOwner();\nerror ZeroAddress();\nerror TransferFailed();\nerror NotWhitelistedCaller();\nerror InvalidTarget();\n\ncontract UserVault {\n    using SafeERC20 for IERC20;\n\n    /// @notice Vault owner (the user)\n    address private _owner;\n\n    /// @notice Whether initialize has been called\n    bool private _initialized;\n\n    /// @notice Optional: an address allowed to call executeCall on behalf of the owner (e.g., ActionExecutor)\n    mapping(address => bool) public executorWhitelist;\n\n    /// ========== EVENTS ==========\n    event Initialized(address indexed owner);\n    event ETHReceived(address indexed from, uint256 amount);\n    event ERC20Deposited(address indexed token, address indexed from, uint256 amount);\n    event ETHWithdrawn(address indexed to, uint256 amount);\n    event ERC20Withdrawn(address indexed token, address indexed to, uint256 amount);\n    event ExecutorWhitelisted(address indexed executor, bool allowed);\n    event ExecutedCall(address indexed caller, address indexed target, uint256 value, bytes data, bytes result);\n\n    /// ========== MODIFIERS ==========\n    modifier onlyOwner() {\n        if (msg.sender != _owner) revert NotOwner();\n        _;\n    }\n\n    modifier onlyOwnerOrExecutor() {\n        if (msg.sender != _owner && !executorWhitelist[msg.sender]) revert NotOwner();\n        _;\n    }\n\n    /// ========== INITIALIZER ==========\n    /// @dev called by the clone right after creation\n    function initialize(address owner_) external {\n        if (_initialized) revert AlreadyInitialized();\n        if (owner_ == address(0)) revert ZeroAddress();\n\n        _owner = owner_;\n        _initialized = true;\n\n        emit Initialized(owner_);\n    }\n\n    /// ========== OWNER VIEW ==========\n    function owner() external view returns (address) {\n        return _owner;\n    }\n\n    /// ========== DEPOSITS ==========\n    /// Accept ETH\n    receive() external payable {\n        emit ETHReceived(msg.sender, msg.value);\n    }\n\n    /// Convenience deposit function (no-op besides event)\n    function depositETH() external payable {\n        emit ETHReceived(msg.sender, msg.value);\n    }\n\n    /// Called by user (or any address) that transferred ERC20 tokens to vault via `transfer`\n    /// Use only to emit an indexed event for offchain indexing systems.\n    function notifyERC20Deposit(address token, uint256 amount) external {\n        if (token == address(0)) revert ZeroAddress();\n        emit ERC20Deposited(token, msg.sender, amount);\n    }\n\n    /// ========== WITHDRAWALS ==========\n    /// Owner-only withdraw ETH\n    function withdrawETH(address payable to, uint256 amount) external onlyOwner {\n        if (to == address(0)) revert ZeroAddress();\n        (bool ok, ) = to.call{value: amount}(\"\");\n        if (!ok) revert TransferFailed();\n        emit ETHWithdrawn(to, amount);\n    }\n\n    /// Owner-only withdraw ERC20\n    function withdrawERC20(\n        address token,\n        address to,\n        uint256 amount\n    ) external onlyOwner {\n        if (token == address(0) || to == address(0)) revert ZeroAddress();\n        IERC20(token).safeTransfer(to, amount);\n        emit ERC20Withdrawn(token, to, amount);\n    }\n\n    /// Owner can approve a spender for ERC20\n    function approveERC20(\n        address token,\n        address spender,\n        uint256 amount\n    ) external onlyOwner {\n        if (token == address(0) || spender == address(0)) revert ZeroAddress();\n        IERC20(token).approve(spender, amount);\n        // No event for approve (ERC20 Approval emits its own)\n    }\n\n    /// ========== EXECUTOR WHITELIST (optional) ==========\n    /// Add/remove an offchain/executor address allowed to call executeCall\n    function setExecutorAllowed(address executor, bool allowed) external onlyOwner {\n        if (executor == address(0)) revert ZeroAddress();\n        executorWhitelist[executor] = allowed;\n        emit ExecutorWhitelisted(executor, allowed);\n    }\n\n    /// ========== GENERIC CALL (for ActionExecutor integration) ==========\n    /**\n     * @notice Execute arbitrary call from the vault.\n     * @dev    Must be called by owner or a whitelisted executor. Returns raw call return data.\n     *         Use with caution â€” giving an executor this ability is equivalent to giving control\n     *         of the vault's funds to that executor.\n     *\n     * @param target The destination contract / address to call.\n     * @param value  Amount of ETH to send with the call.\n     * @param data   Calldata to send.\n     * @return result The returned data from the call.\n     */\n    function executeCall(\n        address target,\n        uint256 value,\n        bytes calldata data\n    ) external onlyOwnerOrExecutor returns (bytes memory result) {\n        if (target == address(0)) revert InvalidTarget();\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool ok, bytes memory res) = target.call{value: value}(data);\n        if (!ok) {\n            // bubble revert reason if present\n            if (res.length > 0) {\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    revert(add(32, res), mload(res))\n                }\n            }\n            revert TransferFailed();\n        }\n\n        emit ExecutedCall(msg.sender, target, value, data, res);\n        return res;\n    }\n\n    /// ========== HELPERS ==========\n    /// Approve then call helper (useful for DEX routing patterns)\n    function approveAndCall(\n    address token,\n    address spender,\n    uint256 amount,\n    address target,\n    bytes calldata data\n) external onlyOwnerOrExecutor returns (bytes memory) {\n    IERC20(token).approve(spender, amount);\n    return this.executeCall(target, 0, data);\n}\n\n    /// ========== EMERGENCY ==========\n    /// Emergency withdraw all ETH and tokens to owner (owner-only)\n    function emergencyWithdrawERC20(address token) external onlyOwner {\n        uint256 bal = IERC20(token).balanceOf(address(this));\n        if (bal > 0) IERC20(token).safeTransfer(_owner, bal);\n        emit ERC20Withdrawn(token, _owner, bal);\n    }\n\n    function emergencyWithdrawETH() external onlyOwner {\n        uint256 bal = address(this).balance;\n        if (bal > 0) {\n            (bool ok, ) = payable(_owner).call{value: bal}(\"\");\n            if (!ok) revert TransferFailed();\n            emit ETHWithdrawn(_owner, bal);\n        }\n    }\n\n    /// ========== VIEW HELPERS ==========\n    function isInitialized() external view returns (bool) {\n        return _initialized;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203b15a8ff66b01ea7180eca4bf5afb71d40e0816fd039a53b4a381ccd9330fea364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203b15a8ff66b01ea7180eca4bf5afb71d40e0816fd039a53b4a381ccd9330fea364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE ISZERO 0xA8 SELFDESTRUCT PUSH7 0xB01EA7180ECA4B CREATE2 0xAF 0xB7 SAR BLOCKHASH 0xE0 DUP2 PUSH16 0xD039A53B4A381CCD9330FEA364736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "698:9376:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:9376:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203b15a8ff66b01ea7180eca4bf5afb71d40e0816fd039a53b4a381ccd9330fea364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE ISZERO 0xA8 SELFDESTRUCT PUSH7 0xB01EA7180ECA4B CREATE2 0xAF 0xB7 SAR BLOCKHASH 0xE0 DUP2 PUSH16 0xD039A53B4A381CCD9330FEA364736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "698:9376:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203b15a8ff66b01ea7180eca4bf5afb71d40e0816fd039a53b4a381ccd9330fea364736f6c634300081a0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/Contract Architecture/Core Infrastructure/UserVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Contract Architecture/Core Infrastructure/UserVault.sol": {
				"UserVault": {
					"abi": [
						{
							"inputs": [],
							"name": "AlreadyInitialized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTarget",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Withdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ETHReceived",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ETHWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"name": "ExecutedCall",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "executor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "allowed",
									"type": "bool"
								}
							],
							"name": "ExecutorWhitelisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approveERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "emergencyWithdrawERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "executeCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "executorWhitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "notifyERC20Deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "executor",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "allowed",
									"type": "bool"
								}
							],
							"name": "setExecutorAllowed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"executeCall(address,uint256,bytes)": {
								"details": "Must be called by owner or a whitelisted executor. Returns raw call return data.         Use with caution â€” giving an executor this ability is equivalent to giving control         of the vault's funds to that executor.",
								"params": {
									"data": "Calldata to send.",
									"target": "The destination contract / address to call.",
									"value": "Amount of ETH to send with the call."
								},
								"returns": {
									"result": "The returned data from the call."
								}
							},
							"initialize(address)": {
								"details": "called by the clone right after creation"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":974:7343  contract UserVault {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":974:7343  contract UserVault {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x84536017\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa8e5e4aa\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa8e5e4aa\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf32f1864\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf6326fb3\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x84536017\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9e5d4c49\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x44004cc1\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x44004cc1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4782f779\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x54ba7696\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x68fec4da\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x103657e7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x392e53cd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x40c442de\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2772:2806  ETHReceived(msg.sender, msg.value) */\n      mload(0x40)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2796:2805  msg.value */\n      callvalue\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2784:2794  msg.sender */\n      caller\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2772:2806  ETHReceived(msg.sender, msg.value) */\n      0xbfe611b001dfcd411432f7bf0d79b82b4b2ee81511edac123a3403c357fb972a\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2772:2806  ETHReceived(msg.sender, msg.value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":974:7343  contract UserVault {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6270:6546  function approveAndCall(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7251:7341  function isInitialized() external view returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7299:7303  bool */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7322:7334  _initialized */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7251:7341  function isInitialized() external view returns (bool) {... */\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":2317:2331   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2310:2332   */\n      iszero\n        /* \"#utility.yul\":2292:2333   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2280:2282   */\n      0x20\n        /* \"#utility.yul\":2265:2283   */\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7251:7341  function isInitialized() external view returns (bool) {... */\n      tag_29\n        /* \"#utility.yul\":2152:2339   */\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6660:6906  function emergencyWithdrawERC20(address token) external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3718:4011  function withdrawERC20(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_37\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3412:3678  function withdrawETH(address payable to, uint256 amount) external onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_37\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1294:1343  mapping(address => bool) public executorWhitelist */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_32\n      tag_53\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_53:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4522:4766  function setExecutorAllowed(address executor, bool allowed) external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_37\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6912:7202  function emergencyWithdrawETH() external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_37\n      tag_63\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2587:2666  function owner() external view returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2627:2634  address */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2653:2659  _owner */\n      sload\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2587:2666  function owner() external view returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2653:2659  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4145:4196   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4133:4135   */\n      0x20\n        /* \"#utility.yul\":4118:4136   */\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2587:2666  function owner() external view returns (address) {... */\n      tag_29\n        /* \"#utility.yul\":3999:4202   */\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5392:6159  function executeCall(... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_25\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4063:4380  function approveERC20(... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_37\n      tag_77\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2287:2540  function initialize(address owner_) external {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_37\n      tag_81\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3146:3332  function notifyERC20Deposit(address token, uint256 amount) external {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_37\n      tag_85\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2878:2973  function depositETH() external payable {... */\n    tag_16:\n      tag_37\n      tag_89\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6270:6546  function approveAndCall(... */\n    tag_28:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2108:2114  _owner */\n      sload(0x00)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6439:6451  bytes memory */\n      0x60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2108:2114  _owner */\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2094:2104  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2094:2114  msg.sender != _owner */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2094:2148  msg.sender != _owner && !executorWhitelist[msg.sender] */\n      tag_91\n      jumpi\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2137:2147  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2119:2148  executorWhitelist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2119:2136  executorWhitelist */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2119:2148  executorWhitelist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2118:2148  !executorWhitelist[msg.sender] */\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2094:2148  msg.sender != _owner && !executorWhitelist[msg.sender] */\n    tag_91:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2090:2167  if (msg.sender != _owner && !executorWhitelist[msg.sender]) revert NotOwner() */\n      iszero\n      tag_92\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2157:2167  NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x30cd7471)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2090:2167  if (msg.sender != _owner && !executorWhitelist[msg.sender]) revert NotOwner() */\n    tag_92:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6459:6497  IERC20(token).approve(spender, amount) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5440:5472   */\n      dup8\n      dup2\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6459:6497  IERC20(token).approve(spender, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5422:5473   */\n      mstore\n        /* \"#utility.yul\":5489:5507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5482:5516   */\n      dup8\n      swap1\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6459:6480  IERC20(token).approve */\n      dup9\n      and\n      swap1\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":5395:5413   */\n      0x44\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6459:6497  IERC20(token).approve(spender, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6510:6543  this.executeCall(target, 0, data) */\n      mload(0x40)\n      shl(0xe0, 0x9e5d4c49)\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6510:6514  this */\n      address\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6510:6526  this.executeCall */\n      0x9e5d4c49\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6510:6543  this.executeCall(target, 0, data) */\n      tag_100\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6527:6533  target */\n      dup8\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6535:6536  0 */\n      0x00\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6538:6542  data */\n      dup9\n      swap1\n      dup9\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6510:6543  this.executeCall(target, 0, data) */\n      0x04\n      add\n      tag_101\n      jump\t// in\n    tag_100:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_104\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6503:6543  return this.executeCall(target, 0, data) */\n      swap8\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6270:6546  function approveAndCall(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6660:6906  function emergencyWithdrawERC20(address token) external onlyOwner {... */\n    tag_40:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2000:2006  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1986:1996  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1986:2006  msg.sender != _owner */\n      eq\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1982:2025  if (msg.sender != _owner) revert NotOwner() */\n      tag_108\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2015:2025  NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x30cd7471)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1982:2025  if (msg.sender != _owner) revert NotOwner() */\n    tag_108:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6750:6788  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6782:6786  this */\n      address\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6750:6788  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4145:4196   */\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6736:6747  uint256 bal */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6750:6773  IERC20(token).balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4118:4136   */\n      0x24\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6750:6788  IERC20(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6736:6788  uint256 bal = IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6802:6809  bal > 0 */\n      dup1\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6798:6850  if (bal > 0) IERC20(token).safeTransfer(_owner, bal) */\n      tag_116\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6838:6844  _owner */\n      sload(0x00)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6811:6850  IERC20(token).safeTransfer(_owner, bal) */\n      tag_116\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6811:6837  IERC20(token).safeTransfer */\n      dup5\n      dup2\n      and\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6838:6844  _owner */\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6846:6849  bal */\n      dup4\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6811:6837  IERC20(token).safeTransfer */\n      tag_117\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6811:6850  IERC20(token).safeTransfer(_owner, bal) */\n      jump\t// in\n    tag_116:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6887:6893  _owner */\n      sload(0x00)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6865:6899  ERC20Withdrawn(token, _owner, bal) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6887:6893  _owner */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6865:6899  ERC20Withdrawn(token, _owner, bal) */\n      dup5\n      and\n      swap1\n      0xbfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b1025362\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6865:6899  ERC20Withdrawn(token, _owner, bal) */\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6726:6906  {... */\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6660:6906  function emergencyWithdrawERC20(address token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3718:4011  function withdrawERC20(... */\n    tag_45:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2000:2006  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1986:1996  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1986:2006  msg.sender != _owner */\n      eq\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1982:2025  if (msg.sender != _owner) revert NotOwner() */\n      tag_120\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2015:2025  NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x30cd7471)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1982:2025  if (msg.sender != _owner) revert NotOwner() */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3847:3866  token == address(0) */\n      dup4\n      and\n      iszero\n      dup1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3847:3886  token == address(0) || to == address(0) */\n      tag_122\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3870:3886  to == address(0) */\n      dup3\n      and\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3847:3886  token == address(0) || to == address(0) */\n    tag_122:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3843:3908  if (token == address(0) || to == address(0)) revert ZeroAddress() */\n      iszero\n      tag_123\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3895:3908  ZeroAddress() */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3843:3908  if (token == address(0) || to == address(0)) revert ZeroAddress() */\n    tag_123:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3918:3956  IERC20(token).safeTransfer(to, amount) */\n      tag_124\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3918:3944  IERC20(token).safeTransfer */\n      dup5\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3945:3947  to */\n      dup4\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3949:3955  amount */\n      dup4\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3918:3944  IERC20(token).safeTransfer */\n      tag_117\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3918:3956  IERC20(token).safeTransfer(to, amount) */\n      jump\t// in\n    tag_124:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3993:3995  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3971:4004  ERC20Withdrawn(token, to, amount) */\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3986:3991  token */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3971:4004  ERC20Withdrawn(token, to, amount) */\n      and\n      0xbfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b1025362\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3997:4003  amount */\n      dup4\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3971:4004  ERC20Withdrawn(token, to, amount) */\n      mload(0x40)\n      tag_125\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3971:4004  ERC20Withdrawn(token, to, amount) */\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3718:4011  function withdrawERC20(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3412:3678  function withdrawETH(address payable to, uint256 amount) external onlyOwner {... */\n    tag_50:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2000:2006  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1986:1996  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1986:2006  msg.sender != _owner */\n      eq\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1982:2025  if (msg.sender != _owner) revert NotOwner() */\n      tag_127\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2015:2025  NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x30cd7471)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1982:2025  if (msg.sender != _owner) revert NotOwner() */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3502:3518  to == address(0) */\n      dup3\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3498:3540  if (to == address(0)) revert ZeroAddress() */\n      tag_129\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3527:3540  ZeroAddress() */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3498:3540  if (to == address(0)) revert ZeroAddress() */\n    tag_129:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3551:3558  bool ok */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3564:3566  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3564:3571  to.call */\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3579:3585  amount */\n      dup3\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3564:3590  to.call{value: amount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_134\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_133)\n    tag_134:\n      0x60\n      swap2\n      pop\n    tag_133:\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3550:3590  (bool ok, ) = to.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3605:3607  ok */\n      dup1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3600:3632  if (!ok) revert TransferFailed() */\n      tag_135\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3616:3632  TransferFailed() */\n      mload(0x40)\n      shl(0xe3, 0x12171d83)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3600:3632  if (!ok) revert TransferFailed() */\n    tag_135:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3660:3662  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3647:3671  ETHWithdrawn(to, amount) */\n      and\n      0x94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3664:3670  amount */\n      dup4\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3647:3671  ETHWithdrawn(to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3647:3671  ETHWithdrawn(to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3488:3678  {... */\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3412:3678  function withdrawETH(address payable to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4522:4766  function setExecutorAllowed(address executor, bool allowed) external onlyOwner {... */\n    tag_60:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2000:2006  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1986:1996  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1986:2006  msg.sender != _owner */\n      eq\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1982:2025  if (msg.sender != _owner) revert NotOwner() */\n      tag_138\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2015:2025  NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x30cd7471)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1982:2025  if (msg.sender != _owner) revert NotOwner() */\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4615:4637  executor == address(0) */\n      dup3\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4611:4659  if (executor == address(0)) revert ZeroAddress() */\n      tag_140\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4646:4659  ZeroAddress() */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4611:4659  if (executor == address(0)) revert ZeroAddress() */\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4669:4696  executorWhitelist[executor] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4669:4686  executorWhitelist */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4669:4696  executorWhitelist[executor] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4669:4706  executorWhitelist[executor] = allowed */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup6\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4721:4759  ExecutorWhitelisted(executor, allowed) */\n      swap2\n      mload\n        /* \"#utility.yul\":2292:2333   */\n      swap2\n      dup3\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4721:4759  ExecutorWhitelisted(executor, allowed) */\n      0x19f4c310cf148369e5605e8f3538cee4d3495da0612c9a45c0b89105ed6fee4d\n      swap2\n        /* \"#utility.yul\":2265:2283   */\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4721:4759  ExecutorWhitelisted(executor, allowed) */\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4522:4766  function setExecutorAllowed(address executor, bool allowed) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6912:7202  function emergencyWithdrawETH() external onlyOwner {... */\n    tag_63:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2000:2006  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1986:1996  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1986:2006  msg.sender != _owner */\n      eq\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1982:2025  if (msg.sender != _owner) revert NotOwner() */\n      tag_143\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2015:2025  NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x30cd7471)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1982:2025  if (msg.sender != _owner) revert NotOwner() */\n    tag_143:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6987:7008  address(this).balance */\n      selfbalance\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7022:7029  bal > 0 */\n      dup1\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7018:7196  if (bal > 0) {... */\n      tag_145\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7046:7053  bool ok */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7067:7073  _owner */\n      dup1\n      sload\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7059:7095  payable(_owner).call{value: bal}(\"\") */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7067:7073  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7087:7090  bal */\n      dup4\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7046:7053  bool ok */\n      dup4\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7059:7095  payable(_owner).call{value: bal}(\"\") */\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7046:7053  bool ok */\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7059:7095  payable(_owner).call{value: bal}(\"\") */\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7087:7090  bal */\n      dup6\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7067:7073  _owner */\n      dup8\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7059:7095  payable(_owner).call{value: bal}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_149\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_148)\n    tag_149:\n      0x60\n      swap2\n      pop\n    tag_148:\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7045:7095  (bool ok, ) = payable(_owner).call{value: bal}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7114:7116  ok */\n      dup1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7109:7141  if (!ok) revert TransferFailed() */\n      tag_150\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7125:7141  TransferFailed() */\n      mload(0x40)\n      shl(0xe3, 0x12171d83)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7109:7141  if (!ok) revert TransferFailed() */\n    tag_150:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7173:7179  _owner */\n      sload(0x00)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7160:7185  ETHWithdrawn(_owner, bal) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7173:7179  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7160:7185  ETHWithdrawn(_owner, bal) */\n      0x94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7160:7185  ETHWithdrawn(_owner, bal) */\n      tag_141\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7018:7196  if (bal > 0) {... */\n    tag_145:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6963:7202  {... */\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6912:7202  function emergencyWithdrawETH() external onlyOwner {... */\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5392:6159  function executeCall(... */\n    tag_73:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2108:2114  _owner */\n      sload(0x00)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5533:5552  bytes memory result */\n      0x60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2108:2114  _owner */\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2094:2104  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2094:2114  msg.sender != _owner */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2094:2148  msg.sender != _owner && !executorWhitelist[msg.sender] */\n      tag_154\n      jumpi\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2137:2147  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2119:2148  executorWhitelist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2119:2136  executorWhitelist */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2119:2148  executorWhitelist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2118:2148  !executorWhitelist[msg.sender] */\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2094:2148  msg.sender != _owner && !executorWhitelist[msg.sender] */\n    tag_154:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2090:2167  if (msg.sender != _owner && !executorWhitelist[msg.sender]) revert NotOwner() */\n      iszero\n      tag_155\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2157:2167  NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x30cd7471)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2090:2167  if (msg.sender != _owner && !executorWhitelist[msg.sender]) revert NotOwner() */\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5568:5588  target == address(0) */\n      dup6\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5564:5612  if (target == address(0)) revert InvalidTarget() */\n      tag_157\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5597:5612  InvalidTarget() */\n      mload(0x40)\n      shl(0xe1, 0x416aebb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5564:5612  if (target == address(0)) revert InvalidTarget() */\n    tag_157:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5683:5690  bool ok */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5692:5708  bytes memory res */\n      dup1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5712:5718  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5712:5723  target.call */\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5731:5736  value */\n      dup7\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5738:5742  data */\n      dup7\n      dup7\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5712:5743  target.call{value: value}(data) */\n      mload(0x40)\n      tag_158\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_162\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_161)\n    tag_162:\n      0x60\n      swap2\n      pop\n    tag_161:\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5682:5743  (bool ok, bytes memory res) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5758:5760  ok */\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5753:6067  if (!ok) {... */\n      tag_163\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5827:5837  res.length */\n      dup1\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5827:5841  res.length > 0 */\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5823:6020  if (res.length > 0) {... */\n      tag_164\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5983:5986  res */\n      dup1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5977:5987  mload(res) */\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5971:5974  res */\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5967:5969  32 */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5963:5975  add(32, res) */\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5956:5988  revert(add(32, res), mload(res)) */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5823:6020  if (res.length > 0) {... */\n    tag_164:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6040:6056  TransferFailed() */\n      mload(0x40)\n      shl(0xe3, 0x12171d83)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5753:6067  if (!ok) {... */\n    tag_163:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6107:6113  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6082:6132  ExecutedCall(msg.sender, target, value, data, res) */\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6095:6105  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6082:6132  ExecutedCall(msg.sender, target, value, data, res) */\n      and\n      0x335a1fecd5558554165c05171954925d0d97911ad1d259ef6bb18eb2c07a58aa\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6115:6120  value */\n      dup9\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6122:6126  data */\n      dup9\n      dup9\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6128:6131  res */\n      dup7\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6082:6132  ExecutedCall(msg.sender, target, value, data, res) */\n      mload(0x40)\n      tag_165\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6149:6152  res */\n      swap7\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5392:6159  function executeCall(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4063:4380  function approveERC20(... */\n    tag_78:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2000:2006  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1986:1996  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1986:2006  msg.sender != _owner */\n      eq\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1982:2025  if (msg.sender != _owner) revert NotOwner() */\n      tag_168\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2015:2025  NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x30cd7471)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1982:2025  if (msg.sender != _owner) revert NotOwner() */\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4196:4215  token == address(0) */\n      dup4\n      and\n      iszero\n      dup1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4196:4240  token == address(0) || spender == address(0) */\n      tag_170\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4219:4240  spender == address(0) */\n      dup3\n      and\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4196:4240  token == address(0) || spender == address(0) */\n    tag_170:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4192:4262  if (token == address(0) || spender == address(0)) revert ZeroAddress() */\n      iszero\n      tag_171\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4249:4262  ZeroAddress() */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4192:4262  if (token == address(0) || spender == address(0)) revert ZeroAddress() */\n    tag_171:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4272:4310  IERC20(token).approve(spender, amount) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5440:5472   */\n      dup4\n      dup2\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4272:4310  IERC20(token).approve(spender, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5422:5473   */\n      mstore\n        /* \"#utility.yul\":5489:5507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5482:5516   */\n      dup4\n      swap1\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4272:4293  IERC20(token).approve */\n      dup5\n      and\n      swap1\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":5395:5413   */\n      0x44\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4272:4310  IERC20(token).approve(spender, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_175:\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4063:4380  function approveERC20(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2287:2540  function initialize(address owner_) external {... */\n    tag_82:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2346:2358  _initialized */\n      sload(0x00)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2342:2387  if (_initialized) revert AlreadyInitialized() */\n      iszero\n      tag_177\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2367:2387  AlreadyInitialized() */\n      mload(0x40)\n      shl(0xe4, 0xdc149f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2342:2387  if (_initialized) revert AlreadyInitialized() */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2401:2421  owner_ == address(0) */\n      dup2\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2397:2443  if (owner_ == address(0)) revert ZeroAddress() */\n      tag_178\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2430:2443  ZeroAddress() */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2397:2443  if (owner_ == address(0)) revert ZeroAddress() */\n    tag_178:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2454:2460  _owner */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2454:2469  _owner = owner_ */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x01))\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2479:2498  _initialized = true */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2454:2469  _owner = owner_ */\n      dup4\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2479:2498  _initialized = true */\n      swap1\n      dup2\n      or\n      shl(0xa0, 0x01)\n      or\n      dup3\n      sstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2514:2533  Initialized(owner_) */\n      mload(0x40)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2454:2469  _owner = owner_ */\n      swap1\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2514:2533  Initialized(owner_) */\n      0x908408e307fc569b417f6cbec5d5a06f44a0a505ac0479b47d421a4b2fd6a1e6\n      swap2\n      log2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2287:2540  function initialize(address owner_) external {... */\n      pop\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3146:3332  function notifyERC20Deposit(address token, uint256 amount) external {... */\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3228:3247  token == address(0) */\n      dup3\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3224:3269  if (token == address(0)) revert ZeroAddress() */\n      tag_180\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3256:3269  ZeroAddress() */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3224:3269  if (token == address(0)) revert ZeroAddress() */\n    tag_180:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3284:3325  ERC20Deposited(token, msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3306:3316  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3284:3325  ERC20Deposited(token, msg.sender, amount) */\n      dup5\n      and\n      swap1\n      0xe33e9822e3317b004d587136bab2627ea1ecfbba4eb79abddd0a56cfdd09c0e1\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3284:3325  ERC20Deposited(token, msg.sender, amount) */\n      tag_118\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2878:2973  function depositETH() external payable {... */\n    tag_89:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2932:2966  ETHReceived(msg.sender, msg.value) */\n      mload(0x40)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2956:2965  msg.value */\n      callvalue\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2944:2954  msg.sender */\n      caller\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2932:2966  ETHReceived(msg.sender, msg.value) */\n      0xbfe611b001dfcd411432f7bf0d79b82b4b2ee81511edac123a3403c357fb972a\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2932:2966  ETHReceived(msg.sender, msg.value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2878:2973  function depositETH() external payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5440:5472   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5422:5473   */\n      mstore\n        /* \"#utility.yul\":5489:5507   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5482:5516   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":5395:5413   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_185\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_189:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_191)\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4163:4195   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4145:4196   */\n      mstore\n        /* \"#utility.yul\":4118:4136   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":196:327   */\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":271:302   */\n      dup2\n      and\n        /* \"#utility.yul\":261:303   */\n      dup2\n      eq\n        /* \"#utility.yul\":251:321   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":332:679   */\n    tag_195:\n        /* \"#utility.yul\":383:391   */\n      0x00\n        /* \"#utility.yul\":393:399   */\n      dup1\n        /* \"#utility.yul\":447:450   */\n      dup4\n        /* \"#utility.yul\":440:444   */\n      0x1f\n        /* \"#utility.yul\":432:438   */\n      dup5\n        /* \"#utility.yul\":428:445   */\n      add\n        /* \"#utility.yul\":424:451   */\n      slt\n        /* \"#utility.yul\":414:469   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":465:466   */\n      0x00\n        /* \"#utility.yul\":462:463   */\n      dup1\n        /* \"#utility.yul\":455:467   */\n      revert\n        /* \"#utility.yul\":414:469   */\n    tag_205:\n      pop\n        /* \"#utility.yul\":488:508   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":531:549   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":520:550   */\n      dup2\n      gt\n        /* \"#utility.yul\":517:567   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":563:564   */\n      0x00\n        /* \"#utility.yul\":560:561   */\n      dup1\n        /* \"#utility.yul\":553:565   */\n      revert\n        /* \"#utility.yul\":517:567   */\n    tag_206:\n        /* \"#utility.yul\":600:604   */\n      0x20\n        /* \"#utility.yul\":592:598   */\n      dup4\n        /* \"#utility.yul\":588:605   */\n      add\n        /* \"#utility.yul\":576:605   */\n      swap2\n      pop\n        /* \"#utility.yul\":652:655   */\n      dup4\n        /* \"#utility.yul\":645:649   */\n      0x20\n        /* \"#utility.yul\":636:642   */\n      dup3\n        /* \"#utility.yul\":628:634   */\n      dup6\n        /* \"#utility.yul\":624:643   */\n      add\n        /* \"#utility.yul\":620:650   */\n      add\n        /* \"#utility.yul\":617:656   */\n      gt\n        /* \"#utility.yul\":614:673   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":669:670   */\n      0x00\n        /* \"#utility.yul\":666:667   */\n      dup1\n        /* \"#utility.yul\":659:671   */\n      revert\n        /* \"#utility.yul\":614:673   */\n    tag_207:\n        /* \"#utility.yul\":332:679   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:1632   */\n    tag_27:\n        /* \"#utility.yul\":790:796   */\n      0x00\n        /* \"#utility.yul\":798:804   */\n      dup1\n        /* \"#utility.yul\":806:812   */\n      0x00\n        /* \"#utility.yul\":814:820   */\n      dup1\n        /* \"#utility.yul\":822:828   */\n      0x00\n        /* \"#utility.yul\":830:836   */\n      dup1\n        /* \"#utility.yul\":883:886   */\n      0xa0\n        /* \"#utility.yul\":871:880   */\n      dup8\n        /* \"#utility.yul\":862:869   */\n      dup10\n        /* \"#utility.yul\":858:881   */\n      sub\n        /* \"#utility.yul\":854:887   */\n      slt\n        /* \"#utility.yul\":851:904   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":900:901   */\n      0x00\n        /* \"#utility.yul\":897:898   */\n      dup1\n        /* \"#utility.yul\":890:902   */\n      revert\n        /* \"#utility.yul\":851:904   */\n    tag_209:\n        /* \"#utility.yul\":939:948   */\n      dup7\n        /* \"#utility.yul\":926:949   */\n      calldataload\n        /* \"#utility.yul\":958:989   */\n      tag_210\n        /* \"#utility.yul\":983:988   */\n      dup2\n        /* \"#utility.yul\":958:989   */\n      tag_194\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1008:1013   */\n      swap6\n      pop\n        /* \"#utility.yul\":1065:1067   */\n      0x20\n        /* \"#utility.yul\":1050:1068   */\n      dup8\n      add\n        /* \"#utility.yul\":1037:1069   */\n      calldataload\n        /* \"#utility.yul\":1078:1111   */\n      tag_211\n        /* \"#utility.yul\":1037:1069   */\n      dup2\n        /* \"#utility.yul\":1078:1111   */\n      tag_194\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1130:1137   */\n      swap5\n      pop\n        /* \"#utility.yul\":1210:1212   */\n      0x40\n        /* \"#utility.yul\":1195:1213   */\n      dup8\n      add\n        /* \"#utility.yul\":1182:1214   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":1292:1294   */\n      0x60\n        /* \"#utility.yul\":1277:1295   */\n      dup8\n      add\n        /* \"#utility.yul\":1264:1296   */\n      calldataload\n        /* \"#utility.yul\":1305:1338   */\n      tag_212\n        /* \"#utility.yul\":1264:1296   */\n      dup2\n        /* \"#utility.yul\":1305:1338   */\n      tag_194\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":1357:1364   */\n      swap3\n      pop\n        /* \"#utility.yul\":1415:1418   */\n      0x80\n        /* \"#utility.yul\":1400:1419   */\n      dup8\n      add\n        /* \"#utility.yul\":1387:1420   */\n      calldataload\n        /* \"#utility.yul\":1443:1461   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1432:1462   */\n      dup2\n      gt\n        /* \"#utility.yul\":1429:1479   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":1475:1476   */\n      0x00\n        /* \"#utility.yul\":1472:1473   */\n      dup1\n        /* \"#utility.yul\":1465:1477   */\n      revert\n        /* \"#utility.yul\":1429:1479   */\n    tag_213:\n        /* \"#utility.yul\":1514:1572   */\n      tag_214\n        /* \"#utility.yul\":1564:1571   */\n      dup10\n        /* \"#utility.yul\":1555:1561   */\n      dup3\n        /* \"#utility.yul\":1544:1553   */\n      dup11\n        /* \"#utility.yul\":1540:1562   */\n      add\n        /* \"#utility.yul\":1514:1572   */\n      tag_195\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":684:1632   */\n      swap8\n      swap11\n      swap7\n      swap10\n      pop\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n        /* \"#utility.yul\":1591:1599   */\n      swap4\n      swap5\n        /* \"#utility.yul\":684:1632   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1637:1925   */\n    tag_196:\n        /* \"#utility.yul\":1678:1681   */\n      0x00\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1710:1722   */\n      mload\n        /* \"#utility.yul\":1743:1749   */\n      dup1\n        /* \"#utility.yul\":1738:1741   */\n      dup5\n        /* \"#utility.yul\":1731:1750   */\n      mstore\n        /* \"#utility.yul\":1799:1805   */\n      dup1\n        /* \"#utility.yul\":1792:1796   */\n      0x20\n        /* \"#utility.yul\":1785:1790   */\n      dup5\n        /* \"#utility.yul\":1781:1797   */\n      add\n        /* \"#utility.yul\":1774:1778   */\n      0x20\n        /* \"#utility.yul\":1769:1772   */\n      dup7\n        /* \"#utility.yul\":1765:1779   */\n      add\n        /* \"#utility.yul\":1759:1806   */\n      mcopy\n        /* \"#utility.yul\":1851:1852   */\n      0x00\n        /* \"#utility.yul\":1844:1848   */\n      0x20\n        /* \"#utility.yul\":1835:1841   */\n      dup3\n        /* \"#utility.yul\":1830:1833   */\n      dup7\n        /* \"#utility.yul\":1826:1842   */\n      add\n        /* \"#utility.yul\":1822:1849   */\n      add\n        /* \"#utility.yul\":1815:1853   */\n      mstore\n        /* \"#utility.yul\":1914:1918   */\n      0x20\n        /* \"#utility.yul\":1907:1909   */\n      0x1f\n        /* \"#utility.yul\":1903:1910   */\n      not\n        /* \"#utility.yul\":1898:1900   */\n      0x1f\n        /* \"#utility.yul\":1890:1896   */\n      dup4\n        /* \"#utility.yul\":1886:1901   */\n      add\n        /* \"#utility.yul\":1882:1911   */\n      and\n        /* \"#utility.yul\":1877:1880   */\n      dup6\n        /* \"#utility.yul\":1873:1912   */\n      add\n        /* \"#utility.yul\":1869:1919   */\n      add\n        /* \"#utility.yul\":1862:1919   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1637:1925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1930:2147   */\n    tag_30:\n        /* \"#utility.yul\":2077:2079   */\n      0x20\n        /* \"#utility.yul\":2066:2075   */\n      dup2\n        /* \"#utility.yul\":2059:2080   */\n      mstore\n        /* \"#utility.yul\":2040:2044   */\n      0x00\n        /* \"#utility.yul\":2097:2141   */\n      tag_217\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2126:2135   */\n      dup4\n        /* \"#utility.yul\":2122:2140   */\n      add\n        /* \"#utility.yul\":2114:2120   */\n      dup5\n        /* \"#utility.yul\":2097:2141   */\n      tag_196\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2089:2141   */\n      swap4\n        /* \"#utility.yul\":1930:2147   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2344:2591   */\n    tag_39:\n        /* \"#utility.yul\":2403:2409   */\n      0x00\n        /* \"#utility.yul\":2456:2458   */\n      0x20\n        /* \"#utility.yul\":2444:2453   */\n      dup3\n        /* \"#utility.yul\":2435:2442   */\n      dup5\n        /* \"#utility.yul\":2431:2454   */\n      sub\n        /* \"#utility.yul\":2427:2459   */\n      slt\n        /* \"#utility.yul\":2424:2476   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":2472:2473   */\n      0x00\n        /* \"#utility.yul\":2469:2470   */\n      dup1\n        /* \"#utility.yul\":2462:2474   */\n      revert\n        /* \"#utility.yul\":2424:2476   */\n    tag_220:\n        /* \"#utility.yul\":2511:2520   */\n      dup2\n        /* \"#utility.yul\":2498:2521   */\n      calldataload\n        /* \"#utility.yul\":2530:2561   */\n      tag_217\n        /* \"#utility.yul\":2555:2560   */\n      dup2\n        /* \"#utility.yul\":2530:2561   */\n      tag_194\n      jump\t// in\n        /* \"#utility.yul\":2596:3104   */\n    tag_44:\n        /* \"#utility.yul\":2673:2679   */\n      0x00\n        /* \"#utility.yul\":2681:2687   */\n      dup1\n        /* \"#utility.yul\":2689:2695   */\n      0x00\n        /* \"#utility.yul\":2742:2744   */\n      0x60\n        /* \"#utility.yul\":2730:2739   */\n      dup5\n        /* \"#utility.yul\":2721:2728   */\n      dup7\n        /* \"#utility.yul\":2717:2740   */\n      sub\n        /* \"#utility.yul\":2713:2745   */\n      slt\n        /* \"#utility.yul\":2710:2762   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":2758:2759   */\n      0x00\n        /* \"#utility.yul\":2755:2756   */\n      dup1\n        /* \"#utility.yul\":2748:2760   */\n      revert\n        /* \"#utility.yul\":2710:2762   */\n    tag_223:\n        /* \"#utility.yul\":2797:2806   */\n      dup4\n        /* \"#utility.yul\":2784:2807   */\n      calldataload\n        /* \"#utility.yul\":2816:2847   */\n      tag_224\n        /* \"#utility.yul\":2841:2846   */\n      dup2\n        /* \"#utility.yul\":2816:2847   */\n      tag_194\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2866:2871   */\n      swap3\n      pop\n        /* \"#utility.yul\":2923:2925   */\n      0x20\n        /* \"#utility.yul\":2908:2926   */\n      dup5\n      add\n        /* \"#utility.yul\":2895:2927   */\n      calldataload\n        /* \"#utility.yul\":2936:2969   */\n      tag_225\n        /* \"#utility.yul\":2895:2927   */\n      dup2\n        /* \"#utility.yul\":2936:2969   */\n      tag_194\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2596:3104   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2988:2995   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3068:3070   */\n      0x40\n        /* \"#utility.yul\":3053:3071   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3040:3072   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2596:3104   */\n      jump\t// out\n        /* \"#utility.yul\":3109:3484   */\n    tag_49:\n        /* \"#utility.yul\":3185:3191   */\n      0x00\n        /* \"#utility.yul\":3193:3199   */\n      dup1\n        /* \"#utility.yul\":3246:3248   */\n      0x40\n        /* \"#utility.yul\":3234:3243   */\n      dup4\n        /* \"#utility.yul\":3225:3232   */\n      dup6\n        /* \"#utility.yul\":3221:3244   */\n      sub\n        /* \"#utility.yul\":3217:3249   */\n      slt\n        /* \"#utility.yul\":3214:3266   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":3262:3263   */\n      0x00\n        /* \"#utility.yul\":3259:3260   */\n      dup1\n        /* \"#utility.yul\":3252:3264   */\n      revert\n        /* \"#utility.yul\":3214:3266   */\n    tag_227:\n        /* \"#utility.yul\":3301:3310   */\n      dup3\n        /* \"#utility.yul\":3288:3311   */\n      calldataload\n        /* \"#utility.yul\":3320:3351   */\n      tag_228\n        /* \"#utility.yul\":3345:3350   */\n      dup2\n        /* \"#utility.yul\":3320:3351   */\n      tag_194\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3370:3375   */\n      swap5\n        /* \"#utility.yul\":3448:3450   */\n      0x20\n        /* \"#utility.yul\":3433:3451   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3420:3452   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3109:3484   */\n      jump\t// out\n        /* \"#utility.yul\":3489:3607   */\n    tag_197:\n        /* \"#utility.yul\":3575:3580   */\n      dup1\n        /* \"#utility.yul\":3568:3581   */\n      iszero\n        /* \"#utility.yul\":3561:3582   */\n      iszero\n        /* \"#utility.yul\":3554:3559   */\n      dup2\n        /* \"#utility.yul\":3551:3583   */\n      eq\n        /* \"#utility.yul\":3541:3601   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":3597:3598   */\n      0x00\n        /* \"#utility.yul\":3594:3595   */\n      dup1\n        /* \"#utility.yul\":3587:3599   */\n      revert\n        /* \"#utility.yul\":3612:3994   */\n    tag_59:\n        /* \"#utility.yul\":3677:3683   */\n      0x00\n        /* \"#utility.yul\":3685:3691   */\n      dup1\n        /* \"#utility.yul\":3738:3740   */\n      0x40\n        /* \"#utility.yul\":3726:3735   */\n      dup4\n        /* \"#utility.yul\":3717:3724   */\n      dup6\n        /* \"#utility.yul\":3713:3736   */\n      sub\n        /* \"#utility.yul\":3709:3741   */\n      slt\n        /* \"#utility.yul\":3706:3758   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":3754:3755   */\n      0x00\n        /* \"#utility.yul\":3751:3752   */\n      dup1\n        /* \"#utility.yul\":3744:3756   */\n      revert\n        /* \"#utility.yul\":3706:3758   */\n    tag_232:\n        /* \"#utility.yul\":3793:3802   */\n      dup3\n        /* \"#utility.yul\":3780:3803   */\n      calldataload\n        /* \"#utility.yul\":3812:3843   */\n      tag_233\n        /* \"#utility.yul\":3837:3842   */\n      dup2\n        /* \"#utility.yul\":3812:3843   */\n      tag_194\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3862:3867   */\n      swap2\n      pop\n        /* \"#utility.yul\":3919:3921   */\n      0x20\n        /* \"#utility.yul\":3904:3922   */\n      dup4\n      add\n        /* \"#utility.yul\":3891:3923   */\n      calldataload\n        /* \"#utility.yul\":3932:3962   */\n      tag_234\n        /* \"#utility.yul\":3891:3923   */\n      dup2\n        /* \"#utility.yul\":3932:3962   */\n      tag_197\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3981:3988   */\n      dup1\n        /* \"#utility.yul\":3971:3988   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3612:3994   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4207:4871   */\n    tag_72:\n        /* \"#utility.yul\":4295:4301   */\n      0x00\n        /* \"#utility.yul\":4303:4309   */\n      dup1\n        /* \"#utility.yul\":4311:4317   */\n      0x00\n        /* \"#utility.yul\":4319:4325   */\n      dup1\n        /* \"#utility.yul\":4372:4374   */\n      0x60\n        /* \"#utility.yul\":4360:4369   */\n      dup6\n        /* \"#utility.yul\":4351:4358   */\n      dup8\n        /* \"#utility.yul\":4347:4370   */\n      sub\n        /* \"#utility.yul\":4343:4375   */\n      slt\n        /* \"#utility.yul\":4340:4392   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":4388:4389   */\n      0x00\n        /* \"#utility.yul\":4385:4386   */\n      dup1\n        /* \"#utility.yul\":4378:4390   */\n      revert\n        /* \"#utility.yul\":4340:4392   */\n    tag_237:\n        /* \"#utility.yul\":4427:4436   */\n      dup5\n        /* \"#utility.yul\":4414:4437   */\n      calldataload\n        /* \"#utility.yul\":4446:4477   */\n      tag_238\n        /* \"#utility.yul\":4471:4476   */\n      dup2\n        /* \"#utility.yul\":4446:4477   */\n      tag_194\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4496:4501   */\n      swap4\n      pop\n        /* \"#utility.yul\":4574:4576   */\n      0x20\n        /* \"#utility.yul\":4559:4577   */\n      dup6\n      add\n        /* \"#utility.yul\":4546:4578   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":4655:4657   */\n      0x40\n        /* \"#utility.yul\":4640:4658   */\n      dup6\n      add\n        /* \"#utility.yul\":4627:4659   */\n      calldataload\n        /* \"#utility.yul\":4682:4700   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4671:4701   */\n      dup2\n      gt\n        /* \"#utility.yul\":4668:4718   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":4714:4715   */\n      0x00\n        /* \"#utility.yul\":4711:4712   */\n      dup1\n        /* \"#utility.yul\":4704:4716   */\n      revert\n        /* \"#utility.yul\":4668:4718   */\n    tag_239:\n        /* \"#utility.yul\":4753:4811   */\n      tag_240\n        /* \"#utility.yul\":4803:4810   */\n      dup8\n        /* \"#utility.yul\":4794:4800   */\n      dup3\n        /* \"#utility.yul\":4783:4792   */\n      dup9\n        /* \"#utility.yul\":4779:4801   */\n      add\n        /* \"#utility.yul\":4753:4811   */\n      tag_195\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4207:4871   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n        /* \"#utility.yul\":4830:4838   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4207:4871   */\n      jump\t// out\n        /* \"#utility.yul\":5527:5772   */\n    tag_99:\n        /* \"#utility.yul\":5594:5600   */\n      0x00\n        /* \"#utility.yul\":5647:5649   */\n      0x20\n        /* \"#utility.yul\":5635:5644   */\n      dup3\n        /* \"#utility.yul\":5626:5633   */\n      dup5\n        /* \"#utility.yul\":5622:5645   */\n      sub\n        /* \"#utility.yul\":5618:5650   */\n      slt\n        /* \"#utility.yul\":5615:5667   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":5663:5664   */\n      0x00\n        /* \"#utility.yul\":5660:5661   */\n      dup1\n        /* \"#utility.yul\":5653:5665   */\n      revert\n        /* \"#utility.yul\":5615:5667   */\n    tag_246:\n        /* \"#utility.yul\":5695:5704   */\n      dup2\n        /* \"#utility.yul\":5689:5705   */\n      mload\n        /* \"#utility.yul\":5714:5742   */\n      tag_217\n        /* \"#utility.yul\":5736:5741   */\n      dup2\n        /* \"#utility.yul\":5714:5742   */\n      tag_197\n      jump\t// in\n        /* \"#utility.yul\":5777:6043   */\n    tag_198:\n        /* \"#utility.yul\":5865:5871   */\n      dup2\n        /* \"#utility.yul\":5860:5863   */\n      dup4\n        /* \"#utility.yul\":5853:5872   */\n      mstore\n        /* \"#utility.yul\":5917:5923   */\n      dup2\n        /* \"#utility.yul\":5910:5915   */\n      dup2\n        /* \"#utility.yul\":5903:5907   */\n      0x20\n        /* \"#utility.yul\":5898:5901   */\n      dup6\n        /* \"#utility.yul\":5894:5908   */\n      add\n        /* \"#utility.yul\":5881:5924   */\n      calldatacopy\n      pop\n        /* \"#utility.yul\":5969:5970   */\n      0x00\n        /* \"#utility.yul\":5944:5960   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":5962:5966   */\n      0x20\n        /* \"#utility.yul\":5940:5967   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":5933:5971   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6025:6027   */\n      0x1f\n        /* \"#utility.yul\":6004:6019   */\n      swap1\n      swap2\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6000:6029   */\n      and\n        /* \"#utility.yul\":5991:6030   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5987:6037   */\n      add\n      swap1\n        /* \"#utility.yul\":5777:6043   */\n      jump\t// out\n        /* \"#utility.yul\":6048:6468   */\n    tag_101:\n        /* \"#utility.yul\":6298:6299   */\n      0x01\n        /* \"#utility.yul\":6294:6295   */\n      dup1\n        /* \"#utility.yul\":6289:6292   */\n      0xa0\n        /* \"#utility.yul\":6285:6296   */\n      shl\n        /* \"#utility.yul\":6281:6300   */\n      sub\n        /* \"#utility.yul\":6273:6279   */\n      dup6\n        /* \"#utility.yul\":6269:6301   */\n      and\n        /* \"#utility.yul\":6258:6267   */\n      dup2\n        /* \"#utility.yul\":6251:6302   */\n      mstore\n        /* \"#utility.yul\":6338:6344   */\n      dup4\n        /* \"#utility.yul\":6333:6335   */\n      0x20\n        /* \"#utility.yul\":6322:6331   */\n      dup3\n        /* \"#utility.yul\":6318:6336   */\n      add\n        /* \"#utility.yul\":6311:6345   */\n      mstore\n        /* \"#utility.yul\":6381:6383   */\n      0x60\n        /* \"#utility.yul\":6376:6378   */\n      0x40\n        /* \"#utility.yul\":6365:6374   */\n      dup3\n        /* \"#utility.yul\":6361:6379   */\n      add\n        /* \"#utility.yul\":6354:6384   */\n      mstore\n        /* \"#utility.yul\":6232:6236   */\n      0x00\n        /* \"#utility.yul\":6401:6462   */\n      tag_250\n        /* \"#utility.yul\":6458:6460   */\n      0x60\n        /* \"#utility.yul\":6447:6456   */\n      dup4\n        /* \"#utility.yul\":6443:6461   */\n      add\n        /* \"#utility.yul\":6435:6441   */\n      dup5\n        /* \"#utility.yul\":6427:6433   */\n      dup7\n        /* \"#utility.yul\":6401:6462   */\n      tag_198\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6393:6462   */\n      swap7\n        /* \"#utility.yul\":6048:6468   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6473:6600   */\n    tag_199:\n        /* \"#utility.yul\":6534:6544   */\n      0x4e487b71\n        /* \"#utility.yul\":6529:6532   */\n      0xe0\n        /* \"#utility.yul\":6525:6545   */\n      shl\n        /* \"#utility.yul\":6522:6523   */\n      0x00\n        /* \"#utility.yul\":6515:6546   */\n      mstore\n        /* \"#utility.yul\":6565:6569   */\n      0x41\n        /* \"#utility.yul\":6562:6563   */\n      0x04\n        /* \"#utility.yul\":6555:6570   */\n      mstore\n        /* \"#utility.yul\":6589:6593   */\n      0x24\n        /* \"#utility.yul\":6586:6587   */\n      0x00\n        /* \"#utility.yul\":6579:6594   */\n      revert\n        /* \"#utility.yul\":6605:7539   */\n    tag_105:\n        /* \"#utility.yul\":6684:6690   */\n      0x00\n        /* \"#utility.yul\":6737:6739   */\n      0x20\n        /* \"#utility.yul\":6725:6734   */\n      dup3\n        /* \"#utility.yul\":6716:6723   */\n      dup5\n        /* \"#utility.yul\":6712:6735   */\n      sub\n        /* \"#utility.yul\":6708:6740   */\n      slt\n        /* \"#utility.yul\":6705:6757   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":6753:6754   */\n      0x00\n        /* \"#utility.yul\":6750:6751   */\n      dup1\n        /* \"#utility.yul\":6743:6755   */\n      revert\n        /* \"#utility.yul\":6705:6757   */\n    tag_253:\n        /* \"#utility.yul\":6786:6795   */\n      dup2\n        /* \"#utility.yul\":6780:6796   */\n      mload\n        /* \"#utility.yul\":6819:6837   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6811:6817   */\n      dup2\n        /* \"#utility.yul\":6808:6838   */\n      gt\n        /* \"#utility.yul\":6805:6855   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":6851:6852   */\n      0x00\n        /* \"#utility.yul\":6848:6849   */\n      dup1\n        /* \"#utility.yul\":6841:6853   */\n      revert\n        /* \"#utility.yul\":6805:6855   */\n    tag_254:\n        /* \"#utility.yul\":6874:6896   */\n      dup3\n      add\n        /* \"#utility.yul\":6927:6931   */\n      0x1f\n        /* \"#utility.yul\":6919:6932   */\n      dup2\n      add\n        /* \"#utility.yul\":6915:6942   */\n      dup5\n      sgt\n        /* \"#utility.yul\":6905:6960   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":6956:6957   */\n      0x00\n        /* \"#utility.yul\":6953:6954   */\n      dup1\n        /* \"#utility.yul\":6946:6958   */\n      revert\n        /* \"#utility.yul\":6905:6960   */\n    tag_255:\n        /* \"#utility.yul\":6989:6991   */\n      dup1\n        /* \"#utility.yul\":6983:6992   */\n      mload\n        /* \"#utility.yul\":7015:7033   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7007:7013   */\n      dup2\n        /* \"#utility.yul\":7004:7034   */\n      gt\n        /* \"#utility.yul\":7001:7057   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":7037:7055   */\n      tag_257\n      tag_199\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":7086:7088   */\n      0x40\n        /* \"#utility.yul\":7080:7089   */\n      mload\n        /* \"#utility.yul\":7178:7180   */\n      0x1f\n        /* \"#utility.yul\":7140:7157   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":7136:7167   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":7169:7171   */\n      0x3f\n        /* \"#utility.yul\":7132:7172   */\n      add\n        /* \"#utility.yul\":7128:7182   */\n      and\n        /* \"#utility.yul\":7116:7183   */\n      dup2\n      add\n        /* \"#utility.yul\":7213:7231   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7198:7232   */\n      dup2\n      gt\n        /* \"#utility.yul\":7234:7256   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":7195:7257   */\n      or\n        /* \"#utility.yul\":7192:7280   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":7260:7278   */\n      tag_259\n      tag_199\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":7296:7298   */\n      0x40\n        /* \"#utility.yul\":7289:7311   */\n      mstore\n        /* \"#utility.yul\":7320:7342   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":7361:7376   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":7378:7380   */\n      0x20\n        /* \"#utility.yul\":7357:7381   */\n      add\n        /* \"#utility.yul\":7354:7391   */\n      dup7\n      lt\n        /* \"#utility.yul\":7351:7408   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":7404:7405   */\n      0x00\n        /* \"#utility.yul\":7401:7402   */\n      dup1\n        /* \"#utility.yul\":7394:7406   */\n      revert\n        /* \"#utility.yul\":7351:7408   */\n    tag_260:\n        /* \"#utility.yul\":7453:7459   */\n      dup2\n        /* \"#utility.yul\":7448:7450   */\n      0x20\n        /* \"#utility.yul\":7444:7446   */\n      dup5\n        /* \"#utility.yul\":7440:7451   */\n      add\n        /* \"#utility.yul\":7435:7437   */\n      0x20\n        /* \"#utility.yul\":7427:7433   */\n      dup4\n        /* \"#utility.yul\":7423:7438   */\n      add\n        /* \"#utility.yul\":7417:7460   */\n      mcopy\n        /* \"#utility.yul\":7506:7507   */\n      0x00\n        /* \"#utility.yul\":7480:7499   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":7501:7503   */\n      0x20\n        /* \"#utility.yul\":7476:7504   */\n      add\n        /* \"#utility.yul\":7469:7508   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7484:7490   */\n      swap5\n        /* \"#utility.yul\":6605:7539   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7544:7728   */\n    tag_114:\n        /* \"#utility.yul\":7614:7620   */\n      0x00\n        /* \"#utility.yul\":7667:7669   */\n      0x20\n        /* \"#utility.yul\":7655:7664   */\n      dup3\n        /* \"#utility.yul\":7646:7653   */\n      dup5\n        /* \"#utility.yul\":7642:7665   */\n      sub\n        /* \"#utility.yul\":7638:7670   */\n      slt\n        /* \"#utility.yul\":7635:7687   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":7683:7684   */\n      0x00\n        /* \"#utility.yul\":7680:7681   */\n      dup1\n        /* \"#utility.yul\":7673:7685   */\n      revert\n        /* \"#utility.yul\":7635:7687   */\n    tag_262:\n      pop\n        /* \"#utility.yul\":7706:7722   */\n      mload\n      swap2\n        /* \"#utility.yul\":7544:7728   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7943:8214   */\n    tag_159:\n        /* \"#utility.yul\":8126:8132   */\n      dup2\n        /* \"#utility.yul\":8118:8124   */\n      dup4\n        /* \"#utility.yul\":8113:8116   */\n      dup3\n        /* \"#utility.yul\":8100:8133   */\n      calldatacopy\n        /* \"#utility.yul\":8082:8085   */\n      0x00\n        /* \"#utility.yul\":8152:8168   */\n      swap2\n      add\n        /* \"#utility.yul\":8177:8190   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":8152:8168   */\n      swap2\n        /* \"#utility.yul\":7943:8214   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8219:8694   */\n    tag_166:\n        /* \"#utility.yul\":8450:8456   */\n      dup5\n        /* \"#utility.yul\":8439:8448   */\n      dup2\n        /* \"#utility.yul\":8432:8457   */\n      mstore\n        /* \"#utility.yul\":8493:8495   */\n      0x60\n        /* \"#utility.yul\":8488:8490   */\n      0x20\n        /* \"#utility.yul\":8477:8486   */\n      dup3\n        /* \"#utility.yul\":8473:8491   */\n      add\n        /* \"#utility.yul\":8466:8496   */\n      mstore\n        /* \"#utility.yul\":8413:8417   */\n      0x00\n        /* \"#utility.yul\":8519:8580   */\n      tag_266\n        /* \"#utility.yul\":8576:8578   */\n      0x60\n        /* \"#utility.yul\":8565:8574   */\n      dup4\n        /* \"#utility.yul\":8561:8579   */\n      add\n        /* \"#utility.yul\":8553:8559   */\n      dup6\n        /* \"#utility.yul\":8545:8551   */\n      dup8\n        /* \"#utility.yul\":8519:8580   */\n      tag_198\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":8628:8637   */\n      dup3\n        /* \"#utility.yul\":8620:8626   */\n      dup2\n        /* \"#utility.yul\":8616:8638   */\n      sub\n        /* \"#utility.yul\":8611:8613   */\n      0x40\n        /* \"#utility.yul\":8600:8609   */\n      dup5\n        /* \"#utility.yul\":8596:8614   */\n      add\n        /* \"#utility.yul\":8589:8639   */\n      mstore\n        /* \"#utility.yul\":8656:8688   */\n      tag_104\n        /* \"#utility.yul\":8681:8687   */\n      dup2\n        /* \"#utility.yul\":8673:8679   */\n      dup6\n        /* \"#utility.yul\":8656:8688   */\n      tag_196\n      jump\t// in\n\n    auxdata: 0xa264697066735822122086974aef894815efe106296cf6248e20f30ced3a30cf5e0adde420815d70d09e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10AD DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84536017 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA8E5E4AA GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xA8E5E4AA EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xF32F1864 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x2DC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84536017 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x260 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x44004CC1 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x44004CC1 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x4782F779 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x54BA7696 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x68FEC4DA EQ PUSH2 0x207 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x103657E7 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x40C442DE EQ PUSH2 0x17A JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x118 JUMPI PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xBFE611B001DFCD411432F7BF0D79B82B4B2EE81511EDAC123A3403C357FB972A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x148 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE25 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x795 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x148 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x878 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0xAAD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE25 JUMP JUMPDEST PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x199 PUSH2 0xBAE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x310 JUMPI POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x32E JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE DUP9 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x37A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x9E5D4C49 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP1 PUSH4 0x9E5D4C49 SWAP1 PUSH2 0x3C8 SWAP1 DUP8 SWAP1 PUSH0 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xF2E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x40A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF73 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x483 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x1026 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH0 SLOAD PUSH2 0x4C8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH2 0xBE5 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP5 AND SWAP1 PUSH32 0xBFED55BDCD242E3DD0F60DDD7D1E87C67F61C34CD9527B3E6455D841B1025362 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x53B JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0x558 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x58A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0xBE5 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xBFED55BDCD242E3DD0F60DDD7D1E87C67F61C34CD9527B3E6455D841B1025362 DUP4 PUSH1 0x40 MLOAD PUSH2 0x5CF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x606 JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x62D JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x67B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x69D JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C DUP4 PUSH1 0x40 MLOAD PUSH2 0x6D8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x19F4C310CF148369E5605E8F3538CEE4D3495DA0612C9A45C0B89105ED6FEE4D SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x875 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x815 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C SWAP1 PUSH1 0x20 ADD PUSH2 0x789 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x8A4 JUMPI POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x8E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x416AEBB5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x906 SWAP3 SWAP2 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x940 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x945 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x977 JUMPI DUP1 MLOAD ISZERO PUSH2 0x95E JUMPI DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x335A1FECD5558554165C05171954925D0D97911AD1D259EF6BB18EB2C07A58AA DUP9 DUP9 DUP9 DUP7 PUSH1 0x40 MLOAD PUSH2 0x9C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0xA19 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0xA37 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0xDC149F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAFD JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR PUSH1 0x1 PUSH1 0xA0 SHL OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x908408E307FC569B417F6CBEC5D5A06F44A0A505AC0479B47D421A4B2FD6A1E6 SWAP2 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xE33E9822E3317B004D587136BAB2627EA1ECFBBA4EB79ABDDD0A56CFDD09C0E1 SWAP1 PUSH1 0x20 ADD PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xBFE611B001DFCD411432F7BF0D79B82B4B2EE81511EDAC123A3403C357FB972A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xC37 SWAP1 DUP5 SWAP1 PUSH2 0xC3C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xC5B JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0xC72 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x875 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xCFE JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xD1A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0xD25 DUP2 PUSH2 0xCAC JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0xD35 DUP2 PUSH2 0xCAC JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0xD4C DUP2 PUSH2 0xCAC JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD67 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD73 DUP10 DUP3 DUP11 ADD PUSH2 0xCC0 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xDC5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD85 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDDC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDC5 DUP2 PUSH2 0xCAC JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xE04 DUP2 PUSH2 0xCAC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xE14 DUP2 PUSH2 0xCAC JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE36 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xE41 DUP2 PUSH2 0xCAC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x875 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE6D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xE78 DUP2 PUSH2 0xCAC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE88 DUP2 PUSH2 0xE4F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xEB1 DUP2 PUSH2 0xCAC JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xED3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEDF DUP8 DUP3 DUP9 ADD PUSH2 0xCC0 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEFB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDC5 DUP2 PUSH2 0xE4F JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0xF55 PUSH1 0x60 DUP4 ADD DUP5 DUP7 PUSH2 0xF06 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF83 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF99 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0xFA9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFC3 JUMPI PUSH2 0xFC3 PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xFF2 JUMPI PUSH2 0xFF2 PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x1009 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1036 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1065 PUSH1 0x60 DUP4 ADD DUP6 DUP8 PUSH2 0xF06 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x40A DUP2 DUP6 PUSH2 0xD85 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 SWAP8 BLOBBASEFEE 0xEF DUP10 BASEFEE ISZERO 0xEF 0xE1 MOD 0x29 PUSH13 0xF6248E20F30CED3A30CF5E0ADD 0xE4 KECCAK256 DUP2 TSTORE PUSH17 0xD09E64736F6C634300081A003300000000 ",
							"sourceMap": "974:6369:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_814": {
									"entryPoint": null,
									"id": 814,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_589": {
									"entryPoint": 3132,
									"id": 589,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@approveAndCall_1102": {
									"entryPoint": 740,
									"id": 1102,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@approveERC20_975": {
									"entryPoint": 2514,
									"id": 975,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@depositETH_826": {
									"entryPoint": 2990,
									"id": 826,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@emergencyWithdrawERC20_1141": {
									"entryPoint": 1045,
									"id": 1141,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@emergencyWithdrawETH_1183": {
									"entryPoint": 1941,
									"id": 1183,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@executeCall_1068": {
									"entryPoint": 2168,
									"id": 1068,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@executorWhitelist_677": {
									"entryPoint": null,
									"id": 677,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_793": {
									"entryPoint": 2733,
									"id": 793,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isInitialized_1192": {
									"entryPoint": null,
									"id": 1192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@notifyERC20Deposit_852": {
									"entryPoint": 2890,
									"id": 852,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_802": {
									"entryPoint": null,
									"id": 802,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransfer_212": {
									"entryPoint": 3045,
									"id": 212,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setExecutorAllowed_1007": {
									"entryPoint": 1765,
									"id": 1007,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawERC20_937": {
									"entryPoint": 1297,
									"id": 937,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdrawETH_893": {
									"entryPoint": 1500,
									"id": 893,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 3264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 3621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_addresst_bytes_calldata_ptr": {
									"entryPoint": 3333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 3731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_memory_ptr_fromMemory": {
									"entryPoint": 3955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 3461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes_calldata": {
									"entryPoint": 3846,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4157,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3886,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4172,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 3935,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 3663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8696:7",
										"nodeType": "YulBlock",
										"src": "0:8696:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:7",
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nativeSrc": "125:26:7",
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nativeSrc": "133:18:7",
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nativeSrc": "160:25:7",
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nativeSrc": "160:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:7",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:7",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:7",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nativeSrc": "241:86:7",
													"nodeType": "YulBlock",
													"src": "241:86:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "305:16:7",
																"nodeType": "YulBlock",
																"src": "305:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "314:1:7",
																					"nodeType": "YulLiteral",
																					"src": "314:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:7",
																					"nodeType": "YulLiteral",
																					"src": "317:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "307:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:7"
																			},
																			"nativeSrc": "307:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:7"
																		},
																		"nativeSrc": "307:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "264:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "264:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "275:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "275:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "290:3:7",
																										"nodeType": "YulLiteral",
																										"src": "290:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "295:1:7",
																										"nodeType": "YulLiteral",
																										"src": "295:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "286:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "286:3:7"
																								},
																								"nativeSrc": "286:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "286:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "299:1:7",
																								"nodeType": "YulLiteral",
																								"src": "299:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "282:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "282:3:7"
																						},
																						"nativeSrc": "282:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "282:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "271:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "271:3:7"
																				},
																				"nativeSrc": "271:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "271:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "261:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "261:2:7"
																		},
																		"nativeSrc": "261:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "261:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "254:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "254:6:7"
																},
																"nativeSrc": "254:50:7",
																"nodeType": "YulFunctionCall",
																"src": "254:50:7"
															},
															"nativeSrc": "251:70:7",
															"nodeType": "YulIf",
															"src": "251:70:7"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "196:131:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "230:5:7",
														"nodeType": "YulTypedName",
														"src": "230:5:7",
														"type": ""
													}
												],
												"src": "196:131:7"
											},
											{
												"body": {
													"nativeSrc": "404:275:7",
													"nodeType": "YulBlock",
													"src": "404:275:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "453:16:7",
																"nodeType": "YulBlock",
																"src": "453:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "462:1:7",
																					"nodeType": "YulLiteral",
																					"src": "462:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "465:1:7",
																					"nodeType": "YulLiteral",
																					"src": "465:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "455:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "455:6:7"
																			},
																			"nativeSrc": "455:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "455:12:7"
																		},
																		"nativeSrc": "455:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "455:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "432:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "432:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "440:4:7",
																						"nodeType": "YulLiteral",
																						"src": "440:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "428:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "428:3:7"
																				},
																				"nativeSrc": "428:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "428:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "447:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "447:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "424:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "424:3:7"
																		},
																		"nativeSrc": "424:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "424:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "417:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:7"
																},
																"nativeSrc": "417:35:7",
																"nodeType": "YulFunctionCall",
																"src": "417:35:7"
															},
															"nativeSrc": "414:55:7",
															"nodeType": "YulIf",
															"src": "414:55:7"
														},
														{
															"nativeSrc": "478:30:7",
															"nodeType": "YulAssignment",
															"src": "478:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "501:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "501:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "488:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "488:12:7"
																},
																"nativeSrc": "488:20:7",
																"nodeType": "YulFunctionCall",
																"src": "488:20:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "478:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "478:6:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "551:16:7",
																"nodeType": "YulBlock",
																"src": "551:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "560:1:7",
																					"nodeType": "YulLiteral",
																					"src": "560:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "563:1:7",
																					"nodeType": "YulLiteral",
																					"src": "563:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "553:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "553:6:7"
																			},
																			"nativeSrc": "553:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "553:12:7"
																		},
																		"nativeSrc": "553:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "553:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "523:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "531:18:7",
																		"nodeType": "YulLiteral",
																		"src": "531:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "520:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "520:2:7"
																},
																"nativeSrc": "520:30:7",
																"nodeType": "YulFunctionCall",
																"src": "520:30:7"
															},
															"nativeSrc": "517:50:7",
															"nodeType": "YulIf",
															"src": "517:50:7"
														},
														{
															"nativeSrc": "576:29:7",
															"nodeType": "YulAssignment",
															"src": "576:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "592:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "592:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "600:4:7",
																		"nodeType": "YulLiteral",
																		"src": "600:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "588:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "588:3:7"
																},
																"nativeSrc": "588:17:7",
																"nodeType": "YulFunctionCall",
																"src": "588:17:7"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "576:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "576:8:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "657:16:7",
																"nodeType": "YulBlock",
																"src": "657:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "666:1:7",
																					"nodeType": "YulLiteral",
																					"src": "666:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "669:1:7",
																					"nodeType": "YulLiteral",
																					"src": "669:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "659:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "659:6:7"
																			},
																			"nativeSrc": "659:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "659:12:7"
																		},
																		"nativeSrc": "659:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "659:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "628:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "628:6:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "636:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "636:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "624:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "624:3:7"
																				},
																				"nativeSrc": "624:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "624:19:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "645:4:7",
																				"nodeType": "YulLiteral",
																				"src": "645:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "620:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "620:3:7"
																		},
																		"nativeSrc": "620:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "620:30:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "652:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "652:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "617:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "617:2:7"
																},
																"nativeSrc": "617:39:7",
																"nodeType": "YulFunctionCall",
																"src": "617:39:7"
															},
															"nativeSrc": "614:59:7",
															"nodeType": "YulIf",
															"src": "614:59:7"
														}
													]
												},
												"name": "abi_decode_bytes_calldata",
												"nativeSrc": "332:347:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "367:6:7",
														"nodeType": "YulTypedName",
														"src": "367:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "375:3:7",
														"nodeType": "YulTypedName",
														"src": "375:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "383:8:7",
														"nodeType": "YulTypedName",
														"src": "383:8:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "393:6:7",
														"nodeType": "YulTypedName",
														"src": "393:6:7",
														"type": ""
													}
												],
												"src": "332:347:7"
											},
											{
												"body": {
													"nativeSrc": "841:791:7",
													"nodeType": "YulBlock",
													"src": "841:791:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "888:16:7",
																"nodeType": "YulBlock",
																"src": "888:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "897:1:7",
																					"nodeType": "YulLiteral",
																					"src": "897:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "900:1:7",
																					"nodeType": "YulLiteral",
																					"src": "900:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "890:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "890:6:7"
																			},
																			"nativeSrc": "890:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "890:12:7"
																		},
																		"nativeSrc": "890:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "890:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "862:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "862:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "871:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "871:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "858:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "858:3:7"
																		},
																		"nativeSrc": "858:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "858:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "883:3:7",
																		"nodeType": "YulLiteral",
																		"src": "883:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "854:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "854:3:7"
																},
																"nativeSrc": "854:33:7",
																"nodeType": "YulFunctionCall",
																"src": "854:33:7"
															},
															"nativeSrc": "851:53:7",
															"nodeType": "YulIf",
															"src": "851:53:7"
														},
														{
															"nativeSrc": "913:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "913:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "939:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "939:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "926:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:12:7"
																},
																"nativeSrc": "926:23:7",
																"nodeType": "YulFunctionCall",
																"src": "926:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "917:5:7",
																	"nodeType": "YulTypedName",
																	"src": "917:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "983:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "983:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "958:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "958:24:7"
																},
																"nativeSrc": "958:31:7",
																"nodeType": "YulFunctionCall",
																"src": "958:31:7"
															},
															"nativeSrc": "958:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "958:31:7"
														},
														{
															"nativeSrc": "998:15:7",
															"nodeType": "YulAssignment",
															"src": "998:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1008:5:7",
																"nodeType": "YulIdentifier",
																"src": "1008:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "998:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "998:6:7"
																}
															]
														},
														{
															"nativeSrc": "1022:47:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1022:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1054:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1054:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1065:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1065:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1050:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1050:3:7"
																		},
																		"nativeSrc": "1050:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1050:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1037:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1037:12:7"
																},
																"nativeSrc": "1037:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1037:32:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1026:7:7",
																	"nodeType": "YulTypedName",
																	"src": "1026:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "1103:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "1103:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1078:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "1078:24:7"
																},
																"nativeSrc": "1078:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1078:33:7"
															},
															"nativeSrc": "1078:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1078:33:7"
														},
														{
															"nativeSrc": "1120:17:7",
															"nodeType": "YulAssignment",
															"src": "1120:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "1130:7:7",
																"nodeType": "YulIdentifier",
																"src": "1130:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1120:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1120:6:7"
																}
															]
														},
														{
															"nativeSrc": "1146:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1146:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1161:1:7",
																"nodeType": "YulLiteral",
																"src": "1161:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "1150:7:7",
																	"nodeType": "YulTypedName",
																	"src": "1150:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1171:43:7",
															"nodeType": "YulAssignment",
															"src": "1171:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1199:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1199:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1210:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1210:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1195:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1195:3:7"
																		},
																		"nativeSrc": "1195:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1195:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1182:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1182:12:7"
																},
																"nativeSrc": "1182:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1182:32:7"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "1171:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1171:7:7"
																}
															]
														},
														{
															"nativeSrc": "1223:17:7",
															"nodeType": "YulAssignment",
															"src": "1223:17:7",
															"value": {
																"name": "value_2",
																"nativeSrc": "1233:7:7",
																"nodeType": "YulIdentifier",
																"src": "1233:7:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1223:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1223:6:7"
																}
															]
														},
														{
															"nativeSrc": "1249:47:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1249:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1281:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1281:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1292:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1292:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1277:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1277:3:7"
																		},
																		"nativeSrc": "1277:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1277:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1264:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1264:12:7"
																},
																"nativeSrc": "1264:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1264:32:7"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "1253:7:7",
																	"nodeType": "YulTypedName",
																	"src": "1253:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nativeSrc": "1330:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "1330:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1305:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "1305:24:7"
																},
																"nativeSrc": "1305:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1305:33:7"
															},
															"nativeSrc": "1305:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1305:33:7"
														},
														{
															"nativeSrc": "1347:17:7",
															"nodeType": "YulAssignment",
															"src": "1347:17:7",
															"value": {
																"name": "value_3",
																"nativeSrc": "1357:7:7",
																"nodeType": "YulIdentifier",
																"src": "1357:7:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1347:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1347:6:7"
																}
															]
														},
														{
															"nativeSrc": "1373:47:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1373:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1404:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1404:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1415:3:7",
																				"nodeType": "YulLiteral",
																				"src": "1415:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1400:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1400:3:7"
																		},
																		"nativeSrc": "1400:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1400:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1387:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1387:12:7"
																},
																"nativeSrc": "1387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1387:33:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1377:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1377:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1463:16:7",
																"nodeType": "YulBlock",
																"src": "1463:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1472:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1472:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1475:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1475:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1465:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1465:6:7"
																			},
																			"nativeSrc": "1465:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1465:12:7"
																		},
																		"nativeSrc": "1465:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1465:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1435:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1435:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1443:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1443:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1432:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:7"
																},
																"nativeSrc": "1432:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1432:30:7"
															},
															"nativeSrc": "1429:50:7",
															"nodeType": "YulIf",
															"src": "1429:50:7"
														},
														{
															"nativeSrc": "1488:84:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1488:84:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1544:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1544:9:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1555:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1555:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1540:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1540:3:7"
																		},
																		"nativeSrc": "1540:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1540:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1564:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "1564:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nativeSrc": "1514:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "1514:25:7"
																},
																"nativeSrc": "1514:58:7",
																"nodeType": "YulFunctionCall",
																"src": "1514:58:7"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nativeSrc": "1492:8:7",
																	"nodeType": "YulTypedName",
																	"src": "1492:8:7",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nativeSrc": "1502:8:7",
																	"nodeType": "YulTypedName",
																	"src": "1502:8:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1581:18:7",
															"nodeType": "YulAssignment",
															"src": "1581:18:7",
															"value": {
																"name": "value4_1",
																"nativeSrc": "1591:8:7",
																"nodeType": "YulIdentifier",
																"src": "1591:8:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "1581:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1581:6:7"
																}
															]
														},
														{
															"nativeSrc": "1608:18:7",
															"nodeType": "YulAssignment",
															"src": "1608:18:7",
															"value": {
																"name": "value5_1",
																"nativeSrc": "1618:8:7",
																"nodeType": "YulIdentifier",
																"src": "1618:8:7"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "1608:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1608:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_addresst_bytes_calldata_ptr",
												"nativeSrc": "684:948:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "767:9:7",
														"nodeType": "YulTypedName",
														"src": "767:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "778:7:7",
														"nodeType": "YulTypedName",
														"src": "778:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "790:6:7",
														"nodeType": "YulTypedName",
														"src": "790:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "798:6:7",
														"nodeType": "YulTypedName",
														"src": "798:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "806:6:7",
														"nodeType": "YulTypedName",
														"src": "806:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "814:6:7",
														"nodeType": "YulTypedName",
														"src": "814:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "822:6:7",
														"nodeType": "YulTypedName",
														"src": "822:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "830:6:7",
														"nodeType": "YulTypedName",
														"src": "830:6:7",
														"type": ""
													}
												],
												"src": "684:948:7"
											},
											{
												"body": {
													"nativeSrc": "1686:239:7",
													"nodeType": "YulBlock",
													"src": "1686:239:7",
													"statements": [
														{
															"nativeSrc": "1696:26:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1696:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1716:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1716:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1710:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1710:5:7"
																},
																"nativeSrc": "1710:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1710:12:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1700:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1700:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1738:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1738:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1743:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1743:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1731:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1731:6:7"
																},
																"nativeSrc": "1731:19:7",
																"nodeType": "YulFunctionCall",
																"src": "1731:19:7"
															},
															"nativeSrc": "1731:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "1731:19:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1769:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1769:3:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1774:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1774:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1765:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1765:3:7"
																		},
																		"nativeSrc": "1765:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1765:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1785:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1785:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1792:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1792:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1781:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1781:3:7"
																		},
																		"nativeSrc": "1781:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1781:16:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1799:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1799:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1759:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1759:5:7"
																},
																"nativeSrc": "1759:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1759:47:7"
															},
															"nativeSrc": "1759:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1759:47:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "1830:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1830:3:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1835:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1835:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1826:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1826:3:7"
																				},
																				"nativeSrc": "1826:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1826:16:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1844:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1844:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1822:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1822:3:7"
																		},
																		"nativeSrc": "1822:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1822:27:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1851:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1851:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:7"
																},
																"nativeSrc": "1815:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1815:38:7"
															},
															"nativeSrc": "1815:38:7",
															"nodeType": "YulExpressionStatement",
															"src": "1815:38:7"
														},
														{
															"nativeSrc": "1862:57:7",
															"nodeType": "YulAssignment",
															"src": "1862:57:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1877:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1877:3:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1890:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "1890:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1898:2:7",
																								"nodeType": "YulLiteral",
																								"src": "1898:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1886:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1886:3:7"
																						},
																						"nativeSrc": "1886:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1886:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1907:2:7",
																								"nodeType": "YulLiteral",
																								"src": "1907:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1903:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1903:3:7"
																						},
																						"nativeSrc": "1903:7:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1903:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1882:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1882:3:7"
																				},
																				"nativeSrc": "1882:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1882:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1873:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1873:3:7"
																		},
																		"nativeSrc": "1873:39:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1873:39:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1914:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1914:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1869:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1869:3:7"
																},
																"nativeSrc": "1869:50:7",
																"nodeType": "YulFunctionCall",
																"src": "1869:50:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1862:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1862:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nativeSrc": "1637:288:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1663:5:7",
														"nodeType": "YulTypedName",
														"src": "1663:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1670:3:7",
														"nodeType": "YulTypedName",
														"src": "1670:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1678:3:7",
														"nodeType": "YulTypedName",
														"src": "1678:3:7",
														"type": ""
													}
												],
												"src": "1637:288:7"
											},
											{
												"body": {
													"nativeSrc": "2049:98:7",
													"nodeType": "YulBlock",
													"src": "2049:98:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2066:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2066:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2077:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2077:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2059:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2059:6:7"
																},
																"nativeSrc": "2059:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2059:21:7"
															},
															"nativeSrc": "2059:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2059:21:7"
														},
														{
															"nativeSrc": "2089:52:7",
															"nodeType": "YulAssignment",
															"src": "2089:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2114:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2114:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2126:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2126:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2137:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2137:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:7"
																		},
																		"nativeSrc": "2122:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "2097:16:7",
																	"nodeType": "YulIdentifier",
																	"src": "2097:16:7"
																},
																"nativeSrc": "2097:44:7",
																"nodeType": "YulFunctionCall",
																"src": "2097:44:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2089:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2089:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "1930:217:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2018:9:7",
														"nodeType": "YulTypedName",
														"src": "2018:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2029:6:7",
														"nodeType": "YulTypedName",
														"src": "2029:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2040:4:7",
														"nodeType": "YulTypedName",
														"src": "2040:4:7",
														"type": ""
													}
												],
												"src": "1930:217:7"
											},
											{
												"body": {
													"nativeSrc": "2247:92:7",
													"nodeType": "YulBlock",
													"src": "2247:92:7",
													"statements": [
														{
															"nativeSrc": "2257:26:7",
															"nodeType": "YulAssignment",
															"src": "2257:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2269:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2269:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2280:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2280:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2265:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2265:3:7"
																},
																"nativeSrc": "2265:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2265:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2257:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2257:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2299:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2299:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "2324:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2317:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2317:6:7"
																				},
																				"nativeSrc": "2317:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2317:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2310:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2310:6:7"
																		},
																		"nativeSrc": "2310:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2310:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:7"
																},
																"nativeSrc": "2292:41:7",
																"nodeType": "YulFunctionCall",
																"src": "2292:41:7"
															},
															"nativeSrc": "2292:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "2292:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2152:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2216:9:7",
														"nodeType": "YulTypedName",
														"src": "2216:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2227:6:7",
														"nodeType": "YulTypedName",
														"src": "2227:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2238:4:7",
														"nodeType": "YulTypedName",
														"src": "2238:4:7",
														"type": ""
													}
												],
												"src": "2152:187:7"
											},
											{
												"body": {
													"nativeSrc": "2414:177:7",
													"nodeType": "YulBlock",
													"src": "2414:177:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2460:16:7",
																"nodeType": "YulBlock",
																"src": "2460:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2469:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2469:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2472:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2472:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2462:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2462:6:7"
																			},
																			"nativeSrc": "2462:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2462:12:7"
																		},
																		"nativeSrc": "2462:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2435:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2435:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2444:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2444:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2431:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2431:3:7"
																		},
																		"nativeSrc": "2431:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2431:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2456:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2456:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2427:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2427:3:7"
																},
																"nativeSrc": "2427:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2427:32:7"
															},
															"nativeSrc": "2424:52:7",
															"nodeType": "YulIf",
															"src": "2424:52:7"
														},
														{
															"nativeSrc": "2485:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2485:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2511:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2511:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2498:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2498:12:7"
																},
																"nativeSrc": "2498:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2498:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2489:5:7",
																	"nodeType": "YulTypedName",
																	"src": "2489:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2555:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2555:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2530:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "2530:24:7"
																},
																"nativeSrc": "2530:31:7",
																"nodeType": "YulFunctionCall",
																"src": "2530:31:7"
															},
															"nativeSrc": "2530:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "2530:31:7"
														},
														{
															"nativeSrc": "2570:15:7",
															"nodeType": "YulAssignment",
															"src": "2570:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "2580:5:7",
																"nodeType": "YulIdentifier",
																"src": "2580:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2570:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2570:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2344:247:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2380:9:7",
														"nodeType": "YulTypedName",
														"src": "2380:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2391:7:7",
														"nodeType": "YulTypedName",
														"src": "2391:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2403:6:7",
														"nodeType": "YulTypedName",
														"src": "2403:6:7",
														"type": ""
													}
												],
												"src": "2344:247:7"
											},
											{
												"body": {
													"nativeSrc": "2700:404:7",
													"nodeType": "YulBlock",
													"src": "2700:404:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2746:16:7",
																"nodeType": "YulBlock",
																"src": "2746:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2755:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2755:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2758:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2758:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2748:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2748:6:7"
																			},
																			"nativeSrc": "2748:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2748:12:7"
																		},
																		"nativeSrc": "2748:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2748:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2721:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2721:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2730:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2730:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2717:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2717:3:7"
																		},
																		"nativeSrc": "2717:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2717:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2742:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2742:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2713:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2713:3:7"
																},
																"nativeSrc": "2713:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2713:32:7"
															},
															"nativeSrc": "2710:52:7",
															"nodeType": "YulIf",
															"src": "2710:52:7"
														},
														{
															"nativeSrc": "2771:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2771:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2797:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2797:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2784:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2784:12:7"
																},
																"nativeSrc": "2784:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2784:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2775:5:7",
																	"nodeType": "YulTypedName",
																	"src": "2775:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2841:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2841:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2816:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "2816:24:7"
																},
																"nativeSrc": "2816:31:7",
																"nodeType": "YulFunctionCall",
																"src": "2816:31:7"
															},
															"nativeSrc": "2816:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "2816:31:7"
														},
														{
															"nativeSrc": "2856:15:7",
															"nodeType": "YulAssignment",
															"src": "2856:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "2866:5:7",
																"nodeType": "YulIdentifier",
																"src": "2866:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2856:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2856:6:7"
																}
															]
														},
														{
															"nativeSrc": "2880:47:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2880:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2912:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2912:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2923:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2923:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2908:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2908:3:7"
																		},
																		"nativeSrc": "2908:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2908:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2895:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2895:12:7"
																},
																"nativeSrc": "2895:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2895:32:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2884:7:7",
																	"nodeType": "YulTypedName",
																	"src": "2884:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2961:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2961:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2936:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "2936:24:7"
																},
																"nativeSrc": "2936:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2936:33:7"
															},
															"nativeSrc": "2936:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2936:33:7"
														},
														{
															"nativeSrc": "2978:17:7",
															"nodeType": "YulAssignment",
															"src": "2978:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "2988:7:7",
																"nodeType": "YulIdentifier",
																"src": "2988:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2978:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2978:6:7"
																}
															]
														},
														{
															"nativeSrc": "3004:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3004:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3019:1:7",
																"nodeType": "YulLiteral",
																"src": "3019:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3008:7:7",
																	"nodeType": "YulTypedName",
																	"src": "3008:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3029:43:7",
															"nodeType": "YulAssignment",
															"src": "3029:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3057:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3057:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3068:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3068:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3053:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3053:3:7"
																		},
																		"nativeSrc": "3053:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3053:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3040:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3040:12:7"
																},
																"nativeSrc": "3040:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3040:32:7"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "3029:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3029:7:7"
																}
															]
														},
														{
															"nativeSrc": "3081:17:7",
															"nodeType": "YulAssignment",
															"src": "3081:17:7",
															"value": {
																"name": "value_2",
																"nativeSrc": "3091:7:7",
																"nodeType": "YulIdentifier",
																"src": "3091:7:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3081:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3081:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2596:508:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2650:9:7",
														"nodeType": "YulTypedName",
														"src": "2650:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2661:7:7",
														"nodeType": "YulTypedName",
														"src": "2661:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2673:6:7",
														"nodeType": "YulTypedName",
														"src": "2673:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2681:6:7",
														"nodeType": "YulTypedName",
														"src": "2681:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2689:6:7",
														"nodeType": "YulTypedName",
														"src": "2689:6:7",
														"type": ""
													}
												],
												"src": "2596:508:7"
											},
											{
												"body": {
													"nativeSrc": "3204:280:7",
													"nodeType": "YulBlock",
													"src": "3204:280:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3250:16:7",
																"nodeType": "YulBlock",
																"src": "3250:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3259:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3259:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3262:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3262:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3252:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3252:6:7"
																			},
																			"nativeSrc": "3252:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3252:12:7"
																		},
																		"nativeSrc": "3252:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3252:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3225:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3225:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3234:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3234:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3221:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3221:3:7"
																		},
																		"nativeSrc": "3221:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3221:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3246:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3246:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3217:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3217:3:7"
																},
																"nativeSrc": "3217:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3217:32:7"
															},
															"nativeSrc": "3214:52:7",
															"nodeType": "YulIf",
															"src": "3214:52:7"
														},
														{
															"nativeSrc": "3275:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3275:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3301:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3301:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3288:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3288:12:7"
																},
																"nativeSrc": "3288:23:7",
																"nodeType": "YulFunctionCall",
																"src": "3288:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3279:5:7",
																	"nodeType": "YulTypedName",
																	"src": "3279:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3345:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3345:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3320:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "3320:24:7"
																},
																"nativeSrc": "3320:31:7",
																"nodeType": "YulFunctionCall",
																"src": "3320:31:7"
															},
															"nativeSrc": "3320:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "3320:31:7"
														},
														{
															"nativeSrc": "3360:15:7",
															"nodeType": "YulAssignment",
															"src": "3360:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "3370:5:7",
																"nodeType": "YulIdentifier",
																"src": "3370:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3360:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3360:6:7"
																}
															]
														},
														{
															"nativeSrc": "3384:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3384:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3399:1:7",
																"nodeType": "YulLiteral",
																"src": "3399:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3388:7:7",
																	"nodeType": "YulTypedName",
																	"src": "3388:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3409:43:7",
															"nodeType": "YulAssignment",
															"src": "3409:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3437:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3437:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3448:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3448:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3433:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3433:3:7"
																		},
																		"nativeSrc": "3433:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3433:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3420:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3420:12:7"
																},
																"nativeSrc": "3420:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3420:32:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3409:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3409:7:7"
																}
															]
														},
														{
															"nativeSrc": "3461:17:7",
															"nodeType": "YulAssignment",
															"src": "3461:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "3471:7:7",
																"nodeType": "YulIdentifier",
																"src": "3471:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3461:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3461:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nativeSrc": "3109:375:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3162:9:7",
														"nodeType": "YulTypedName",
														"src": "3162:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3173:7:7",
														"nodeType": "YulTypedName",
														"src": "3173:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3185:6:7",
														"nodeType": "YulTypedName",
														"src": "3185:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3193:6:7",
														"nodeType": "YulTypedName",
														"src": "3193:6:7",
														"type": ""
													}
												],
												"src": "3109:375:7"
											},
											{
												"body": {
													"nativeSrc": "3531:76:7",
													"nodeType": "YulBlock",
													"src": "3531:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3585:16:7",
																"nodeType": "YulBlock",
																"src": "3585:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3594:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3594:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3597:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3597:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3587:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3587:6:7"
																			},
																			"nativeSrc": "3587:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3587:12:7"
																		},
																		"nativeSrc": "3587:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3587:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3554:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3554:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3575:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "3575:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3568:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "3568:6:7"
																						},
																						"nativeSrc": "3568:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3568:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3561:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3561:6:7"
																				},
																				"nativeSrc": "3561:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3561:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3551:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3551:2:7"
																		},
																		"nativeSrc": "3551:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3551:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3544:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3544:6:7"
																},
																"nativeSrc": "3544:40:7",
																"nodeType": "YulFunctionCall",
																"src": "3544:40:7"
															},
															"nativeSrc": "3541:60:7",
															"nodeType": "YulIf",
															"src": "3541:60:7"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "3489:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3520:5:7",
														"nodeType": "YulTypedName",
														"src": "3520:5:7",
														"type": ""
													}
												],
												"src": "3489:118:7"
											},
											{
												"body": {
													"nativeSrc": "3696:298:7",
													"nodeType": "YulBlock",
													"src": "3696:298:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3742:16:7",
																"nodeType": "YulBlock",
																"src": "3742:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3751:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3751:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3754:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3754:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3744:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3744:6:7"
																			},
																			"nativeSrc": "3744:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3744:12:7"
																		},
																		"nativeSrc": "3744:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3744:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3717:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3717:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3726:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3726:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3713:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3713:3:7"
																		},
																		"nativeSrc": "3713:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3713:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3738:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3738:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3709:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3709:3:7"
																},
																"nativeSrc": "3709:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3709:32:7"
															},
															"nativeSrc": "3706:52:7",
															"nodeType": "YulIf",
															"src": "3706:52:7"
														},
														{
															"nativeSrc": "3767:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3767:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3793:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3793:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3780:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3780:12:7"
																},
																"nativeSrc": "3780:23:7",
																"nodeType": "YulFunctionCall",
																"src": "3780:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3771:5:7",
																	"nodeType": "YulTypedName",
																	"src": "3771:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3837:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3837:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3812:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "3812:24:7"
																},
																"nativeSrc": "3812:31:7",
																"nodeType": "YulFunctionCall",
																"src": "3812:31:7"
															},
															"nativeSrc": "3812:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "3812:31:7"
														},
														{
															"nativeSrc": "3852:15:7",
															"nodeType": "YulAssignment",
															"src": "3852:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "3862:5:7",
																"nodeType": "YulIdentifier",
																"src": "3862:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3852:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3852:6:7"
																}
															]
														},
														{
															"nativeSrc": "3876:47:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3876:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3908:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3908:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3919:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3919:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3904:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3904:3:7"
																		},
																		"nativeSrc": "3904:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3904:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3891:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3891:12:7"
																},
																"nativeSrc": "3891:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3891:32:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3880:7:7",
																	"nodeType": "YulTypedName",
																	"src": "3880:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3954:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3954:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "3932:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "3932:21:7"
																},
																"nativeSrc": "3932:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3932:30:7"
															},
															"nativeSrc": "3932:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3932:30:7"
														},
														{
															"nativeSrc": "3971:17:7",
															"nodeType": "YulAssignment",
															"src": "3971:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "3981:7:7",
																"nodeType": "YulIdentifier",
																"src": "3981:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3971:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "3612:382:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3654:9:7",
														"nodeType": "YulTypedName",
														"src": "3654:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3665:7:7",
														"nodeType": "YulTypedName",
														"src": "3665:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3677:6:7",
														"nodeType": "YulTypedName",
														"src": "3677:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3685:6:7",
														"nodeType": "YulTypedName",
														"src": "3685:6:7",
														"type": ""
													}
												],
												"src": "3612:382:7"
											},
											{
												"body": {
													"nativeSrc": "4100:102:7",
													"nodeType": "YulBlock",
													"src": "4100:102:7",
													"statements": [
														{
															"nativeSrc": "4110:26:7",
															"nodeType": "YulAssignment",
															"src": "4110:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4122:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4122:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4133:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4133:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4118:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:3:7"
																},
																"nativeSrc": "4118:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4118:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4110:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4110:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4152:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4152:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4167:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4167:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4183:3:7",
																								"nodeType": "YulLiteral",
																								"src": "4183:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4188:1:7",
																								"nodeType": "YulLiteral",
																								"src": "4188:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4179:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4179:3:7"
																						},
																						"nativeSrc": "4179:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4179:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4192:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4192:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4175:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4175:3:7"
																				},
																				"nativeSrc": "4175:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4175:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4163:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4163:3:7"
																		},
																		"nativeSrc": "4163:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4163:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4145:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4145:6:7"
																},
																"nativeSrc": "4145:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4145:51:7"
															},
															"nativeSrc": "4145:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4145:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3999:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4069:9:7",
														"nodeType": "YulTypedName",
														"src": "4069:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4080:6:7",
														"nodeType": "YulTypedName",
														"src": "4080:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4091:4:7",
														"nodeType": "YulTypedName",
														"src": "4091:4:7",
														"type": ""
													}
												],
												"src": "3999:203:7"
											},
											{
												"body": {
													"nativeSrc": "4330:541:7",
													"nodeType": "YulBlock",
													"src": "4330:541:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4376:16:7",
																"nodeType": "YulBlock",
																"src": "4376:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4385:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4385:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4388:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4388:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4378:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4378:6:7"
																			},
																			"nativeSrc": "4378:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4378:12:7"
																		},
																		"nativeSrc": "4378:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4378:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4351:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4351:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4360:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4360:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4347:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4347:3:7"
																		},
																		"nativeSrc": "4347:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4372:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4372:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4343:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4343:3:7"
																},
																"nativeSrc": "4343:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4343:32:7"
															},
															"nativeSrc": "4340:52:7",
															"nodeType": "YulIf",
															"src": "4340:52:7"
														},
														{
															"nativeSrc": "4401:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4401:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4427:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4427:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4414:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4414:12:7"
																},
																"nativeSrc": "4414:23:7",
																"nodeType": "YulFunctionCall",
																"src": "4414:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4405:5:7",
																	"nodeType": "YulTypedName",
																	"src": "4405:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4471:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4471:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4446:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "4446:24:7"
																},
																"nativeSrc": "4446:31:7",
																"nodeType": "YulFunctionCall",
																"src": "4446:31:7"
															},
															"nativeSrc": "4446:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "4446:31:7"
														},
														{
															"nativeSrc": "4486:15:7",
															"nodeType": "YulAssignment",
															"src": "4486:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "4496:5:7",
																"nodeType": "YulIdentifier",
																"src": "4496:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4486:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4486:6:7"
																}
															]
														},
														{
															"nativeSrc": "4510:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4510:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4525:1:7",
																"nodeType": "YulLiteral",
																"src": "4525:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4514:7:7",
																	"nodeType": "YulTypedName",
																	"src": "4514:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4535:43:7",
															"nodeType": "YulAssignment",
															"src": "4535:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4563:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4563:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4574:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4574:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4559:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4559:3:7"
																		},
																		"nativeSrc": "4559:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4559:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4546:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4546:12:7"
																},
																"nativeSrc": "4546:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4546:32:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "4535:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4535:7:7"
																}
															]
														},
														{
															"nativeSrc": "4587:17:7",
															"nodeType": "YulAssignment",
															"src": "4587:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "4597:7:7",
																"nodeType": "YulIdentifier",
																"src": "4597:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4587:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4587:6:7"
																}
															]
														},
														{
															"nativeSrc": "4613:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4613:46:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4644:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4644:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4655:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4655:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4640:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4640:3:7"
																		},
																		"nativeSrc": "4640:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4640:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4627:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4627:12:7"
																},
																"nativeSrc": "4627:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4627:32:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4617:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4617:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4702:16:7",
																"nodeType": "YulBlock",
																"src": "4702:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4711:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4711:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4714:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4714:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4704:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4704:6:7"
																			},
																			"nativeSrc": "4704:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4704:12:7"
																		},
																		"nativeSrc": "4704:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4704:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4674:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4674:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4682:18:7",
																		"nodeType": "YulLiteral",
																		"src": "4682:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4671:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4671:2:7"
																},
																"nativeSrc": "4671:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4671:30:7"
															},
															"nativeSrc": "4668:50:7",
															"nodeType": "YulIf",
															"src": "4668:50:7"
														},
														{
															"nativeSrc": "4727:84:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4727:84:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4783:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4783:9:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4794:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4794:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4779:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4779:3:7"
																		},
																		"nativeSrc": "4779:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4779:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4803:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "4803:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nativeSrc": "4753:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "4753:25:7"
																},
																"nativeSrc": "4753:58:7",
																"nodeType": "YulFunctionCall",
																"src": "4753:58:7"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nativeSrc": "4731:8:7",
																	"nodeType": "YulTypedName",
																	"src": "4731:8:7",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nativeSrc": "4741:8:7",
																	"nodeType": "YulTypedName",
																	"src": "4741:8:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4820:18:7",
															"nodeType": "YulAssignment",
															"src": "4820:18:7",
															"value": {
																"name": "value2_1",
																"nativeSrc": "4830:8:7",
																"nodeType": "YulIdentifier",
																"src": "4830:8:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4820:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4820:6:7"
																}
															]
														},
														{
															"nativeSrc": "4847:18:7",
															"nodeType": "YulAssignment",
															"src": "4847:18:7",
															"value": {
																"name": "value3_1",
																"nativeSrc": "4857:8:7",
																"nodeType": "YulIdentifier",
																"src": "4857:8:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4847:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4847:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr",
												"nativeSrc": "4207:664:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4272:9:7",
														"nodeType": "YulTypedName",
														"src": "4272:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4283:7:7",
														"nodeType": "YulTypedName",
														"src": "4283:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4295:6:7",
														"nodeType": "YulTypedName",
														"src": "4295:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4303:6:7",
														"nodeType": "YulTypedName",
														"src": "4303:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4311:6:7",
														"nodeType": "YulTypedName",
														"src": "4311:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4319:6:7",
														"nodeType": "YulTypedName",
														"src": "4319:6:7",
														"type": ""
													}
												],
												"src": "4207:664:7"
											},
											{
												"body": {
													"nativeSrc": "4963:280:7",
													"nodeType": "YulBlock",
													"src": "4963:280:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5009:16:7",
																"nodeType": "YulBlock",
																"src": "5009:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5018:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5018:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5021:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5021:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5011:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5011:6:7"
																			},
																			"nativeSrc": "5011:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5011:12:7"
																		},
																		"nativeSrc": "5011:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5011:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4984:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4984:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4993:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4993:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4980:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4980:3:7"
																		},
																		"nativeSrc": "4980:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4980:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5005:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5005:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4976:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4976:3:7"
																},
																"nativeSrc": "4976:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4976:32:7"
															},
															"nativeSrc": "4973:52:7",
															"nodeType": "YulIf",
															"src": "4973:52:7"
														},
														{
															"nativeSrc": "5034:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5034:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5060:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5060:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5047:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5047:12:7"
																},
																"nativeSrc": "5047:23:7",
																"nodeType": "YulFunctionCall",
																"src": "5047:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5038:5:7",
																	"nodeType": "YulTypedName",
																	"src": "5038:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5104:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5104:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5079:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "5079:24:7"
																},
																"nativeSrc": "5079:31:7",
																"nodeType": "YulFunctionCall",
																"src": "5079:31:7"
															},
															"nativeSrc": "5079:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "5079:31:7"
														},
														{
															"nativeSrc": "5119:15:7",
															"nodeType": "YulAssignment",
															"src": "5119:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "5129:5:7",
																"nodeType": "YulIdentifier",
																"src": "5129:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5119:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5119:6:7"
																}
															]
														},
														{
															"nativeSrc": "5143:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5143:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5158:1:7",
																"nodeType": "YulLiteral",
																"src": "5158:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "5147:7:7",
																	"nodeType": "YulTypedName",
																	"src": "5147:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5168:43:7",
															"nodeType": "YulAssignment",
															"src": "5168:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5196:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5196:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5207:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5207:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5192:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5192:3:7"
																		},
																		"nativeSrc": "5192:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5192:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5179:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5179:12:7"
																},
																"nativeSrc": "5179:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5179:32:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "5168:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5168:7:7"
																}
															]
														},
														{
															"nativeSrc": "5220:17:7",
															"nodeType": "YulAssignment",
															"src": "5220:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "5230:7:7",
																"nodeType": "YulIdentifier",
																"src": "5230:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5220:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5220:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4876:367:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4921:9:7",
														"nodeType": "YulTypedName",
														"src": "4921:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4932:7:7",
														"nodeType": "YulTypedName",
														"src": "4932:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4944:6:7",
														"nodeType": "YulTypedName",
														"src": "4944:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4952:6:7",
														"nodeType": "YulTypedName",
														"src": "4952:6:7",
														"type": ""
													}
												],
												"src": "4876:367:7"
											},
											{
												"body": {
													"nativeSrc": "5377:145:7",
													"nodeType": "YulBlock",
													"src": "5377:145:7",
													"statements": [
														{
															"nativeSrc": "5387:26:7",
															"nodeType": "YulAssignment",
															"src": "5387:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5399:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5399:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5410:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5410:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5395:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5395:3:7"
																},
																"nativeSrc": "5395:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5395:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5387:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5387:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5429:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5429:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5444:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5444:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5460:3:7",
																								"nodeType": "YulLiteral",
																								"src": "5460:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5465:1:7",
																								"nodeType": "YulLiteral",
																								"src": "5465:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5456:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "5456:3:7"
																						},
																						"nativeSrc": "5456:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "5456:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5469:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5469:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5452:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5452:3:7"
																				},
																				"nativeSrc": "5452:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5452:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5440:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5440:3:7"
																		},
																		"nativeSrc": "5440:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5440:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5422:6:7"
																},
																"nativeSrc": "5422:51:7",
																"nodeType": "YulFunctionCall",
																"src": "5422:51:7"
															},
															"nativeSrc": "5422:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "5422:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5493:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5493:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5504:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5504:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5489:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5489:3:7"
																		},
																		"nativeSrc": "5489:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5489:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5509:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5509:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5482:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5482:6:7"
																},
																"nativeSrc": "5482:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5482:34:7"
															},
															"nativeSrc": "5482:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5482:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5248:274:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5338:9:7",
														"nodeType": "YulTypedName",
														"src": "5338:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5349:6:7",
														"nodeType": "YulTypedName",
														"src": "5349:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5357:6:7",
														"nodeType": "YulTypedName",
														"src": "5357:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5368:4:7",
														"nodeType": "YulTypedName",
														"src": "5368:4:7",
														"type": ""
													}
												],
												"src": "5248:274:7"
											},
											{
												"body": {
													"nativeSrc": "5605:167:7",
													"nodeType": "YulBlock",
													"src": "5605:167:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5651:16:7",
																"nodeType": "YulBlock",
																"src": "5651:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5660:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5660:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5663:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5653:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5653:6:7"
																			},
																			"nativeSrc": "5653:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5653:12:7"
																		},
																		"nativeSrc": "5653:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5653:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5626:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5626:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5635:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5635:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5622:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5622:3:7"
																		},
																		"nativeSrc": "5622:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5622:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5647:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5647:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5618:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5618:3:7"
																},
																"nativeSrc": "5618:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5618:32:7"
															},
															"nativeSrc": "5615:52:7",
															"nodeType": "YulIf",
															"src": "5615:52:7"
														},
														{
															"nativeSrc": "5676:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5676:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5695:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5695:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5689:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5689:5:7"
																},
																"nativeSrc": "5689:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5689:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5680:5:7",
																	"nodeType": "YulTypedName",
																	"src": "5680:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5736:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5736:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "5714:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "5714:21:7"
																},
																"nativeSrc": "5714:28:7",
																"nodeType": "YulFunctionCall",
																"src": "5714:28:7"
															},
															"nativeSrc": "5714:28:7",
															"nodeType": "YulExpressionStatement",
															"src": "5714:28:7"
														},
														{
															"nativeSrc": "5751:15:7",
															"nodeType": "YulAssignment",
															"src": "5751:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "5761:5:7",
																"nodeType": "YulIdentifier",
																"src": "5761:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5751:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5751:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5527:245:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5571:9:7",
														"nodeType": "YulTypedName",
														"src": "5571:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5582:7:7",
														"nodeType": "YulTypedName",
														"src": "5582:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5594:6:7",
														"nodeType": "YulTypedName",
														"src": "5594:6:7",
														"type": ""
													}
												],
												"src": "5527:245:7"
											},
											{
												"body": {
													"nativeSrc": "5843:200:7",
													"nodeType": "YulBlock",
													"src": "5843:200:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5860:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5860:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5865:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5865:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5853:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5853:6:7"
																},
																"nativeSrc": "5853:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5853:19:7"
															},
															"nativeSrc": "5853:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "5853:19:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "5898:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5898:3:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5903:4:7",
																				"nodeType": "YulLiteral",
																				"src": "5903:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5894:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5894:3:7"
																		},
																		"nativeSrc": "5894:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5894:14:7"
																	},
																	{
																		"name": "start",
																		"nativeSrc": "5910:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5910:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5917:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5917:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5881:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5881:12:7"
																},
																"nativeSrc": "5881:43:7",
																"nodeType": "YulFunctionCall",
																"src": "5881:43:7"
															},
															"nativeSrc": "5881:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "5881:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5948:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5948:3:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5953:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5953:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5944:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5944:3:7"
																				},
																				"nativeSrc": "5944:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5944:16:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5962:4:7",
																				"nodeType": "YulLiteral",
																				"src": "5962:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5940:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5940:3:7"
																		},
																		"nativeSrc": "5940:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5940:27:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5969:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5969:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5933:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5933:6:7"
																},
																"nativeSrc": "5933:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5933:38:7"
															},
															"nativeSrc": "5933:38:7",
															"nodeType": "YulExpressionStatement",
															"src": "5933:38:7"
														},
														{
															"nativeSrc": "5980:57:7",
															"nodeType": "YulAssignment",
															"src": "5980:57:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "5995:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5995:3:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "6008:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "6008:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6016:2:7",
																								"nodeType": "YulLiteral",
																								"src": "6016:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "6004:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6004:3:7"
																						},
																						"nativeSrc": "6004:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6004:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6025:2:7",
																								"nodeType": "YulLiteral",
																								"src": "6025:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "6021:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6021:3:7"
																						},
																						"nativeSrc": "6021:7:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6021:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "6000:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6000:3:7"
																				},
																				"nativeSrc": "6000:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6000:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5991:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5991:3:7"
																		},
																		"nativeSrc": "5991:39:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5991:39:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6032:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6032:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5987:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5987:3:7"
																},
																"nativeSrc": "5987:50:7",
																"nodeType": "YulFunctionCall",
																"src": "5987:50:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5980:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5980:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes_calldata",
												"nativeSrc": "5777:266:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5812:5:7",
														"nodeType": "YulTypedName",
														"src": "5812:5:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5819:6:7",
														"nodeType": "YulTypedName",
														"src": "5819:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5827:3:7",
														"nodeType": "YulTypedName",
														"src": "5827:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5835:3:7",
														"nodeType": "YulTypedName",
														"src": "5835:3:7",
														"type": ""
													}
												],
												"src": "5777:266:7"
											},
											{
												"body": {
													"nativeSrc": "6241:227:7",
													"nodeType": "YulBlock",
													"src": "6241:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6258:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6258:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6273:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6273:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6289:3:7",
																								"nodeType": "YulLiteral",
																								"src": "6289:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6294:1:7",
																								"nodeType": "YulLiteral",
																								"src": "6294:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6285:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6285:3:7"
																						},
																						"nativeSrc": "6285:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6285:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6298:1:7",
																						"nodeType": "YulLiteral",
																						"src": "6298:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6281:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6281:3:7"
																				},
																				"nativeSrc": "6281:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6281:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6269:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6269:3:7"
																		},
																		"nativeSrc": "6269:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6269:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6251:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6251:6:7"
																},
																"nativeSrc": "6251:51:7",
																"nodeType": "YulFunctionCall",
																"src": "6251:51:7"
															},
															"nativeSrc": "6251:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "6251:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6322:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6322:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6333:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6333:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6318:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6318:3:7"
																		},
																		"nativeSrc": "6318:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6318:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6338:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6338:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6311:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6311:6:7"
																},
																"nativeSrc": "6311:34:7",
																"nodeType": "YulFunctionCall",
																"src": "6311:34:7"
															},
															"nativeSrc": "6311:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "6311:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6365:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6365:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6376:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6376:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6361:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6361:3:7"
																		},
																		"nativeSrc": "6361:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6361:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6381:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6381:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6354:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6354:6:7"
																},
																"nativeSrc": "6354:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6354:30:7"
															},
															"nativeSrc": "6354:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6354:30:7"
														},
														{
															"nativeSrc": "6393:69:7",
															"nodeType": "YulAssignment",
															"src": "6393:69:7",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6427:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6427:6:7"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "6435:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6435:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6447:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6447:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6458:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6458:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6443:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6443:3:7"
																		},
																		"nativeSrc": "6443:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6443:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nativeSrc": "6401:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "6401:25:7"
																},
																"nativeSrc": "6401:61:7",
																"nodeType": "YulFunctionCall",
																"src": "6401:61:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6393:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6393:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "6048:420:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6186:9:7",
														"nodeType": "YulTypedName",
														"src": "6186:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6197:6:7",
														"nodeType": "YulTypedName",
														"src": "6197:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6205:6:7",
														"nodeType": "YulTypedName",
														"src": "6205:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6213:6:7",
														"nodeType": "YulTypedName",
														"src": "6213:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6221:6:7",
														"nodeType": "YulTypedName",
														"src": "6221:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6232:4:7",
														"nodeType": "YulTypedName",
														"src": "6232:4:7",
														"type": ""
													}
												],
												"src": "6048:420:7"
											},
											{
												"body": {
													"nativeSrc": "6505:95:7",
													"nodeType": "YulBlock",
													"src": "6505:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6522:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6522:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6529:3:7",
																				"nodeType": "YulLiteral",
																				"src": "6529:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6534:10:7",
																				"nodeType": "YulLiteral",
																				"src": "6534:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6525:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6525:3:7"
																		},
																		"nativeSrc": "6525:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6525:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6515:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6515:6:7"
																},
																"nativeSrc": "6515:31:7",
																"nodeType": "YulFunctionCall",
																"src": "6515:31:7"
															},
															"nativeSrc": "6515:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "6515:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6565:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6565:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6555:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6555:6:7"
																},
																"nativeSrc": "6555:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6555:15:7"
															},
															"nativeSrc": "6555:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6555:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6586:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6586:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6589:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6589:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6579:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6579:6:7"
																},
																"nativeSrc": "6579:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6579:15:7"
															},
															"nativeSrc": "6579:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6579:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6473:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6473:127:7"
											},
											{
												"body": {
													"nativeSrc": "6695:844:7",
													"nodeType": "YulBlock",
													"src": "6695:844:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6741:16:7",
																"nodeType": "YulBlock",
																"src": "6741:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6750:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6750:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6753:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6753:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6743:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6743:6:7"
																			},
																			"nativeSrc": "6743:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6743:12:7"
																		},
																		"nativeSrc": "6743:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6743:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6716:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6716:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6725:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6725:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6712:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6712:3:7"
																		},
																		"nativeSrc": "6712:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6712:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6737:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6737:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6708:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6708:3:7"
																},
																"nativeSrc": "6708:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6708:32:7"
															},
															"nativeSrc": "6705:52:7",
															"nodeType": "YulIf",
															"src": "6705:52:7"
														},
														{
															"nativeSrc": "6766:30:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6766:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6786:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6786:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6780:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6780:5:7"
																},
																"nativeSrc": "6780:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6780:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "6770:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6770:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6839:16:7",
																"nodeType": "YulBlock",
																"src": "6839:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6848:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6848:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6851:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6851:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6841:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6841:6:7"
																			},
																			"nativeSrc": "6841:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6841:12:7"
																		},
																		"nativeSrc": "6841:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6841:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6811:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6811:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6819:18:7",
																		"nodeType": "YulLiteral",
																		"src": "6819:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6808:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6808:2:7"
																},
																"nativeSrc": "6808:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6808:30:7"
															},
															"nativeSrc": "6805:50:7",
															"nodeType": "YulIf",
															"src": "6805:50:7"
														},
														{
															"nativeSrc": "6864:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6864:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6878:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6878:9:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6889:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6889:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6874:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6874:3:7"
																},
																"nativeSrc": "6874:22:7",
																"nodeType": "YulFunctionCall",
																"src": "6874:22:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6868:2:7",
																	"nodeType": "YulTypedName",
																	"src": "6868:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6944:16:7",
																"nodeType": "YulBlock",
																"src": "6944:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6953:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6953:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6956:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6956:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6946:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6946:6:7"
																			},
																			"nativeSrc": "6946:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6946:12:7"
																		},
																		"nativeSrc": "6946:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6946:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "6923:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6923:2:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6927:4:7",
																						"nodeType": "YulLiteral",
																						"src": "6927:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6919:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6919:3:7"
																				},
																				"nativeSrc": "6919:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6919:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6934:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6934:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6915:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6915:3:7"
																		},
																		"nativeSrc": "6915:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6915:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6908:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6908:6:7"
																},
																"nativeSrc": "6908:35:7",
																"nodeType": "YulFunctionCall",
																"src": "6908:35:7"
															},
															"nativeSrc": "6905:55:7",
															"nodeType": "YulIf",
															"src": "6905:55:7"
														},
														{
															"nativeSrc": "6969:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6969:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "6989:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "6989:2:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6983:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6983:5:7"
																},
																"nativeSrc": "6983:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6983:9:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6973:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6973:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7035:22:7",
																"nodeType": "YulBlock",
																"src": "7035:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7037:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7037:16:7"
																			},
																			"nativeSrc": "7037:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7037:18:7"
																		},
																		"nativeSrc": "7037:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7037:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7007:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7007:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7015:18:7",
																		"nodeType": "YulLiteral",
																		"src": "7015:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7004:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7004:2:7"
																},
																"nativeSrc": "7004:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7004:30:7"
															},
															"nativeSrc": "7001:56:7",
															"nodeType": "YulIf",
															"src": "7001:56:7"
														},
														{
															"nativeSrc": "7066:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7066:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7086:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7080:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7080:5:7"
																},
																"nativeSrc": "7080:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7080:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7070:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7070:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7098:85:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7098:85:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7120:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7120:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "7144:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "7144:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7152:4:7",
																										"nodeType": "YulLiteral",
																										"src": "7152:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7140:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7140:3:7"
																								},
																								"nativeSrc": "7140:17:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7140:17:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "7163:2:7",
																										"nodeType": "YulLiteral",
																										"src": "7163:2:7",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "7159:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7159:3:7"
																								},
																								"nativeSrc": "7159:7:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7159:7:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "7136:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7136:3:7"
																						},
																						"nativeSrc": "7136:31:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7136:31:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7169:2:7",
																						"nodeType": "YulLiteral",
																						"src": "7169:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7132:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7132:3:7"
																				},
																				"nativeSrc": "7132:40:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7132:40:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7178:2:7",
																						"nodeType": "YulLiteral",
																						"src": "7178:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7174:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7174:3:7"
																				},
																				"nativeSrc": "7174:7:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7174:7:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7128:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7128:3:7"
																		},
																		"nativeSrc": "7128:54:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7128:54:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7116:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7116:3:7"
																},
																"nativeSrc": "7116:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7116:67:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7102:10:7",
																	"nodeType": "YulTypedName",
																	"src": "7102:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7258:22:7",
																"nodeType": "YulBlock",
																"src": "7258:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7260:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7260:16:7"
																			},
																			"nativeSrc": "7260:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7260:18:7"
																		},
																		"nativeSrc": "7260:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7260:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7201:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "7201:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7213:18:7",
																				"nodeType": "YulLiteral",
																				"src": "7213:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7198:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7198:2:7"
																		},
																		"nativeSrc": "7198:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7198:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7237:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "7237:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7249:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7249:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7234:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7234:2:7"
																		},
																		"nativeSrc": "7234:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7234:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7195:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7195:2:7"
																},
																"nativeSrc": "7195:62:7",
																"nodeType": "YulFunctionCall",
																"src": "7195:62:7"
															},
															"nativeSrc": "7192:88:7",
															"nodeType": "YulIf",
															"src": "7192:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7296:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7296:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7300:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "7300:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7289:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7289:6:7"
																},
																"nativeSrc": "7289:22:7",
																"nodeType": "YulFunctionCall",
																"src": "7289:22:7"
															},
															"nativeSrc": "7289:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "7289:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7327:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7327:6:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7335:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7335:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7320:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7320:6:7"
																},
																"nativeSrc": "7320:22:7",
																"nodeType": "YulFunctionCall",
																"src": "7320:22:7"
															},
															"nativeSrc": "7320:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "7320:22:7"
														},
														{
															"body": {
																"nativeSrc": "7392:16:7",
																"nodeType": "YulBlock",
																"src": "7392:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7401:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7401:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7404:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7404:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7394:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7394:6:7"
																			},
																			"nativeSrc": "7394:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7394:12:7"
																		},
																		"nativeSrc": "7394:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7394:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "7365:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "7365:2:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "7369:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7369:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7361:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7361:3:7"
																				},
																				"nativeSrc": "7361:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7361:15:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7378:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7378:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7357:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7357:3:7"
																		},
																		"nativeSrc": "7357:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7357:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "7383:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "7383:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7354:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7354:2:7"
																},
																"nativeSrc": "7354:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7354:37:7"
															},
															"nativeSrc": "7351:57:7",
															"nodeType": "YulIf",
															"src": "7351:57:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7427:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7427:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7435:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7435:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7423:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7423:3:7"
																		},
																		"nativeSrc": "7423:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7423:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "7444:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7444:2:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7448:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7448:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7440:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7440:3:7"
																		},
																		"nativeSrc": "7440:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7440:11:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7453:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7453:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "7417:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7417:5:7"
																},
																"nativeSrc": "7417:43:7",
																"nodeType": "YulFunctionCall",
																"src": "7417:43:7"
															},
															"nativeSrc": "7417:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "7417:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "7484:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7484:6:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "7492:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7492:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7480:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7480:3:7"
																				},
																				"nativeSrc": "7480:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7480:19:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7501:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7501:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7476:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7476:3:7"
																		},
																		"nativeSrc": "7476:28:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7476:28:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7506:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7506:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7469:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7469:6:7"
																},
																"nativeSrc": "7469:39:7",
																"nodeType": "YulFunctionCall",
																"src": "7469:39:7"
															},
															"nativeSrc": "7469:39:7",
															"nodeType": "YulExpressionStatement",
															"src": "7469:39:7"
														},
														{
															"nativeSrc": "7517:16:7",
															"nodeType": "YulAssignment",
															"src": "7517:16:7",
															"value": {
																"name": "memPtr",
																"nativeSrc": "7527:6:7",
																"nodeType": "YulIdentifier",
																"src": "7527:6:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7517:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7517:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr_fromMemory",
												"nativeSrc": "6605:934:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6661:9:7",
														"nodeType": "YulTypedName",
														"src": "6661:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6672:7:7",
														"nodeType": "YulTypedName",
														"src": "6672:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6684:6:7",
														"nodeType": "YulTypedName",
														"src": "6684:6:7",
														"type": ""
													}
												],
												"src": "6605:934:7"
											},
											{
												"body": {
													"nativeSrc": "7625:103:7",
													"nodeType": "YulBlock",
													"src": "7625:103:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7671:16:7",
																"nodeType": "YulBlock",
																"src": "7671:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7680:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7683:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7683:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7673:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7673:6:7"
																			},
																			"nativeSrc": "7673:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7673:12:7"
																		},
																		"nativeSrc": "7673:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7673:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7646:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7646:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7655:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7655:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7642:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7642:3:7"
																		},
																		"nativeSrc": "7642:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7642:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7667:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7667:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7638:3:7"
																},
																"nativeSrc": "7638:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7638:32:7"
															},
															"nativeSrc": "7635:52:7",
															"nodeType": "YulIf",
															"src": "7635:52:7"
														},
														{
															"nativeSrc": "7696:26:7",
															"nodeType": "YulAssignment",
															"src": "7696:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7712:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7712:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7706:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7706:5:7"
																},
																"nativeSrc": "7706:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7706:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7696:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7696:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7544:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7591:9:7",
														"nodeType": "YulTypedName",
														"src": "7591:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7602:7:7",
														"nodeType": "YulTypedName",
														"src": "7602:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7614:6:7",
														"nodeType": "YulTypedName",
														"src": "7614:6:7",
														"type": ""
													}
												],
												"src": "7544:184:7"
											},
											{
												"body": {
													"nativeSrc": "7924:14:7",
													"nodeType": "YulBlock",
													"src": "7924:14:7",
													"statements": [
														{
															"nativeSrc": "7926:10:7",
															"nodeType": "YulAssignment",
															"src": "7926:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "7933:3:7",
																"nodeType": "YulIdentifier",
																"src": "7933:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7926:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7926:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7733:205:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7908:3:7",
														"nodeType": "YulTypedName",
														"src": "7908:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7916:3:7",
														"nodeType": "YulTypedName",
														"src": "7916:3:7",
														"type": ""
													}
												],
												"src": "7733:205:7"
											},
											{
												"body": {
													"nativeSrc": "8090:124:7",
													"nodeType": "YulBlock",
													"src": "8090:124:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8113:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8113:3:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8118:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8118:6:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8126:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8126:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8100:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "8100:12:7"
																},
																"nativeSrc": "8100:33:7",
																"nodeType": "YulFunctionCall",
																"src": "8100:33:7"
															},
															"nativeSrc": "8100:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "8100:33:7"
														},
														{
															"nativeSrc": "8142:26:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8142:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8156:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8156:3:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8161:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8161:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8152:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8152:3:7"
																},
																"nativeSrc": "8152:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8152:16:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8146:2:7",
																	"nodeType": "YulTypedName",
																	"src": "8146:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "8184:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "8184:2:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8188:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8188:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8177:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8177:6:7"
																},
																"nativeSrc": "8177:13:7",
																"nodeType": "YulFunctionCall",
																"src": "8177:13:7"
															},
															"nativeSrc": "8177:13:7",
															"nodeType": "YulExpressionStatement",
															"src": "8177:13:7"
														},
														{
															"nativeSrc": "8199:9:7",
															"nodeType": "YulAssignment",
															"src": "8199:9:7",
															"value": {
																"name": "_1",
																"nativeSrc": "8206:2:7",
																"nodeType": "YulIdentifier",
																"src": "8206:2:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8199:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8199:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7943:271:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8058:3:7",
														"nodeType": "YulTypedName",
														"src": "8058:3:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8063:6:7",
														"nodeType": "YulTypedName",
														"src": "8063:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8071:6:7",
														"nodeType": "YulTypedName",
														"src": "8071:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8082:3:7",
														"nodeType": "YulTypedName",
														"src": "8082:3:7",
														"type": ""
													}
												],
												"src": "7943:271:7"
											},
											{
												"body": {
													"nativeSrc": "8422:272:7",
													"nodeType": "YulBlock",
													"src": "8422:272:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8439:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8439:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8450:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8450:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8432:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:7"
																},
																"nativeSrc": "8432:25:7",
																"nodeType": "YulFunctionCall",
																"src": "8432:25:7"
															},
															"nativeSrc": "8432:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "8432:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8477:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8477:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8488:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8488:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8473:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8473:3:7"
																		},
																		"nativeSrc": "8473:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8473:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8493:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8493:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8466:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8466:6:7"
																},
																"nativeSrc": "8466:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8466:30:7"
															},
															"nativeSrc": "8466:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "8466:30:7"
														},
														{
															"nativeSrc": "8505:75:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8505:75:7",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8545:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8545:6:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8553:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8553:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8565:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8565:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8576:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8576:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8561:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8561:3:7"
																		},
																		"nativeSrc": "8561:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8561:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nativeSrc": "8519:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "8519:25:7"
																},
																"nativeSrc": "8519:61:7",
																"nodeType": "YulFunctionCall",
																"src": "8519:61:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "8509:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8509:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8600:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8600:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8611:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8611:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8596:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8596:3:7"
																		},
																		"nativeSrc": "8596:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8596:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "8620:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8620:6:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8628:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8628:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8616:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8616:3:7"
																		},
																		"nativeSrc": "8616:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8616:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8589:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8589:6:7"
																},
																"nativeSrc": "8589:50:7",
																"nodeType": "YulFunctionCall",
																"src": "8589:50:7"
															},
															"nativeSrc": "8589:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "8589:50:7"
														},
														{
															"nativeSrc": "8648:40:7",
															"nodeType": "YulAssignment",
															"src": "8648:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8673:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8673:6:7"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "8681:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8681:6:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "8656:16:7",
																	"nodeType": "YulIdentifier",
																	"src": "8656:16:7"
																},
																"nativeSrc": "8656:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8656:32:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8648:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8648:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "8219:475:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8367:9:7",
														"nodeType": "YulTypedName",
														"src": "8367:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8378:6:7",
														"nodeType": "YulTypedName",
														"src": "8378:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8386:6:7",
														"nodeType": "YulTypedName",
														"src": "8386:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8394:6:7",
														"nodeType": "YulTypedName",
														"src": "8394:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8402:6:7",
														"nodeType": "YulTypedName",
														"src": "8402:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8413:4:7",
														"nodeType": "YulTypedName",
														"src": "8413:4:7",
														"type": ""
													}
												],
												"src": "8219:475:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_address(value_3)\n        value3 := value_3\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_rational_0_by_1_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_bytes_calldata(value2, value3, add(headStart, 96))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := mload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        mcopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        let tail_1 := abi_encode_bytes_calldata(value1, value2, add(headStart, 96))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value3, tail_1)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84536017 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA8E5E4AA GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xA8E5E4AA EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xF32F1864 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x2DC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84536017 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x260 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x44004CC1 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x44004CC1 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x4782F779 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x54BA7696 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x68FEC4DA EQ PUSH2 0x207 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x103657E7 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x40C442DE EQ PUSH2 0x17A JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x118 JUMPI PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xBFE611B001DFCD411432F7BF0D79B82B4B2EE81511EDAC123A3403C357FB972A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x148 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE25 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x795 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x148 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x878 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0xAAD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE25 JUMP JUMPDEST PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x199 PUSH2 0xBAE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x310 JUMPI POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x32E JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE DUP9 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x37A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x9E5D4C49 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP1 PUSH4 0x9E5D4C49 SWAP1 PUSH2 0x3C8 SWAP1 DUP8 SWAP1 PUSH0 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xF2E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x40A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF73 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x483 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x1026 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH0 SLOAD PUSH2 0x4C8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH2 0xBE5 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP5 AND SWAP1 PUSH32 0xBFED55BDCD242E3DD0F60DDD7D1E87C67F61C34CD9527B3E6455D841B1025362 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x53B JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0x558 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x58A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0xBE5 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xBFED55BDCD242E3DD0F60DDD7D1E87C67F61C34CD9527B3E6455D841B1025362 DUP4 PUSH1 0x40 MLOAD PUSH2 0x5CF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x606 JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x62D JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x67B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x69D JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C DUP4 PUSH1 0x40 MLOAD PUSH2 0x6D8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x19F4C310CF148369E5605E8F3538CEE4D3495DA0612C9A45C0B89105ED6FEE4D SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x875 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x815 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C SWAP1 PUSH1 0x20 ADD PUSH2 0x789 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x8A4 JUMPI POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x8E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x416AEBB5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x906 SWAP3 SWAP2 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x940 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x945 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x977 JUMPI DUP1 MLOAD ISZERO PUSH2 0x95E JUMPI DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x335A1FECD5558554165C05171954925D0D97911AD1D259EF6BB18EB2C07A58AA DUP9 DUP9 DUP9 DUP7 PUSH1 0x40 MLOAD PUSH2 0x9C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0xA19 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0xA37 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0xDC149F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAFD JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR PUSH1 0x1 PUSH1 0xA0 SHL OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x908408E307FC569B417F6CBEC5D5A06F44A0A505AC0479B47D421A4B2FD6A1E6 SWAP2 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xE33E9822E3317B004D587136BAB2627EA1ECFBBA4EB79ABDDD0A56CFDD09C0E1 SWAP1 PUSH1 0x20 ADD PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xBFE611B001DFCD411432F7BF0D79B82B4B2EE81511EDAC123A3403C357FB972A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xC37 SWAP1 DUP5 SWAP1 PUSH2 0xC3C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xC5B JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0xC72 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x875 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xCFE JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xD1A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0xD25 DUP2 PUSH2 0xCAC JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0xD35 DUP2 PUSH2 0xCAC JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0xD4C DUP2 PUSH2 0xCAC JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD67 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD73 DUP10 DUP3 DUP11 ADD PUSH2 0xCC0 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xDC5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD85 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDDC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDC5 DUP2 PUSH2 0xCAC JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xE04 DUP2 PUSH2 0xCAC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xE14 DUP2 PUSH2 0xCAC JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE36 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xE41 DUP2 PUSH2 0xCAC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x875 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE6D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xE78 DUP2 PUSH2 0xCAC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE88 DUP2 PUSH2 0xE4F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xEB1 DUP2 PUSH2 0xCAC JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xED3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEDF DUP8 DUP3 DUP9 ADD PUSH2 0xCC0 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEFB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDC5 DUP2 PUSH2 0xE4F JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0xF55 PUSH1 0x60 DUP4 ADD DUP5 DUP7 PUSH2 0xF06 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF83 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF99 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0xFA9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFC3 JUMPI PUSH2 0xFC3 PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xFF2 JUMPI PUSH2 0xFF2 PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x1009 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1036 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1065 PUSH1 0x60 DUP4 ADD DUP6 DUP8 PUSH2 0xF06 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x40A DUP2 DUP6 PUSH2 0xD85 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 SWAP8 BLOBBASEFEE 0xEF DUP10 BASEFEE ISZERO 0xEF 0xE1 MOD 0x29 PUSH13 0xF6248E20F30CED3A30CF5E0ADD 0xE4 KECCAK256 DUP2 TSTORE PUSH17 0xD09E64736F6C634300081A003300000000 ",
							"sourceMap": "974:6369:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2772:34;;2796:9;160:25:7;;2784:10:6;;2772:34;;148:2:7;133:18;2772:34:6;;;;;;;974:6369;;;;;6270:276;;;;;;;;;;-1:-1:-1;6270:276:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7251:90;;;;;;;;;;-1:-1:-1;7299:4:6;7322:12;-1:-1:-1;;;7322:12:6;;;;7251:90;;;2317:14:7;;2310:22;2292:41;;2280:2;2265:18;7251:90:6;2152:187:7;6660:246:6;;;;;;;;;;-1:-1:-1;6660:246:6;;;;;:::i;:::-;;:::i;:::-;;3718:293;;;;;;;;;;-1:-1:-1;3718:293:6;;;;;:::i;:::-;;:::i;3412:266::-;;;;;;;;;;-1:-1:-1;3412:266:6;;;;;:::i;:::-;;:::i;1294:49::-;;;;;;;;;;-1:-1:-1;1294:49:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;4522:244;;;;;;;;;;-1:-1:-1;4522:244:6;;;;;:::i;:::-;;:::i;6912:290::-;;;;;;;;;;;;;:::i;2587:79::-;;;;;;;;;;-1:-1:-1;2627:7:6;2653:6;2587:79;;-1:-1:-1;;;;;2653:6:6;;;4145:51:7;;4133:2;4118:18;2587:79:6;3999:203:7;5392:767:6;;;;;;;;;;-1:-1:-1;5392:767:6;;;;;:::i;:::-;;:::i;4063:317::-;;;;;;;;;;-1:-1:-1;4063:317:6;;;;;:::i;:::-;;:::i;2287:253::-;;;;;;;;;;-1:-1:-1;2287:253:6;;;;;:::i;:::-;;:::i;3146:186::-;;;;;;;;;;-1:-1:-1;3146:186:6;;;;;:::i;:::-;;:::i;2878:95::-;;;:::i;6270:276::-;2108:6;;6439:12;;-1:-1:-1;;;;;2108:6:6;2094:10;:20;;;;:54;;-1:-1:-1;2137:10:6;2119:29;;;;:17;:29;;;;;;;;2118:30;2094:54;2090:77;;;2157:10;;-1:-1:-1;;;2157:10:6;;;;;;;;;;;2090:77;6459:38:::1;::::0;-1:-1:-1;;;6459:38:6;;-1:-1:-1;;;;;5440:32:7;;;6459:38:6::1;::::0;::::1;5422:51:7::0;5489:18;;;5482:34;;;6459:21:6;::::1;::::0;::::1;::::0;5395:18:7;;6459:38:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6510:33:6::1;::::0;-1:-1:-1;;;6510:33:6;;:4:::1;::::0;:16:::1;::::0;:33:::1;::::0;6527:6;;6535:1:::1;::::0;6538:4;;;;6510:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;6510:33:6::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;6503:40:::0;6270:276;-1:-1:-1;;;;;;;6270:276:6:o;6660:246::-;2000:6;;-1:-1:-1;;;;;2000:6:6;1986:10;:20;1982:43;;2015:10;;-1:-1:-1;;;2015:10:6;;;;;;;;;;;1982:43;6750:38:::1;::::0;-1:-1:-1;;;6750:38:6;;6782:4:::1;6750:38;::::0;::::1;4145:51:7::0;6736:11:6::1;::::0;-1:-1:-1;;;;;6750:23:6;::::1;::::0;::::1;::::0;4118:18:7;;6750:38:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6736:52:::0;-1:-1:-1;6802:7:6;;6798:52:::1;;6838:6;::::0;6811:39:::1;::::0;-1:-1:-1;;;;;6811:26:6;;::::1;::::0;6838:6:::1;6846:3:::0;6811:26:::1;:39::i;:::-;6887:6;::::0;6865:34:::1;::::0;160:25:7;;;-1:-1:-1;;;;;6887:6:6;;::::1;::::0;6865:34;::::1;::::0;::::1;::::0;148:2:7;133:18;6865:34:6::1;;;;;;;;6726:180;6660:246:::0;:::o;3718:293::-;2000:6;;-1:-1:-1;;;;;2000:6:6;1986:10;:20;1982:43;;2015:10;;-1:-1:-1;;;2015:10:6;;;;;;;;;;;1982:43;-1:-1:-1;;;;;3847:19:6;::::1;::::0;;:39:::1;;-1:-1:-1::0;;;;;;3870:16:6;::::1;::::0;3847:39:::1;3843:65;;;3895:13;;-1:-1:-1::0;;;3895:13:6::1;;;;;;;;;;;3843:65;3918:38;-1:-1:-1::0;;;;;3918:26:6;::::1;3945:2:::0;3949:6;3918:26:::1;:38::i;:::-;3993:2;-1:-1:-1::0;;;;;3971:33:6::1;3986:5;-1:-1:-1::0;;;;;3971:33:6::1;;3997:6;3971:33;;;;160:25:7::0;;148:2;133:18;;14:177;3971:33:6::1;;;;;;;;3718:293:::0;;;:::o;3412:266::-;2000:6;;-1:-1:-1;;;;;2000:6:6;1986:10;:20;1982:43;;2015:10;;-1:-1:-1;;;2015:10:6;;;;;;;;;;;1982:43;-1:-1:-1;;;;;3502:16:6;::::1;3498:42;;3527:13;;-1:-1:-1::0;;;3527:13:6::1;;;;;;;;;;;3498:42;3551:7;3564:2;-1:-1:-1::0;;;;;3564:7:6::1;3579:6;3564:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3550:40;;;3605:2;3600:32;;3616:16;;-1:-1:-1::0;;;3616:16:6::1;;;;;;;;;;;3600:32;3660:2;-1:-1:-1::0;;;;;3647:24:6::1;;3664:6;3647:24;;;;160:25:7::0;;148:2;133:18;;14:177;3647:24:6::1;;;;;;;;3488:190;3412:266:::0;;:::o;4522:244::-;2000:6;;-1:-1:-1;;;;;2000:6:6;1986:10;:20;1982:43;;2015:10;;-1:-1:-1;;;2015:10:6;;;;;;;;;;;1982:43;-1:-1:-1;;;;;4615:22:6;::::1;4611:48;;4646:13;;-1:-1:-1::0;;;4646:13:6::1;;;;;;;;;;;4611:48;-1:-1:-1::0;;;;;4669:27:6;::::1;;::::0;;;:17:::1;:27;::::0;;;;;;;;:37;;-1:-1:-1;;4669:37:6::1;::::0;::::1;;::::0;;::::1;::::0;;;4721:38;;2292:41:7;;;4721:38:6::1;::::0;2265:18:7;4721:38:6::1;;;;;;;;4522:244:::0;;:::o;6912:290::-;2000:6;;-1:-1:-1;;;;;2000:6:6;1986:10;:20;1982:43;;2015:10;;-1:-1:-1;;;2015:10:6;;;;;;;;;;;1982:43;6987:21:::1;7022:7:::0;;7018:178:::1;;7046:7;7067:6:::0;;7059:36:::1;::::0;-1:-1:-1;;;;;7067:6:6;;::::1;::::0;7087:3;;7046:7;7059:36;7046:7;7059:36;7087:3;7067:6;7059:36:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7045:50;;;7114:2;7109:32;;7125:16;;-1:-1:-1::0;;;7125:16:6::1;;;;;;;;;;;7109:32;7173:6;::::0;7160:25:::1;::::0;160::7;;;-1:-1:-1;;;;;7173:6:6;;::::1;::::0;7160:25:::1;::::0;148:2:7;133:18;7160:25:6::1;14:177:7::0;7018:178:6::1;6963:239;6912:290::o:0;5392:767::-;2108:6;;5533:19;;-1:-1:-1;;;;;2108:6:6;2094:10;:20;;;;:54;;-1:-1:-1;2137:10:6;2119:29;;;;:17;:29;;;;;;;;2118:30;2094:54;2090:77;;;2157:10;;-1:-1:-1;;;2157:10:6;;;;;;;;;;;2090:77;-1:-1:-1;;;;;5568:20:6;::::1;5564:48;;5597:15;;-1:-1:-1::0;;;5597:15:6::1;;;;;;;;;;;5564:48;5683:7;5692:16:::0;5712:6:::1;-1:-1:-1::0;;;;;5712:11:6::1;5731:5;5738:4;;5712:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5682:61;;;;5758:2;5753:314;;5827:10:::0;;:14;5823:197:::1;;5983:3;5977:10;5971:3;5967:2;5963:12;5956:32;5823:197;6040:16;;-1:-1:-1::0;;;6040:16:6::1;;;;;;;;;;;5753:314;6107:6;-1:-1:-1::0;;;;;6082:50:6::1;6095:10;-1:-1:-1::0;;;;;6082:50:6::1;;6115:5;6122:4;;6128:3;6082:50;;;;;;;;;:::i;:::-;;;;;;;;6149:3:::0;5392:767;-1:-1:-1;;;;;;5392:767:6:o;4063:317::-;2000:6;;-1:-1:-1;;;;;2000:6:6;1986:10;:20;1982:43;;2015:10;;-1:-1:-1;;;2015:10:6;;;;;;;;;;;1982:43;-1:-1:-1;;;;;4196:19:6;::::1;::::0;;:44:::1;;-1:-1:-1::0;;;;;;4219:21:6;::::1;::::0;4196:44:::1;4192:70;;;4249:13;;-1:-1:-1::0;;;4249:13:6::1;;;;;;;;;;;4192:70;4272:38;::::0;-1:-1:-1;;;4272:38:6;;-1:-1:-1;;;;;5440:32:7;;;4272:38:6::1;::::0;::::1;5422:51:7::0;5489:18;;;5482:34;;;4272:21:6;::::1;::::0;::::1;::::0;5395:18:7;;4272:38:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4063:317:::0;;;:::o;2287:253::-;2346:12;;-1:-1:-1;;;2346:12:6;;;;2342:45;;;2367:20;;-1:-1:-1;;;2367:20:6;;;;;;;;;;;2342:45;-1:-1:-1;;;;;2401:20:6;;2397:46;;2430:13;;-1:-1:-1;;;2430:13:6;;;;;;;;;;;2397:46;2454:6;:15;;-1:-1:-1;;;;;;2479:19:6;-1:-1:-1;;;;;2454:15:6;;2479:19;;;-1:-1:-1;;;2479:19:6;;;2514;;2454:15;;2514:19;;;2287:253;:::o;3146:186::-;-1:-1:-1;;;;;3228:19:6;;3224:45;;3256:13;;-1:-1:-1;;;3256:13:6;;;;;;;;;;;3224:45;3284:41;;160:25:7;;;3306:10:6;;-1:-1:-1;;;;;3284:41:6;;;;;148:2:7;133:18;3284:41:6;14:177:7;2878:95:6;2932:34;;2956:9;160:25:7;;2944:10:6;;2932:34;;148:2:7;133:18;2932:34:6;;;;;;;2878:95::o;1219:160:4:-;1328:43;;;-1:-1:-1;;;;;5440:32:7;;1328:43:4;;;5422:51:7;5489:18;;;;5482:34;;;1328:43:4;;;;;;;;;;5395:18:7;;;;1328:43:4;;;;;;;;-1:-1:-1;;;;;1328:43:4;-1:-1:-1;;;1328:43:4;;;1301:71;;1321:5;;1301:19;:71::i;:::-;1219:160;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:4;8910:8;8866:16;;-1:-1:-1;8942:15:4;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:4;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:4;;-1:-1:-1;;;;;4163:32:7;;9033:40:4;;;4145:51:7;4118:18;;9033:40:4;;;;;;;196:131:7;-1:-1:-1;;;;;271:31:7;;261:42;;251:70;;317:1;314;307:12;332:347;383:8;393:6;447:3;440:4;432:6;428:17;424:27;414:55;;465:1;462;455:12;414:55;-1:-1:-1;488:20:7;;531:18;520:30;;517:50;;;563:1;560;553:12;517:50;600:4;592:6;588:17;576:29;;652:3;645:4;636:6;628;624:19;620:30;617:39;614:59;;;669:1;666;659:12;614:59;332:347;;;;;:::o;684:948::-;790:6;798;806;814;822;830;883:3;871:9;862:7;858:23;854:33;851:53;;;900:1;897;890:12;851:53;939:9;926:23;958:31;983:5;958:31;:::i;:::-;1008:5;-1:-1:-1;1065:2:7;1050:18;;1037:32;1078:33;1037:32;1078:33;:::i;:::-;1130:7;-1:-1:-1;1210:2:7;1195:18;;1182:32;;-1:-1:-1;1292:2:7;1277:18;;1264:32;1305:33;1264:32;1305:33;:::i;:::-;1357:7;-1:-1:-1;1415:3:7;1400:19;;1387:33;1443:18;1432:30;;1429:50;;;1475:1;1472;1465:12;1429:50;1514:58;1564:7;1555:6;1544:9;1540:22;1514:58;:::i;:::-;684:948;;;;-1:-1:-1;684:948:7;;-1:-1:-1;684:948:7;;1591:8;;684:948;-1:-1:-1;;;684:948:7:o;1637:288::-;1678:3;1716:5;1710:12;1743:6;1738:3;1731:19;1799:6;1792:4;1785:5;1781:16;1774:4;1769:3;1765:14;1759:47;1851:1;1844:4;1835:6;1830:3;1826:16;1822:27;1815:38;1914:4;1907:2;1903:7;1898:2;1890:6;1886:15;1882:29;1877:3;1873:39;1869:50;1862:57;;;1637:288;;;;:::o;1930:217::-;2077:2;2066:9;2059:21;2040:4;2097:44;2137:2;2126:9;2122:18;2114:6;2097:44;:::i;:::-;2089:52;1930:217;-1:-1:-1;;;1930:217:7:o;2344:247::-;2403:6;2456:2;2444:9;2435:7;2431:23;2427:32;2424:52;;;2472:1;2469;2462:12;2424:52;2511:9;2498:23;2530:31;2555:5;2530:31;:::i;2596:508::-;2673:6;2681;2689;2742:2;2730:9;2721:7;2717:23;2713:32;2710:52;;;2758:1;2755;2748:12;2710:52;2797:9;2784:23;2816:31;2841:5;2816:31;:::i;:::-;2866:5;-1:-1:-1;2923:2:7;2908:18;;2895:32;2936:33;2895:32;2936:33;:::i;:::-;2596:508;;2988:7;;-1:-1:-1;;;3068:2:7;3053:18;;;;3040:32;;2596:508::o;3109:375::-;3185:6;3193;3246:2;3234:9;3225:7;3221:23;3217:32;3214:52;;;3262:1;3259;3252:12;3214:52;3301:9;3288:23;3320:31;3345:5;3320:31;:::i;:::-;3370:5;3448:2;3433:18;;;;3420:32;;-1:-1:-1;;;3109:375:7:o;3489:118::-;3575:5;3568:13;3561:21;3554:5;3551:32;3541:60;;3597:1;3594;3587:12;3612:382;3677:6;3685;3738:2;3726:9;3717:7;3713:23;3709:32;3706:52;;;3754:1;3751;3744:12;3706:52;3793:9;3780:23;3812:31;3837:5;3812:31;:::i;:::-;3862:5;-1:-1:-1;3919:2:7;3904:18;;3891:32;3932:30;3891:32;3932:30;:::i;:::-;3981:7;3971:17;;;3612:382;;;;;:::o;4207:664::-;4295:6;4303;4311;4319;4372:2;4360:9;4351:7;4347:23;4343:32;4340:52;;;4388:1;4385;4378:12;4340:52;4427:9;4414:23;4446:31;4471:5;4446:31;:::i;:::-;4496:5;-1:-1:-1;4574:2:7;4559:18;;4546:32;;-1:-1:-1;4655:2:7;4640:18;;4627:32;4682:18;4671:30;;4668:50;;;4714:1;4711;4704:12;4668:50;4753:58;4803:7;4794:6;4783:9;4779:22;4753:58;:::i;:::-;4207:664;;;;-1:-1:-1;4830:8:7;-1:-1:-1;;;;4207:664:7:o;5527:245::-;5594:6;5647:2;5635:9;5626:7;5622:23;5618:32;5615:52;;;5663:1;5660;5653:12;5615:52;5695:9;5689:16;5714:28;5736:5;5714:28;:::i;5777:266::-;5865:6;5860:3;5853:19;5917:6;5910:5;5903:4;5898:3;5894:14;5881:43;-1:-1:-1;5969:1:7;5944:16;;;5962:4;5940:27;;;5933:38;;;;6025:2;6004:15;;;-1:-1:-1;;6000:29:7;5991:39;;;5987:50;;5777:266::o;6048:420::-;6298:1;6294;6289:3;6285:11;6281:19;6273:6;6269:32;6258:9;6251:51;6338:6;6333:2;6322:9;6318:18;6311:34;6381:2;6376;6365:9;6361:18;6354:30;6232:4;6401:61;6458:2;6447:9;6443:18;6435:6;6427;6401:61;:::i;:::-;6393:69;6048:420;-1:-1:-1;;;;;;6048:420:7:o;6473:127::-;6534:10;6529:3;6525:20;6522:1;6515:31;6565:4;6562:1;6555:15;6589:4;6586:1;6579:15;6605:934;6684:6;6737:2;6725:9;6716:7;6712:23;6708:32;6705:52;;;6753:1;6750;6743:12;6705:52;6786:9;6780:16;6819:18;6811:6;6808:30;6805:50;;;6851:1;6848;6841:12;6805:50;6874:22;;6927:4;6919:13;;6915:27;-1:-1:-1;6905:55:7;;6956:1;6953;6946:12;6905:55;6989:2;6983:9;7015:18;7007:6;7004:30;7001:56;;;7037:18;;:::i;:::-;7086:2;7080:9;7178:2;7140:17;;-1:-1:-1;;7136:31:7;;;7169:2;7132:40;7128:54;7116:67;;7213:18;7198:34;;7234:22;;;7195:62;7192:88;;;7260:18;;:::i;:::-;7296:2;7289:22;7320;;;7361:15;;;7378:2;7357:24;7354:37;-1:-1:-1;7351:57:7;;;7404:1;7401;7394:12;7351:57;7453:6;7448:2;7444;7440:11;7435:2;7427:6;7423:15;7417:43;7506:1;7480:19;;;7501:2;7476:28;7469:39;;;;7484:6;6605:934;-1:-1:-1;;;;6605:934:7:o;7544:184::-;7614:6;7667:2;7655:9;7646:7;7642:23;7638:32;7635:52;;;7683:1;7680;7673:12;7635:52;-1:-1:-1;7706:16:7;;7544:184;-1:-1:-1;7544:184:7:o;7943:271::-;8126:6;8118;8113:3;8100:33;8082:3;8152:16;;8177:13;;;8152:16;7943:271;-1:-1:-1;7943:271:7:o;8219:475::-;8450:6;8439:9;8432:25;8493:2;8488;8477:9;8473:18;8466:30;8413:4;8519:61;8576:2;8565:9;8561:18;8553:6;8545;8519:61;:::i;:::-;8628:9;8620:6;8616:22;8611:2;8600:9;8596:18;8589:50;8656:32;8681:6;8673;8656:32;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "853800",
								"executionCost": "888",
								"totalCost": "854688"
							},
							"external": {
								"approveAndCall(address,address,uint256,address,bytes)": "infinite",
								"approveERC20(address,address,uint256)": "infinite",
								"depositETH()": "1643",
								"emergencyWithdrawERC20(address)": "infinite",
								"emergencyWithdrawETH()": "infinite",
								"executeCall(address,uint256,bytes)": "infinite",
								"executorWhitelist(address)": "2589",
								"initialize(address)": "27931",
								"isInitialized()": "2354",
								"notifyERC20Deposit(address,uint256)": "2268",
								"owner()": "2344",
								"setExecutorAllowed(address,bool)": "infinite",
								"withdrawERC20(address,address,uint256)": "infinite",
								"withdrawETH(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 974,
									"end": 7343,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 7343,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122086974aef894815efe106296cf6248e20f30ced3a30cf5e0adde420815d70d09e64736f6c634300081a0033",
									".code": [
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "84536017"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "A8E5E4AA"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "A8E5E4AA"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "C4D66DE8"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "F32F1864"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "F6326FB3"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "84536017"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "9E5D4C49"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "44004CC1"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "44004CC1"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "4782F779"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "54BA7696"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "68FEC4DA"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "103657E7"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "392E53CD"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "40C442DE"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2805,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 2794,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "BFE611B001DFCD411432F7BF0D79B82B4B2EE81511EDAC123A3403C357FB972A"
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 7343,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 6270,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 6270,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 6270,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7299,
											"end": 7303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7334,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7322,
											"end": 7334,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7334,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7334,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7322,
											"end": 7334,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2317,
											"end": 2331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2317,
											"end": 2331,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2310,
											"end": 2332,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2292,
											"end": 2333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2292,
											"end": 2333,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2280,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2152,
											"end": 2339,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 6660,
											"end": 6906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6660,
											"end": 6906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3718,
											"end": 4011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3718,
											"end": 4011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3412,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3412,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1294,
											"end": 1343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1343,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4522,
											"end": 4766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4522,
											"end": 4766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 6912,
											"end": 7202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2666,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2587,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2666,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2666,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2587,
											"end": 2666,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2666,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2666,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2666,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2587,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2659,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2666,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2653,
											"end": 2659,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2659,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2659,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4196,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4196,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4135,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4118,
											"end": 4136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3999,
											"end": 4202,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5392,
											"end": 6159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5392,
											"end": 6159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4063,
											"end": 4380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4063,
											"end": 4380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2287,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2287,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3146,
											"end": 3332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3146,
											"end": 3332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2973,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2878,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2878,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2878,
											"end": 2973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2114,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6439,
											"end": 6451,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6439,
											"end": 6451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2114,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2104,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2094,
											"end": 2148,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2147,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2136,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2148,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2148,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2094,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2167,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2090,
											"end": 2167,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30CD7471"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2167,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2090,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6459,
											"end": 6497,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6459,
											"end": 6497,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5440,
											"end": 5472,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5440,
											"end": 5472,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5440,
											"end": 5472,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6459,
											"end": 6497,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5473,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5516,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5516,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5516,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6480,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6480,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 6459,
											"end": 6480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6497,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 6459,
											"end": 6497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6459,
											"end": 6497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6510,
											"end": 6543,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9E5D4C49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6510,
											"end": 6543,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6514,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9E5D4C49"
										},
										{
											"begin": 6510,
											"end": 6526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6510,
											"end": 6543,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6535,
											"end": 6536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6535,
											"end": 6536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6542,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6542,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 6510,
											"end": 6543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6510,
											"end": 6543,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6510,
											"end": 6543,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 6510,
											"end": 6543,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 6510,
											"end": 6543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 6510,
											"end": 6543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6503,
											"end": 6543,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6546,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6270,
											"end": 6546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30CD7471"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6750,
											"end": 6788,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6750,
											"end": 6788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6782,
											"end": 6786,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6750,
											"end": 6788,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4196,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6736,
											"end": 6747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6750,
											"end": 6773,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6773,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 6750,
											"end": 6773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4136,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4118,
											"end": 4136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6750,
											"end": 6788,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 6750,
											"end": 6788,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6750,
											"end": 6788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6736,
											"end": 6788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6802,
											"end": 6809,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6802,
											"end": 6809,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6798,
											"end": 6850,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 6798,
											"end": 6850,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6838,
											"end": 6844,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6811,
											"end": 6850,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 6811,
											"end": 6850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6811,
											"end": 6837,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6811,
											"end": 6837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6811,
											"end": 6837,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6811,
											"end": 6837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6846,
											"end": 6849,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6811,
											"end": 6837,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 6811,
											"end": 6850,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6811,
											"end": 6850,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 6811,
											"end": 6850,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6893,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6865,
											"end": 6899,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6887,
											"end": 6893,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6893,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6893,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6893,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6899,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6899,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "BFED55BDCD242E3DD0F60DDD7D1E87C67F61C34CD9527B3E6455D841B1025362"
										},
										{
											"begin": 6865,
											"end": 6899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6865,
											"end": 6899,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 6865,
											"end": 6899,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6865,
											"end": 6899,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6899,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6899,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6899,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6899,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 6726,
											"end": 6906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30CD7471"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3847,
											"end": 3866,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3866,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3866,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3866,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3847,
											"end": 3886,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3870,
											"end": 3886,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3886,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3886,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3847,
											"end": 3886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 3908,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 3908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3843,
											"end": 3908,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3895,
											"end": 3908,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3895,
											"end": 3908,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3908,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3895,
											"end": 3908,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3895,
											"end": 3908,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3908,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3908,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3908,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3908,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 3908,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3843,
											"end": 3908,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 3956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3918,
											"end": 3944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 3944,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 3947,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3955,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 3944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3918,
											"end": 3956,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 3956,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3918,
											"end": 3956,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 3995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3971,
											"end": 4004,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3986,
											"end": 3991,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3971,
											"end": 4004,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "BFED55BDCD242E3DD0F60DDD7D1E87C67F61C34CD9527B3E6455D841B1025362"
										},
										{
											"begin": 3997,
											"end": 4003,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3971,
											"end": 4004,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3971,
											"end": 4004,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4004,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3971,
											"end": 4004,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3971,
											"end": 4004,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4004,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4004,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4004,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4004,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30CD7471"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3502,
											"end": 3518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3518,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3498,
											"end": 3540,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3527,
											"end": 3540,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3527,
											"end": 3540,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3540,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3527,
											"end": 3540,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3527,
											"end": 3540,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3540,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3540,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3540,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3540,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3540,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3540,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3498,
											"end": 3540,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3566,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3564,
											"end": 3571,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3585,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3550,
											"end": 3590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3550,
											"end": 3590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3550,
											"end": 3590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3605,
											"end": 3607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3600,
											"end": 3632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3600,
											"end": 3632,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3632,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12171D83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3616,
											"end": 3632,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3632,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3616,
											"end": 3632,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3632,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3632,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3632,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3632,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3632,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3632,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3600,
											"end": 3632,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3600,
											"end": 3632,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3662,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3647,
											"end": 3671,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C"
										},
										{
											"begin": 3664,
											"end": 3670,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3647,
											"end": 3671,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3647,
											"end": 3671,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3671,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3647,
											"end": 3671,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3647,
											"end": 3671,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3671,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3671,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3671,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3671,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3678,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30CD7471"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4615,
											"end": 4637,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4611,
											"end": 4659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4611,
											"end": 4659,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4646,
											"end": 4659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4646,
											"end": 4659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4659,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4646,
											"end": 4659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4646,
											"end": 4659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4659,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4659,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4659,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4611,
											"end": 4659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4611,
											"end": 4659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4669,
											"end": 4696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4696,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4669,
											"end": 4696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4696,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4669,
											"end": 4696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4669,
											"end": 4696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4696,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4696,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4669,
											"end": 4696,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4696,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4706,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4706,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4669,
											"end": 4706,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4706,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4706,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4706,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4706,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4706,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4706,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4759,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4759,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2292,
											"end": 2333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2292,
											"end": 2333,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "19F4C310CF148369E5605E8F3538CEE4D3495DA0612C9A45C0B89105ED6FEE4D"
										},
										{
											"begin": 4721,
											"end": 4759,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4721,
											"end": 4759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4721,
											"end": 4759,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4759,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4759,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4759,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4759,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 6912,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30CD7471"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7008,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 7022,
											"end": 7029,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7022,
											"end": 7029,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7018,
											"end": 7196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 7018,
											"end": 7196,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7046,
											"end": 7053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 7073,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7059,
											"end": 7095,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7067,
											"end": 7073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 7073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 7073,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 7073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7046,
											"end": 7053,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7046,
											"end": 7053,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 7073,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7116,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7109,
											"end": 7141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 7109,
											"end": 7141,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7125,
											"end": 7141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7125,
											"end": 7141,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12171D83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7125,
											"end": 7141,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7125,
											"end": 7141,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7125,
											"end": 7141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7125,
											"end": 7141,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7125,
											"end": 7141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7125,
											"end": 7141,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7125,
											"end": 7141,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7125,
											"end": 7141,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7125,
											"end": 7141,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7125,
											"end": 7141,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7125,
											"end": 7141,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7109,
											"end": 7141,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 7109,
											"end": 7141,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7173,
											"end": 7179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7173,
											"end": 7179,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7160,
											"end": 7185,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7173,
											"end": 7179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7173,
											"end": 7179,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7173,
											"end": 7179,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7173,
											"end": 7179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C"
										},
										{
											"begin": 7160,
											"end": 7185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7160,
											"end": 7185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7196,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 7018,
											"end": 7196,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6963,
											"end": 7202,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 7202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2114,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2114,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2104,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2094,
											"end": 2148,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2147,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2136,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2119,
											"end": 2148,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2148,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2148,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2094,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2167,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2090,
											"end": 2167,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30CD7471"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2167,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2090,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5568,
											"end": 5588,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5568,
											"end": 5588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5564,
											"end": 5612,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5597,
											"end": 5612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5597,
											"end": 5612,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "416AEBB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5597,
											"end": 5612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5597,
											"end": 5612,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5597,
											"end": 5612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5597,
											"end": 5612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5597,
											"end": 5612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5597,
											"end": 5612,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5597,
											"end": 5612,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5597,
											"end": 5612,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5597,
											"end": 5612,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5597,
											"end": 5612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5597,
											"end": 5612,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5564,
											"end": 5612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5708,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5718,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5712,
											"end": 5723,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5736,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5742,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5742,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5712,
											"end": 5743,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5743,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5743,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5743,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5743,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5743,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5758,
											"end": 5760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 6067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5753,
											"end": 6067,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5837,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5841,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 6020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5823,
											"end": 6020,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 5986,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 5987,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5971,
											"end": 5974,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5975,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 5988,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 6020,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5823,
											"end": 6020,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6040,
											"end": 6056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6056,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12171D83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6040,
											"end": 6056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6040,
											"end": 6056,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6040,
											"end": 6056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6040,
											"end": 6056,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6040,
											"end": 6056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6056,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6040,
											"end": 6056,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6040,
											"end": 6056,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6040,
											"end": 6056,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6040,
											"end": 6056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6040,
											"end": 6056,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 6067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5753,
											"end": 6067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6107,
											"end": 6113,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6095,
											"end": 6105,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "335A1FECD5558554165C05171954925D0D97911AD1D259EF6BB18EB2C07A58AA"
										},
										{
											"begin": 6115,
											"end": 6120,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6122,
											"end": 6126,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6122,
											"end": 6126,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6131,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6082,
											"end": 6132,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6132,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 6149,
											"end": 6152,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 6159,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5392,
											"end": 6159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30CD7471"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1982,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4196,
											"end": 4215,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4196,
											"end": 4215,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4196,
											"end": 4215,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4196,
											"end": 4215,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4196,
											"end": 4240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4196,
											"end": 4240,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4219,
											"end": 4240,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4240,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4240,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4196,
											"end": 4240,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4196,
											"end": 4240,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4262,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4192,
											"end": 4262,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4262,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4249,
											"end": 4262,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4262,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4249,
											"end": 4262,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4262,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4262,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4262,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4262,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4262,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4262,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4192,
											"end": 4262,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4272,
											"end": 4310,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4272,
											"end": 4310,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5440,
											"end": 5472,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5440,
											"end": 5472,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5440,
											"end": 5472,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4272,
											"end": 4310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5473,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5516,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5516,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5516,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4293,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4272,
											"end": 4310,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4272,
											"end": 4310,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4310,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2387,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2342,
											"end": 2387,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2387,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2387,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC149F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2367,
											"end": 2387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2387,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2367,
											"end": 2387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2387,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2387,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2387,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2387,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2387,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2387,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2387,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2342,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2421,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2421,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2397,
											"end": 2443,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2443,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2397,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2479,
											"end": 2498,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2498,
											"name": "OR",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2479,
											"end": 2498,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2498,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2533,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2514,
											"end": 2533,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2533,
											"name": "PUSH",
											"source": 6,
											"value": "908408E307FC569B417F6CBEC5D5A06F44A0A505AC0479B47D421A4B2FD6A1E6"
										},
										{
											"begin": 2514,
											"end": 2533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2533,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3146,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3224,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3224,
											"end": 3269,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3269,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3269,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3256,
											"end": 3269,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3269,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3269,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3256,
											"end": 3269,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3269,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3269,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3269,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3269,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3269,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3224,
											"end": 3269,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3224,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3284,
											"end": 3325,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3284,
											"end": 3325,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3306,
											"end": 3316,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3306,
											"end": 3316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3284,
											"end": 3325,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3284,
											"end": 3325,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3284,
											"end": 3325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3284,
											"end": 3325,
											"name": "PUSH",
											"source": 6,
											"value": "E33E9822E3317B004D587136BAB2627EA1ECFBBA4EB79ABDDD0A56CFDD09C0E1"
										},
										{
											"begin": 3284,
											"end": 3325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2973,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2878,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2966,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2932,
											"end": 2966,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2965,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2944,
											"end": 2954,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 2954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2966,
											"name": "PUSH",
											"source": 6,
											"value": "BFE611B001DFCD411432F7BF0D79B82B4B2EE81511EDAC123A3403C357FB972A"
										},
										{
											"begin": 2932,
											"end": 2966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2932,
											"end": 2966,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2932,
											"end": 2966,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2966,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2966,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2966,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5440,
											"end": 5472,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5440,
											"end": 5472,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5422,
											"end": 5473,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5516,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5516,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5516,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4163,
											"end": 4195,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4163,
											"end": 4195,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4145,
											"end": 4196,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4118,
											"end": 4136,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4118,
											"end": 4136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 196,
											"end": 327,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 196,
											"end": 327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 271,
											"end": 302,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 271,
											"end": 302,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 261,
											"end": 303,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 261,
											"end": 303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 251,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 251,
											"end": 321,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 332,
											"end": 679,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 332,
											"end": 679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 383,
											"end": 391,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 399,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 447,
											"end": 450,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 440,
											"end": 444,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 432,
											"end": 438,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 428,
											"end": 445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 424,
											"end": 451,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 414,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 414,
											"end": 469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 465,
											"end": 466,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 463,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 455,
											"end": 467,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 414,
											"end": 469,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 414,
											"end": 469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 488,
											"end": 508,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 488,
											"end": 508,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 531,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 520,
											"end": 550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 520,
											"end": 550,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 517,
											"end": 567,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 517,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 517,
											"end": 567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 563,
											"end": 564,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 561,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 565,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 517,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 517,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 600,
											"end": 604,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 588,
											"end": 605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 576,
											"end": 605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 576,
											"end": 605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 652,
											"end": 655,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 645,
											"end": 649,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 636,
											"end": 642,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 628,
											"end": 634,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 624,
											"end": 643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 620,
											"end": 650,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 617,
											"end": 656,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 614,
											"end": 673,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 614,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 614,
											"end": 673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 669,
											"end": 670,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 667,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 659,
											"end": 671,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 614,
											"end": 673,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 614,
											"end": 673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 332,
											"end": 679,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 332,
											"end": 679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 332,
											"end": 679,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 332,
											"end": 679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 332,
											"end": 679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 332,
											"end": 679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 684,
											"end": 1632,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 684,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 790,
											"end": 796,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 804,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 806,
											"end": 812,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 820,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 822,
											"end": 828,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 883,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 871,
											"end": 880,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 862,
											"end": 869,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 858,
											"end": 881,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 854,
											"end": 887,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 851,
											"end": 904,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 851,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 851,
											"end": 904,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 900,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 890,
											"end": 902,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 851,
											"end": 904,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 851,
											"end": 904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 939,
											"end": 948,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 926,
											"end": 949,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 958,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 983,
											"end": 988,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 958,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 958,
											"end": 989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 958,
											"end": 989,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 958,
											"end": 989,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1008,
											"end": 1013,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1065,
											"end": 1067,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1068,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1050,
											"end": 1068,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1037,
											"end": 1069,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1037,
											"end": 1069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1078,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1111,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1078,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1137,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1210,
											"end": 1212,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1213,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1213,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1182,
											"end": 1214,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1182,
											"end": 1214,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1292,
											"end": 1294,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1277,
											"end": 1295,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1277,
											"end": 1295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1264,
											"end": 1296,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1264,
											"end": 1296,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1305,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1338,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1305,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1364,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1418,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1400,
											"end": 1419,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1387,
											"end": 1420,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1432,
											"end": 1462,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1462,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1479,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1429,
											"end": 1479,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1473,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1477,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1479,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1429,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1564,
											"end": 1571,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1561,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1553,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1562,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1514,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1572,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1514,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 684,
											"end": 1632,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 684,
											"end": 1632,
											"name": "SWAP11",
											"source": 7
										},
										{
											"begin": 684,
											"end": 1632,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 684,
											"end": 1632,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 684,
											"end": 1632,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 684,
											"end": 1632,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 684,
											"end": 1632,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 684,
											"end": 1632,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1599,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1599,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 684,
											"end": 1632,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 684,
											"end": 1632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1637,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 1637,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1722,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1743,
											"end": 1749,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1741,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1750,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1792,
											"end": 1796,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1781,
											"end": 1797,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1769,
											"end": 1772,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1765,
											"end": 1779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1806,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1848,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1833,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1815,
											"end": 1853,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1918,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1907,
											"end": 1909,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1903,
											"end": 1910,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1901,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1919,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1862,
											"end": 1919,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1862,
											"end": 1919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1862,
											"end": 1919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1637,
											"end": 1925,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1637,
											"end": 1925,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1637,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1637,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1637,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2147,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1930,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2079,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2080,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2044,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2126,
											"end": 2135,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2120,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2097,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2097,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2097,
											"end": 2141,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2097,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2089,
											"end": 2141,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2147,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1930,
											"end": 2147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2344,
											"end": 2591,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2344,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2458,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2442,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2454,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2459,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2472,
											"end": 2473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2470,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2462,
											"end": 2474,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2520,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2521,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2530,
											"end": 2561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 3104,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2596,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2673,
											"end": 2679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2687,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2695,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2744,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2730,
											"end": 2739,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2728,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 2745,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2762,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2710,
											"end": 2762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2758,
											"end": 2759,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2756,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2748,
											"end": 2760,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2762,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2710,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 2806,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 2807,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2841,
											"end": 2846,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2816,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2847,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2816,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2871,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2923,
											"end": 2925,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2908,
											"end": 2926,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2926,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2895,
											"end": 2927,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2936,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2895,
											"end": 2927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2936,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2936,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2936,
											"end": 2969,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2936,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 3104,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 3104,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3070,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3072,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3072,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 3104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3484,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3109,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3248,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3243,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3232,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3244,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3217,
											"end": 3249,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3266,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3214,
											"end": 3266,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3262,
											"end": 3263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3260,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3264,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3266,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3214,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3301,
											"end": 3310,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3288,
											"end": 3311,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3345,
											"end": 3350,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3320,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3351,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3320,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3375,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3450,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3452,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3452,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3109,
											"end": 3484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3607,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3489,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3568,
											"end": 3581,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3582,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3583,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 3541,
											"end": 3601,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3597,
											"end": 3598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3595,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3587,
											"end": 3599,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3994,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3612,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3683,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3691,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3738,
											"end": 3740,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3726,
											"end": 3735,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3717,
											"end": 3724,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3713,
											"end": 3736,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3709,
											"end": 3741,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3758,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3706,
											"end": 3758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3756,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3758,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3706,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 3802,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3803,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3837,
											"end": 3842,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3812,
											"end": 3843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3843,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3812,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3904,
											"end": 3922,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3904,
											"end": 3922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3932,
											"end": 3962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 3962,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3932,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 3988,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3988,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3994,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3994,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3994,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3994,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3994,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4871,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4207,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4295,
											"end": 4301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4311,
											"end": 4317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4374,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4360,
											"end": 4369,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4370,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4375,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4392,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4340,
											"end": 4392,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4388,
											"end": 4389,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4390,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4392,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4340,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4436,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4414,
											"end": 4437,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4446,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4471,
											"end": 4476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4446,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 4446,
											"end": 4477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4446,
											"end": 4477,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4446,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4496,
											"end": 4501,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4574,
											"end": 4576,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4578,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4578,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4655,
											"end": 4657,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4659,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4701,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4671,
											"end": 4701,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4718,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4668,
											"end": 4718,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 4715,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4711,
											"end": 4712,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4716,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4718,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4668,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4753,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4803,
											"end": 4810,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4800,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4783,
											"end": 4792,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4779,
											"end": 4801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4753,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4753,
											"end": 4811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4753,
											"end": 4811,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4753,
											"end": 4811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4871,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4871,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4871,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4871,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4830,
											"end": 4838,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4207,
											"end": 4871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5772,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 5527,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5594,
											"end": 5600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5647,
											"end": 5649,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5635,
											"end": 5644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5626,
											"end": 5633,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5622,
											"end": 5645,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5615,
											"end": 5667,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5615,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 5615,
											"end": 5667,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5661,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5653,
											"end": 5665,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5615,
											"end": 5667,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 5615,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5695,
											"end": 5704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5689,
											"end": 5705,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5714,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5736,
											"end": 5741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5714,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5714,
											"end": 5742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 6043,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5777,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5863,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5853,
											"end": 5872,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5923,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5910,
											"end": 5915,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5903,
											"end": 5907,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5898,
											"end": 5901,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5894,
											"end": 5908,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 5924,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5969,
											"end": 5970,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5944,
											"end": 5960,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5960,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5962,
											"end": 5966,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5940,
											"end": 5967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5940,
											"end": 5967,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5940,
											"end": 5967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5933,
											"end": 5971,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5933,
											"end": 5971,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5933,
											"end": 5971,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5933,
											"end": 5971,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6027,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6004,
											"end": 6019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6004,
											"end": 6019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6004,
											"end": 6019,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6000,
											"end": 6029,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6030,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6030,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6030,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5987,
											"end": 6037,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5987,
											"end": 6037,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 6043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6048,
											"end": 6468,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 6048,
											"end": 6468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6298,
											"end": 6299,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6294,
											"end": 6295,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6289,
											"end": 6292,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 6285,
											"end": 6296,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6300,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6273,
											"end": 6279,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6301,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6258,
											"end": 6267,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6302,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6338,
											"end": 6344,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6335,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6322,
											"end": 6331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6318,
											"end": 6336,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6311,
											"end": 6345,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6381,
											"end": 6383,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6376,
											"end": 6378,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6365,
											"end": 6374,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6361,
											"end": 6379,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6384,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 6458,
											"end": 6460,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6447,
											"end": 6456,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6443,
											"end": 6461,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6435,
											"end": 6441,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6427,
											"end": 6433,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 6401,
											"end": 6462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6462,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 6401,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6393,
											"end": 6462,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 6048,
											"end": 6468,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6048,
											"end": 6468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6473,
											"end": 6600,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 6473,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6544,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 6529,
											"end": 6532,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6525,
											"end": 6545,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6522,
											"end": 6523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6546,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6569,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6555,
											"end": 6570,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6593,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6586,
											"end": 6587,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6605,
											"end": 7539,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 6605,
											"end": 7539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6737,
											"end": 6739,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6725,
											"end": 6734,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6716,
											"end": 6723,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6735,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6708,
											"end": 6740,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6705,
											"end": 6757,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6705,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 6705,
											"end": 6757,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6753,
											"end": 6754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6750,
											"end": 6751,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6755,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6705,
											"end": 6757,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 6705,
											"end": 6757,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6786,
											"end": 6795,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6796,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6837,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6811,
											"end": 6817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6808,
											"end": 6838,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 6855,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 6805,
											"end": 6855,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6851,
											"end": 6852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6848,
											"end": 6849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6841,
											"end": 6853,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 6855,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 6805,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6874,
											"end": 6896,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6874,
											"end": 6896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6927,
											"end": 6931,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6919,
											"end": 6932,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6919,
											"end": 6932,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6915,
											"end": 6942,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 6905,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 6905,
											"end": 6960,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6956,
											"end": 6957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 6954,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6946,
											"end": 6958,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6905,
											"end": 6960,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 6905,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6989,
											"end": 6991,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 6992,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7015,
											"end": 7033,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7007,
											"end": 7013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7004,
											"end": 7034,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7057,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7001,
											"end": 7057,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7037,
											"end": 7055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7037,
											"end": 7055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 7037,
											"end": 7055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7037,
											"end": 7055,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7037,
											"end": 7055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7088,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7080,
											"end": 7089,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7178,
											"end": 7180,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7140,
											"end": 7157,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7157,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7136,
											"end": 7167,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7136,
											"end": 7167,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7136,
											"end": 7167,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7169,
											"end": 7171,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 7132,
											"end": 7172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7128,
											"end": 7182,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7116,
											"end": 7183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7116,
											"end": 7183,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7198,
											"end": 7232,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7232,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7256,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7257,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7280,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 7192,
											"end": 7280,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 7260,
											"end": 7278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7298,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7289,
											"end": 7311,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7320,
											"end": 7342,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7320,
											"end": 7342,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7320,
											"end": 7342,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7361,
											"end": 7376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7380,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7357,
											"end": 7381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7391,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 7351,
											"end": 7408,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7351,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 7351,
											"end": 7408,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7404,
											"end": 7405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7406,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7351,
											"end": 7408,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 7351,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7453,
											"end": 7459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7450,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7444,
											"end": 7446,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7440,
											"end": 7451,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7437,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7427,
											"end": 7433,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7423,
											"end": 7438,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7417,
											"end": 7460,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 7506,
											"end": 7507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7480,
											"end": 7499,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7480,
											"end": 7499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7480,
											"end": 7499,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7501,
											"end": 7503,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7476,
											"end": 7504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7469,
											"end": 7508,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7469,
											"end": 7508,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7469,
											"end": 7508,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7469,
											"end": 7508,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7484,
											"end": 7490,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6605,
											"end": 7539,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6605,
											"end": 7539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7728,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 7544,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7614,
											"end": 7620,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7667,
											"end": 7669,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7655,
											"end": 7664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 7653,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7642,
											"end": 7665,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7638,
											"end": 7670,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7635,
											"end": 7687,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7635,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 7635,
											"end": 7687,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 7684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7680,
											"end": 7681,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 7685,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7635,
											"end": 7687,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 7635,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7943,
											"end": 8214,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 7943,
											"end": 8214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8126,
											"end": 8132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8118,
											"end": 8124,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8100,
											"end": 8133,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 8082,
											"end": 8085,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8152,
											"end": 8168,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8168,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8168,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7943,
											"end": 8214,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7943,
											"end": 8214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 8694,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 8219,
											"end": 8694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8456,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8448,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8432,
											"end": 8457,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8493,
											"end": 8495,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8488,
											"end": 8490,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8473,
											"end": 8491,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8466,
											"end": 8496,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8413,
											"end": 8417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8519,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 8576,
											"end": 8578,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8565,
											"end": 8574,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8553,
											"end": 8559,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8545,
											"end": 8551,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8519,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 8519,
											"end": 8580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8519,
											"end": 8580,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 8519,
											"end": 8580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8628,
											"end": 8637,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8626,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8616,
											"end": 8638,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8611,
											"end": 8613,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8600,
											"end": 8609,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8614,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8639,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8656,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 8681,
											"end": 8687,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8673,
											"end": 8679,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8656,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 8656,
											"end": 8688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/Contract Architecture/Core Infrastructure/UserVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approveAndCall(address,address,uint256,address,bytes)": "103657e7",
							"approveERC20(address,address,uint256)": "a8e5e4aa",
							"depositETH()": "f6326fb3",
							"emergencyWithdrawERC20(address)": "40c442de",
							"emergencyWithdrawETH()": "84536017",
							"executeCall(address,uint256,bytes)": "9e5d4c49",
							"executorWhitelist(address)": "54ba7696",
							"initialize(address)": "c4d66de8",
							"isInitialized()": "392e53cd",
							"notifyERC20Deposit(address,uint256)": "f32f1864",
							"owner()": "8da5cb5b",
							"setExecutorAllowed(address,bool)": "68fec4da",
							"withdrawERC20(address,address,uint256)": "44004cc1",
							"withdrawETH(address,uint256)": "4782f779"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Withdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ETHReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ETHWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"name\":\"ExecutedCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"ExecutorWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"emergencyWithdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"executorWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"notifyERC20Deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setExecutorAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"executeCall(address,uint256,bytes)\":{\"details\":\"Must be called by owner or a whitelisted executor. Returns raw call return data.         Use with caution \\u2014 giving an executor this ability is equivalent to giving control         of the vault's funds to that executor.\",\"params\":{\"data\":\"Calldata to send.\",\"target\":\"The destination contract / address to call.\",\"value\":\"Amount of ETH to send with the call.\"},\"returns\":{\"result\":\"The returned data from the call.\"}},\"initialize(address)\":{\"details\":\"called by the clone right after creation\"}},\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyInitialized()\":[{\"notice\":\"Basic errors (cheaper than revert strings)\"}]},\"events\":{\"Initialized(address)\":{\"notice\":\"========== EVENTS ==========\"}},\"kind\":\"user\",\"methods\":{\"approveAndCall(address,address,uint256,address,bytes)\":{\"notice\":\"========== HELPERS ========== Approve then call helper (useful for DEX routing patterns)\"},\"approveERC20(address,address,uint256)\":{\"notice\":\"Owner can approve a spender for ERC20\"},\"depositETH()\":{\"notice\":\"Convenience deposit function (no-op besides event)\"},\"emergencyWithdrawERC20(address)\":{\"notice\":\"========== EMERGENCY ========== Emergency withdraw all ETH and tokens to owner (owner-only)\"},\"executeCall(address,uint256,bytes)\":{\"notice\":\"Execute arbitrary call from the vault.\"},\"executorWhitelist(address)\":{\"notice\":\"Optional: an address allowed to call executeCall on behalf of the owner (e.g., ActionExecutor)\"},\"initialize(address)\":{\"notice\":\"========== INITIALIZER ==========\"},\"isInitialized()\":{\"notice\":\"========== VIEW HELPERS ==========\"},\"notifyERC20Deposit(address,uint256)\":{\"notice\":\"Called by user (or any address) that transferred ERC20 tokens to vault via `transfer` Use only to emit an indexed event for offchain indexing systems.\"},\"owner()\":{\"notice\":\"========== OWNER VIEW ==========\"},\"setExecutorAllowed(address,bool)\":{\"notice\":\"========== EXECUTOR WHITELIST (optional) ========== Add/remove an offchain/executor address allowed to call executeCall\"},\"withdrawERC20(address,address,uint256)\":{\"notice\":\"Owner-only withdraw ERC20\"},\"withdrawETH(address,uint256)\":{\"notice\":\"========== WITHDRAWALS ========== Owner-only withdraw ETH\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Core Infrastructure/UserVault.sol\":\"UserVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/Contract Architecture/Core Infrastructure/UserVault.sol\":{\"keccak256\":\"0xcca8eb5db2ff20a25140cac4fd7f47068574362da8d74b1de5dc65fbede3bc4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d075e1cf7599f8f0d07f10886c10bbd84d265cbdd79d21b2f21b10f8a2769f7\",\"dweb:/ipfs/QmPHFmSn4o1P2kt52GGRPaiDNv3wtwF4t2qHsVKdHVUhVx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 669,
								"contract": "src/Contract Architecture/Core Infrastructure/UserVault.sol:UserVault",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 672,
								"contract": "src/Contract Architecture/Core Infrastructure/UserVault.sol:UserVault",
								"label": "_initialized",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 677,
								"contract": "src/Contract Architecture/Core Infrastructure/UserVault.sol:UserVault",
								"label": "executorWhitelist",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"errors": {
							"AlreadyInitialized()": [
								{
									"notice": "Basic errors (cheaper than revert strings)"
								}
							]
						},
						"events": {
							"Initialized(address)": {
								"notice": "========== EVENTS =========="
							}
						},
						"kind": "user",
						"methods": {
							"approveAndCall(address,address,uint256,address,bytes)": {
								"notice": "========== HELPERS ========== Approve then call helper (useful for DEX routing patterns)"
							},
							"approveERC20(address,address,uint256)": {
								"notice": "Owner can approve a spender for ERC20"
							},
							"depositETH()": {
								"notice": "Convenience deposit function (no-op besides event)"
							},
							"emergencyWithdrawERC20(address)": {
								"notice": "========== EMERGENCY ========== Emergency withdraw all ETH and tokens to owner (owner-only)"
							},
							"executeCall(address,uint256,bytes)": {
								"notice": "Execute arbitrary call from the vault."
							},
							"executorWhitelist(address)": {
								"notice": "Optional: an address allowed to call executeCall on behalf of the owner (e.g., ActionExecutor)"
							},
							"initialize(address)": {
								"notice": "========== INITIALIZER =========="
							},
							"isInitialized()": {
								"notice": "========== VIEW HELPERS =========="
							},
							"notifyERC20Deposit(address,uint256)": {
								"notice": "Called by user (or any address) that transferred ERC20 tokens to vault via `transfer` Use only to emit an indexed event for offchain indexing systems."
							},
							"owner()": {
								"notice": "========== OWNER VIEW =========="
							},
							"setExecutorAllowed(address,bool)": {
								"notice": "========== EXECUTOR WHITELIST (optional) ========== Add/remove an offchain/executor address allowed to call executeCall"
							},
							"withdrawERC20(address,address,uint256)": {
								"notice": "Owner-only withdraw ERC20"
							},
							"withdrawETH(address,uint256)": {
								"notice": "========== WITHDRAWALS ========== Owner-only withdraw ETH"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							643
						],
						"IERC20": [
							167
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 643,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 643,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								643,
								167
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							643
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 644,
							"src": "133:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 643,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 168,
							"src": "132:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "140:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167
							],
							"name": "IERC20",
							"nameLocation": "215:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 101,
									"name": "Transfer",
									"nameLocation": "397:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "406:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "428:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "448:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:3"
									},
									"src": "391:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 110,
									"name": "Approval",
									"nameLocation": "628:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "637:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "660:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "685:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:3"
									},
									"src": "622:78:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:3"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "822:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:3"
									},
									"scope": 167,
									"src": "776:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:3"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "972:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:3"
									},
									"scope": 167,
									"src": "913:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1223:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1235:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:3"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 167,
									"src": "1205:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 167,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2327:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:3"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2377:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:3"
									},
									"scope": 167,
									"src": "2310:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2713:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2727:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2739:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:3"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2772:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:3"
									},
									"scope": 167,
									"src": "2691:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 168,
							"src": "205:2575:3",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "106:2675:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							631
						]
					},
					"id": 632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 168,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 82,
							"src": "179:58:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 172,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 174,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 631,
							"linearizedBaseContracts": [
								631
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:4",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 179,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "823:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:4"
									},
									"src": "792:46:4"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 188,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "959:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "976:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1002:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:4"
									},
									"src": "920:109:4"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1291:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1321:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 203,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "1343:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "1343:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 205,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 194,
																			"src": "1360:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 206,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 196,
																			"src": "1364:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 207,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 201,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 199,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1301:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:4"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1241:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 190,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1241:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1241:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1255:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1267:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:4"
									},
									"scope": 631,
									"src": "1219:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1708:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1738:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 229,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "1760:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "1760:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 231,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "1781:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 232,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "1787:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 233,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "1791:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 234,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 227,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 225,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1718:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:4"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1644:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 214,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1644:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1644:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1658:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1672:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:4"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:4"
									},
									"scope": 631,
									"src": "1618:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2033:99:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2074:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 256,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "2096:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "2096:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 258,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 245,
																			"src": "2113:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 259,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2117:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 260,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 254,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 252,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2050:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 251,
												"id": 263,
												"nodeType": "Return",
												"src": "2043:82:4"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:4",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1968:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 241,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1968:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1968:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1982:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1994:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:4"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2027:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:4"
									},
									"scope": 631,
									"src": "1943:189:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "2381:109:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 281,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2422:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 284,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "2444:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "2444:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 286,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "2465:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 287,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 273,
																			"src": "2471:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 288,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "2475:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 289,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 282,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 280,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2398:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 279,
												"id": 292,
												"nodeType": "Return",
												"src": "2391:92:4"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:4",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2302:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 268,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 267,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "2302:6:4"
													},
													"referencedDeclaration": 167,
													"src": "2302:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2316:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2330:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:4"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 631,
									"src": "2273:217:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3232:139:4",
										"statements": [
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 324,
														"src": "3242:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 311,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$631",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$631",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 309,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "3296:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 307,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3265:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "3265:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 317,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3327:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 318,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "3334:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 319,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "3343:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 320,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "3358:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 316,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3314:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:4"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3177:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 297,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 296,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "3177:6:4"
													},
													"referencedDeclaration": 167,
													"src": "3177:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3191:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3208:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:4"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:4"
									},
									"scope": 631,
									"src": "3146:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "4137:370:4",
										"statements": [
											{
												"id": 366,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:4",
												"statements": [
													{
														"assignments": [
															337
														],
														"declarations": [
															{
																"constant": false,
																"id": 337,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 366,
																"src": "4171:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 336,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 346,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 342,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$631",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$631",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 340,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 344,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4229:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 338,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4198:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 144,
																"src": "4198:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 347,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "4255:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 348,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4274:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 357,
														"nodeType": "IfStatement",
														"src": "4251:160:4",
														"trueBody": {
															"id": 356,
															"nodeType": "Block",
															"src": "4293:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 351,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 331,
																				"src": "4351:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 352,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 337,
																				"src": "4360:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 353,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 333,
																				"src": "4378:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 350,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 188,
																			"src": "4318:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 355,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 359,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4437:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 360,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4444:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 361,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "4453:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 362,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "4472:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 358,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "4424:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 365,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4070:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 328,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 327,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "4070:6:4"
													},
													"referencedDeclaration": 167,
													"src": "4070:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4084:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4101:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:4"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:4"
									},
									"scope": 631,
									"src": "4039:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "5161:303:4",
										"statements": [
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "5171:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 383,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5214:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "5214:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 385,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "5230:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 386,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "5239:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 387,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 381,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:4"
											},
											{
												"condition": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 391,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5286:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 392,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "5293:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 390,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5262:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 413,
												"nodeType": "IfStatement",
												"src": "5257:201:4",
												"trueBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "5308:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 396,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "5342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 399,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 372,
																					"src": "5364:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$167",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 154,
																				"src": "5364:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 401,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 374,
																						"src": "5380:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 402,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 403,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 397,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 395,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5322:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 406,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 408,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "5427:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 409,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 380,
																		"src": "5434:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 407,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5407:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 411,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5106:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 371,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 370,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "5106:6:4"
													},
													"referencedDeclaration": 167,
													"src": "5106:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5120:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5137:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:4"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:4"
									},
									"scope": 631,
									"src": "5084:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "5911:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 428,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "5925:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 442,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "6034:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 443,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "6038:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 444,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "6045:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6012:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:4",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "6012:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 455,
													"nodeType": "IfStatement",
													"src": "6007:117:4",
													"trueBody": {
														"id": 454,
														"nodeType": "Block",
														"src": "6052:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 450,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 419,
																					"src": "6106:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 448,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 447,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "6073:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 453,
																"nodeType": "RevertStatement",
																"src": "6066:47:4"
															}
														]
													}
												},
												"id": 456,
												"nodeType": "IfStatement",
												"src": "5921:203:4",
												"trueBody": {
													"id": 439,
													"nodeType": "Block",
													"src": "5946:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 434,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "5973:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 435,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "5980:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 436,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "5984:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 433,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "5960:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 438,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:4",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5840:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 417,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5840:8:4"
													},
													"referencedDeclaration": 81,
													"src": "5840:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5856:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5883:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 424,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:4"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:4"
									},
									"scope": 631,
									"src": "5808:322:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "6649:239:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 473,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "6663:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 488,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "6786:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 489,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "6792:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 490,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "6796:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 491,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "6803:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "6760:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:4",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6760:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 502,
													"nodeType": "IfStatement",
													"src": "6755:127:4",
													"trueBody": {
														"id": 501,
														"nodeType": "Block",
														"src": "6810:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 497,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 462,
																					"src": "6864:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 495,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 494,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "6831:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 500,
																"nodeType": "RevertStatement",
																"src": "6824:47:4"
															}
														]
													}
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "6659:223:4",
												"trueBody": {
													"id": 485,
													"nodeType": "Block",
													"src": "6684:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 479,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "6715:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 480,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "6722:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 481,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "6728:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 482,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "6732:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 478,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6698:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 484,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:4",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6527:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 460,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6527:8:4"
													},
													"referencedDeclaration": 81,
													"src": "6527:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6551:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6573:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6593:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:4"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:4"
									},
									"scope": 631,
									"src": "6482:406:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "7655:218:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 518,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "7669:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 532,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "7777:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 533,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "7781:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 534,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "7788:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 530,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "7756:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:4",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7756:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 545,
													"nodeType": "IfStatement",
													"src": "7751:116:4",
													"trueBody": {
														"id": 544,
														"nodeType": "Block",
														"src": "7795:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 540,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 509,
																					"src": "7849:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 538,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 537,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "7816:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 543,
																"nodeType": "RevertStatement",
																"src": "7809:47:4"
															}
														]
													}
												},
												"id": 546,
												"nodeType": "IfStatement",
												"src": "7665:202:4",
												"trueBody": {
													"id": 529,
													"nodeType": "Block",
													"src": "7690:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 524,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "7717:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 525,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "7724:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 526,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "7728:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 523,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "7704:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 528,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:4",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7584:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 507,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "7584:8:4"
													},
													"referencedDeclaration": 81,
													"src": "7584:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7600:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7612:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7627:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:4"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:4"
									},
									"scope": 631,
									"src": "7553:320:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "8440:650:4",
										"statements": [
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "8450:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 559,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:4"
											},
											{
												"assignments": [
													561
												],
												"declarations": [
													{
														"constant": false,
														"id": 561,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "8478:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 560,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 562,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:4"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:4",
													"nodeType": "YulBlock",
													"src": "8532:396:4",
													"statements": [
														{
															"nativeSrc": "8546:75:4",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:4"
																		},
																		"nativeSrc": "8566:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:4",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:4"
																		},
																		"nativeSrc": "8583:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:4"
																		},
																		"nativeSrc": "8600:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:4"
																},
																"nativeSrc": "8561:60:4",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:4"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:4",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:4",
																"nodeType": "YulBlock",
																"src": "8682:157:4",
																"statements": [
																	{
																		"nativeSrc": "8700:22:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:4",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:4",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:4"
																			},
																			"nativeSrc": "8711:11:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:4"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:4",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:4",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:4"
																					},
																					"nativeSrc": "8762:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:4",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:4"
																			},
																			"nativeSrc": "8739:40:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:4"
																		},
																		"nativeSrc": "8739:40:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:4"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:4"
																					},
																					"nativeSrc": "8808:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:4"
																			},
																			"nativeSrc": "8796:29:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:4"
																		},
																		"nativeSrc": "8796:29:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:4"
																},
																"nativeSrc": "8666:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:4"
															},
															"nativeSrc": "8663:176:4",
															"nodeType": "YulIf",
															"src": "8663:176:4"
														},
														{
															"nativeSrc": "8852:30:4",
															"nodeType": "YulAssignment",
															"src": "8852:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:4"
																},
																"nativeSrc": "8866:16:4",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:4"
																}
															]
														},
														{
															"nativeSrc": "8895:23:4",
															"nodeType": "YulAssignment",
															"src": "8895:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:4"
																},
																"nativeSrc": "8910:8:4",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:4",
														"valueSize": 1
													},
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:4",
														"valueSize": 1
													},
													{
														"declaration": 558,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:4",
														"valueSize": 1
													},
													{
														"declaration": 561,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:4",
														"valueSize": 1
													},
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 563,
												"nodeType": "InlineAssembly",
												"src": "8507:421:4"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 564,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "8942:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 575,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "8994:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:4",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 569,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 552,
																			"src": "8968:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 567,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "8938:146:4",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "9012:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 582,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 552,
																				"src": "9066:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 580,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 579,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "9033:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 585,
															"nodeType": "RevertStatement",
															"src": "9026:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8399:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 551,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 550,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "8399:6:4"
													},
													"referencedDeclaration": 167,
													"src": "8399:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8413:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:4"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:4"
									},
									"scope": 631,
									"src": "8370:720:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "9681:391:4",
										"statements": [
											{
												"assignments": [
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9691:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 600,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:4"
											},
											{
												"assignments": [
													604
												],
												"declarations": [
													{
														"constant": false,
														"id": 604,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9713:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 603,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:4"
											},
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9741:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 608,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:4"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:4",
													"nodeType": "YulBlock",
													"src": "9795:174:4",
													"statements": [
														{
															"nativeSrc": "9809:71:4",
															"nodeType": "YulAssignment",
															"src": "9809:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:4"
																		},
																		"nativeSrc": "9825:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:4",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:4"
																		},
																		"nativeSrc": "9842:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:4"
																		},
																		"nativeSrc": "9859:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:4"
																},
																"nativeSrc": "9820:60:4",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:4"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:4"
																}
															]
														},
														{
															"nativeSrc": "9893:30:4",
															"nodeType": "YulAssignment",
															"src": "9893:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:4"
																},
																"nativeSrc": "9907:16:4",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:4"
																}
															]
														},
														{
															"nativeSrc": "9936:23:4",
															"nodeType": "YulAssignment",
															"src": "9936:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:4"
																},
																"nativeSrc": "9951:8:4",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 595,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:4",
														"valueSize": 1
													},
													{
														"declaration": 595,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:4",
														"valueSize": 1
													},
													{
														"declaration": 604,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:4",
														"valueSize": 1
													},
													{
														"declaration": 607,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:4",
														"valueSize": 1
													},
													{
														"declaration": 601,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:4",
														"valueSize": 1
													},
													{
														"declaration": 593,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 609,
												"nodeType": "InlineAssembly",
												"src": "9770:199:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 610,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "9985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 611,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "9997:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 622,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "10048:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:4",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 616,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 593,
																						"src": "10023:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 615,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 614,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 626,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 599,
												"id": 628,
												"nodeType": "Return",
												"src": "9978:87:4"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9625:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 591,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "9625:6:4"
													},
													"referencedDeclaration": 167,
													"src": "9625:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9639:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:4"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9675:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:4"
									},
									"scope": 631,
									"src": "9592:480:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 632,
							"src": "698:9376:4",
							"usedErrors": [
								179,
								188
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							643
						]
					},
					"id": 644,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 633,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 634,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:5",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 643,
							"linearizedBaseContracts": [
								643
							],
							"name": "IERC165",
							"nameLocation": "433:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "819:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 636,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:5"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "862:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:5"
									},
									"scope": 643,
									"src": "792:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 644,
							"src": "423:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:5"
				},
				"id": 5
			},
			"src/Contract Architecture/Core Infrastructure/UserVault.sol": {
				"ast": {
					"absolutePath": "src/Contract Architecture/Core Infrastructure/UserVault.sol",
					"exportedSymbols": {
						"AlreadyInitialized": [
							652
						],
						"IERC20": [
							167
						],
						"InvalidTarget": [
							662
						],
						"NotOwner": [
							654
						],
						"NotWhitelistedCaller": [
							660
						],
						"SafeERC20": [
							631
						],
						"TransferFailed": [
							658
						],
						"UserVault": [
							1193
						],
						"ZeroAddress": [
							656
						]
					},
					"id": 1194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 645,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 647,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1194,
							"sourceUnit": 168,
							"src": "623:72:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 646,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "632:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 649,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1194,
							"sourceUnit": 632,
							"src": "696:84:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 648,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 631,
										"src": "705:9:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"documentation": {
								"id": 650,
								"nodeType": "StructuredDocumentation",
								"src": "782:47:6",
								"text": "Basic errors (cheaper than revert strings)"
							},
							"errorSelector": "0dc149f0",
							"id": 652,
							"name": "AlreadyInitialized",
							"nameLocation": "835:18:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 651,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "853:2:6"
							},
							"src": "829:27:6"
						},
						{
							"errorSelector": "30cd7471",
							"id": 654,
							"name": "NotOwner",
							"nameLocation": "863:8:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 653,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "871:2:6"
							},
							"src": "857:17:6"
						},
						{
							"errorSelector": "d92e233d",
							"id": 656,
							"name": "ZeroAddress",
							"nameLocation": "881:11:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 655,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "892:2:6"
							},
							"src": "875:20:6"
						},
						{
							"errorSelector": "90b8ec18",
							"id": 658,
							"name": "TransferFailed",
							"nameLocation": "902:14:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 657,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "916:2:6"
							},
							"src": "896:23:6"
						},
						{
							"errorSelector": "5f3122fb",
							"id": 660,
							"name": "NotWhitelistedCaller",
							"nameLocation": "926:20:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 659,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "946:2:6"
							},
							"src": "920:29:6"
						},
						{
							"errorSelector": "82d5d76a",
							"id": 662,
							"name": "InvalidTarget",
							"nameLocation": "956:13:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 661,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "969:2:6"
							},
							"src": "950:22:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UserVault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1193,
							"linearizedBaseContracts": [
								1193
							],
							"name": "UserVault",
							"nameLocation": "983:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 666,
									"libraryName": {
										"id": 663,
										"name": "SafeERC20",
										"nameLocations": [
											"1005:9:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 631,
										"src": "1005:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "999:27:6",
									"typeName": {
										"id": 665,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 664,
											"name": "IERC20",
											"nameLocations": [
												"1019:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 167,
											"src": "1019:6:6"
										},
										"referencedDeclaration": 167,
										"src": "1019:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$167",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "1032:34:6",
										"text": "@notice Vault owner (the user)"
									},
									"id": 669,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1087:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1071:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 668,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1071:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "1100:46:6",
										"text": "@notice Whether initialize has been called"
									},
									"id": 672,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "1164:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1151:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 671,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1151:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "1183:106:6",
										"text": "@notice Optional: an address allowed to call executeCall on behalf of the owner (e.g., ActionExecutor)"
									},
									"functionSelector": "54ba7696",
									"id": 677,
									"mutability": "mutable",
									"name": "executorWhitelist",
									"nameLocation": "1326:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1294:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 676,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 674,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1302:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1294:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 675,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1313:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "1350:32:6",
										"text": "========== EVENTS =========="
									},
									"eventSelector": "908408e307fc569b417f6cbec5d5a06f44a0a505ac0479b47d421a4b2fd6a1e6",
									"id": 682,
									"name": "Initialized",
									"nameLocation": "1393:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1421:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1405:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1404:23:6"
									},
									"src": "1387:41:6"
								},
								{
									"anonymous": false,
									"eventSelector": "bfe611b001dfcd411432f7bf0d79b82b4b2ee81511edac123a3403c357fb972a",
									"id": 688,
									"name": "ETHReceived",
									"nameLocation": "1439:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1467:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "1451:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1481:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "1473:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1450:38:6"
									},
									"src": "1433:56:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e33e9822e3317b004d587136bab2627ea1ecfbba4eb79abddd0a56cfdd09c0e1",
									"id": 696,
									"name": "ERC20Deposited",
									"nameLocation": "1500:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1531:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1515:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1554:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1538:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1568:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1560:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1514:61:6"
									},
									"src": "1494:82:6"
								},
								{
									"anonymous": false,
									"eventSelector": "94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c",
									"id": 702,
									"name": "ETHWithdrawn",
									"nameLocation": "1587:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1616:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "1600:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1628:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "1620:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1620:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1599:36:6"
									},
									"src": "1581:55:6"
								},
								{
									"anonymous": false,
									"eventSelector": "bfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b1025362",
									"id": 710,
									"name": "ERC20Withdrawn",
									"nameLocation": "1647:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1678:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1662:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1701:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1685:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1685:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1713:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1705:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:59:6"
									},
									"src": "1641:80:6"
								},
								{
									"anonymous": false,
									"eventSelector": "19f4c310cf148369e5605e8f3538cee4d3495da0612c9a45c0b89105ed6fee4d",
									"id": 716,
									"name": "ExecutorWhitelisted",
									"nameLocation": "1732:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"indexed": true,
												"mutability": "mutable",
												"name": "executor",
												"nameLocation": "1768:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1752:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"indexed": false,
												"mutability": "mutable",
												"name": "allowed",
												"nameLocation": "1783:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1778:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1778:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:40:6"
									},
									"src": "1726:66:6"
								},
								{
									"anonymous": false,
									"eventSelector": "335a1fecd5558554165c05171954925d0d97911ad1d259ef6bb18eb2c07a58aa",
									"id": 728,
									"name": "ExecutedCall",
									"nameLocation": "1803:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "1832:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1816:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1816:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1856:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1840:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1872:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1864:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1864:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1885:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1879:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1879:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"indexed": false,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1897:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1891:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 725,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1891:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1815:89:6"
									},
									"src": "1797:108:6"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "1972:71:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 731,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1986:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1990:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1986:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 733,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2000:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1986:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "1982:43:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 735,
															"name": "NotOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "2015:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 737,
													"nodeType": "RevertStatement",
													"src": "2008:17:6"
												}
											},
											{
												"id": 739,
												"nodeType": "PlaceholderStatement",
												"src": "2035:1:6"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "1911:35:6",
										"text": "========== MODIFIERS =========="
									},
									"id": 741,
									"name": "onlyOwner",
									"nameLocation": "1960:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1969:2:6"
									},
									"src": "1951:92:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "2080:105:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 743,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2094:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2098:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2094:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 745,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "2108:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2094:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "2118:30:6",
														"subExpression": {
															"baseExpression": {
																"id": 747,
																"name": "executorWhitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "2119:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 750,
															"indexExpression": {
																"expression": {
																	"id": 748,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2137:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2141:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2137:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2119:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2094:54:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 756,
												"nodeType": "IfStatement",
												"src": "2090:77:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 753,
															"name": "NotOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "2157:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2157:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 755,
													"nodeType": "RevertStatement",
													"src": "2150:17:6"
												}
											},
											{
												"id": 757,
												"nodeType": "PlaceholderStatement",
												"src": "2177:1:6"
											}
										]
									},
									"id": 759,
									"name": "onlyOwnerOrExecutor",
									"nameLocation": "2058:19:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2077:2:6"
									},
									"src": "2049:136:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "2332:208:6",
										"statements": [
											{
												"condition": {
													"id": 765,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 672,
													"src": "2346:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 769,
												"nodeType": "IfStatement",
												"src": "2342:45:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 766,
															"name": "AlreadyInitialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "2367:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2367:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 768,
													"nodeType": "RevertStatement",
													"src": "2360:27:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "2401:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2419:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2411:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2411:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2411:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2401:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 779,
												"nodeType": "IfStatement",
												"src": "2397:46:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 776,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "2430:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2430:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 778,
													"nodeType": "RevertStatement",
													"src": "2423:20:6"
												}
											},
											{
												"expression": {
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 780,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2454:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 781,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "2463:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2454:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "2454:15:6"
											},
											{
												"expression": {
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 784,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2479:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2494:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2479:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "2479:19:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 789,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "2526:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 788,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "2514:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2514:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "EmitStatement",
												"src": "2509:24:6"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "2191:91:6",
										"text": "========== INITIALIZER ==========\n @dev called by the clone right after creation"
									},
									"functionSelector": "c4d66de8",
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "2296:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "2315:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2307:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2307:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2306:16:6"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2332:0:6"
									},
									"scope": 1193,
									"src": "2287:253:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "2636:30:6",
										"statements": [
											{
												"expression": {
													"id": 799,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 669,
													"src": "2653:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 798,
												"id": 800,
												"nodeType": "Return",
												"src": "2646:13:6"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "2546:36:6",
										"text": "========== OWNER VIEW =========="
									},
									"functionSelector": "8da5cb5b",
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2596:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2601:2:6"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "2627:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2626:9:6"
									},
									"scope": 1193,
									"src": "2587:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "2757:56:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 807,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2784:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2788:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2784:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 809,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2796:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2800:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2796:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "ETHReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "2772:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2772:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "EmitStatement",
												"src": "2767:39:6"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "2672:53:6",
										"text": "========== DEPOSITS ==========\n Accept ETH"
									},
									"id": 814,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2737:2:6"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2757:0:6"
									},
									"scope": 1193,
									"src": "2730:83:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "2917:56:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 819,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2944:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2948:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2944:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 821,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2956:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2960:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2956:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "ETHReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "2932:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2932:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "EmitStatement",
												"src": "2927:39:6"
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "2819:54:6",
										"text": "Convenience deposit function (no-op besides event)"
									},
									"functionSelector": "f6326fb3",
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositETH",
									"nameLocation": "2887:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2897:2:6"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2917:0:6"
									},
									"scope": 1193,
									"src": "2878:95:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "3214:118:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 834,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "3228:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3245:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3237:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 835,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3237:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3237:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3228:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 843,
												"nodeType": "IfStatement",
												"src": "3224:45:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 840,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3256:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3256:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 842,
													"nodeType": "RevertStatement",
													"src": "3249:20:6"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 845,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "3299:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 846,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3306:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3310:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3306:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "3318:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 844,
														"name": "ERC20Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "3284:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3284:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "EmitStatement",
												"src": "3279:46:6"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "2979:162:6",
										"text": "Called by user (or any address) that transferred ERC20 tokens to vault via `transfer`\n Use only to emit an indexed event for offchain indexing systems."
									},
									"functionSelector": "f32f1864",
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notifyERC20Deposit",
									"nameLocation": "3155:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3182:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "3174:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3174:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3197:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "3189:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3189:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3173:31:6"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3214:0:6"
									},
									"scope": 1193,
									"src": "3146:186:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "3488:190:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "3502:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3516:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3508:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3508:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3508:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3502:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 871,
												"nodeType": "IfStatement",
												"src": "3498:42:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 868,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3527:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3527:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 870,
													"nodeType": "RevertStatement",
													"src": "3520:20:6"
												}
											},
											{
												"assignments": [
													873,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 873,
														"mutability": "mutable",
														"name": "ok",
														"nameLocation": "3556:2:6",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "3551:7:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 872,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3551:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 880,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3587:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 874,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "3564:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3567:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3564:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 876,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "3579:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3564:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3564:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3550:40:6"
											},
											{
												"condition": {
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3604:3:6",
													"subExpression": {
														"id": 881,
														"name": "ok",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "3605:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 886,
												"nodeType": "IfStatement",
												"src": "3600:32:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 883,
															"name": "TransferFailed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "3616:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3616:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 885,
													"nodeType": "RevertStatement",
													"src": "3609:23:6"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 888,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "3660:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 889,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "3664:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 887,
														"name": "ETHWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3647:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3647:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "EmitStatement",
												"src": "3642:29:6"
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "3338:69:6",
										"text": "========== WITHDRAWALS ==========\n Owner-only withdraw ETH"
									},
									"functionSelector": "4782f779",
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 860,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 859,
												"name": "onlyOwner",
												"nameLocations": [
													"3478:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 741,
												"src": "3478:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3478:9:6"
										}
									],
									"name": "withdrawETH",
									"nameLocation": "3421:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3449:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3433:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3433:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3461:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3453:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3432:36:6"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3488:0:6"
									},
									"scope": 1193,
									"src": "3412:266:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "3833:178:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 905,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "3847:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3864:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3856:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 906,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3856:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3856:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3847:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 911,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "3870:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3884:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3876:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 912,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3876:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3876:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3870:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3847:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 921,
												"nodeType": "IfStatement",
												"src": "3843:65:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 918,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3895:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3895:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 920,
													"nodeType": "RevertStatement",
													"src": "3888:20:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "3945:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "3949:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 923,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "3925:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 922,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "3918:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3918:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3932:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "3918:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3918:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "3918:38:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 931,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "3986:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 932,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "3993:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "3997:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 930,
														"name": "ERC20Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "3971:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3971:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "EmitStatement",
												"src": "3966:38:6"
											}
										]
									},
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "3684:29:6",
										"text": "Owner-only withdraw ERC20"
									},
									"functionSelector": "44004cc1",
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 903,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 902,
												"name": "onlyOwner",
												"nameLocations": [
													"3823:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 741,
												"src": "3823:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3823:9:6"
										}
									],
									"name": "withdrawERC20",
									"nameLocation": "3727:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3758:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "3750:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3750:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3781:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "3773:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3773:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3801:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "3793:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3793:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3740:73:6"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3833:0:6"
									},
									"scope": 1193,
									"src": "3718:293:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "4182:198:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 949,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "4196:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4213:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4205:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4205:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4205:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4196:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 955,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "4219:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4238:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4230:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 956,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4230:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4230:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4219:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4196:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 965,
												"nodeType": "IfStatement",
												"src": "4192:70:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 962,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "4249:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4249:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 964,
													"nodeType": "RevertStatement",
													"src": "4242:20:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 970,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "4294:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "4303:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 967,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "4279:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 966,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "4272:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4272:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4286:7:6",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 154,
														"src": "4272:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "4272:38:6"
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "4017:41:6",
										"text": "Owner can approve a spender for ERC20"
									},
									"functionSelector": "a8e5e4aa",
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 947,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 946,
												"name": "onlyOwner",
												"nameLocations": [
													"4172:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 741,
												"src": "4172:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4172:9:6"
										}
									],
									"name": "approveERC20",
									"nameLocation": "4072:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4102:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4094:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4094:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4125:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4117:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4117:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4150:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4142:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4142:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4084:78:6"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4182:0:6"
									},
									"scope": 1193,
									"src": "4063:317:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "4601:165:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 985,
														"name": "executor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "4615:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4635:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4627:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 986,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4627:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4627:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4615:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "4611:48:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 991,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "4646:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4646:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 993,
													"nodeType": "RevertStatement",
													"src": "4639:20:6"
												}
											},
											{
												"expression": {
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 995,
															"name": "executorWhitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "4669:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 997,
														"indexExpression": {
															"id": 996,
															"name": "executor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "4687:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4669:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 998,
														"name": "allowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4699:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4669:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "4669:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1002,
															"name": "executor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "4741:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "4751:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1001,
														"name": "ExecutorWhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "4721:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4721:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "EmitStatement",
												"src": "4716:43:6"
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "4386:131:6",
										"text": "========== EXECUTOR WHITELIST (optional) ==========\n Add/remove an offchain/executor address allowed to call executeCall"
									},
									"functionSelector": "68fec4da",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 983,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 982,
												"name": "onlyOwner",
												"nameLocations": [
													"4591:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 741,
												"src": "4591:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4591:9:6"
										}
									],
									"name": "setExecutorAllowed",
									"nameLocation": "4531:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "executor",
												"nameLocation": "4558:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4550:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4550:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "allowed",
												"nameLocation": "4573:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4568:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 979,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4568:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:32:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4601:0:6"
									},
									"scope": 1193,
									"src": "4522:244:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "5554:605:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1021,
														"name": "target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "5568:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5586:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5578:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1022,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5578:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5578:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5568:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "5564:48:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1027,
															"name": "InvalidTarget",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "5597:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5597:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1029,
													"nodeType": "RevertStatement",
													"src": "5590:22:6"
												}
											},
											{
												"assignments": [
													1032,
													1034
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "ok",
														"nameLocation": "5688:2:6",
														"nodeType": "VariableDeclaration",
														"scope": 1067,
														"src": "5683:7:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1031,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5683:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1034,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "5705:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1067,
														"src": "5692:16:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1033,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5692:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1039,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "5738:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"expression": {
																"id": 1035,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "5712:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5719:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5712:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1037,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "5731:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5712:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5712:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5682:61:6"
											},
											{
												"condition": {
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5757:3:6",
													"subExpression": {
														"id": 1042,
														"name": "ok",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "5758:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1055,
												"nodeType": "IfStatement",
												"src": "5753:314:6",
												"trueBody": {
													"id": 1054,
													"nodeType": "Block",
													"src": "5762:305:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1044,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1034,
																		"src": "5827:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5831:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5827:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5840:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5827:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1050,
															"nodeType": "IfStatement",
															"src": "5823:197:6",
															"trueBody": {
																"id": 1049,
																"nodeType": "Block",
																"src": "5843:177:6",
																"statements": [
																	{
																		"AST": {
																			"nativeSrc": "5934:72:6",
																			"nodeType": "YulBlock",
																			"src": "5934:72:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "5967:2:6",
																										"nodeType": "YulLiteral",
																										"src": "5967:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "res",
																										"nativeSrc": "5971:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "5971:3:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5963:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "5963:3:6"
																								},
																								"nativeSrc": "5963:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5963:12:6"
																							},
																							{
																								"arguments": [
																									{
																										"name": "res",
																										"nativeSrc": "5983:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "5983:3:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5977:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5977:5:6"
																								},
																								"nativeSrc": "5977:10:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5977:10:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "5956:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "5956:6:6"
																						},
																						"nativeSrc": "5956:32:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5956:32:6"
																					},
																					"nativeSrc": "5956:32:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "5956:32:6"
																				}
																			]
																		},
																		"evmVersion": "cancun",
																		"externalReferences": [
																			{
																				"declaration": 1034,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5971:3:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1034,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5983:3:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1048,
																		"nodeType": "InlineAssembly",
																		"src": "5925:81:6"
																	}
																]
															}
														},
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1051,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "6040:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6040:16:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1053,
															"nodeType": "RevertStatement",
															"src": "6033:23:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1057,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6095:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6099:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6095:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1059,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6107:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "6115:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1061,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "6122:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 1062,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "6128:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1056,
														"name": "ExecutedCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "6082:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6082:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "EmitStatement",
												"src": "6077:55:6"
											},
											{
												"expression": {
													"id": 1065,
													"name": "res",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1034,
													"src": "6149:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1020,
												"id": 1066,
												"nodeType": "Return",
												"src": "6142:10:6"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "4848:539:6",
										"text": " @notice Execute arbitrary call from the vault.\n @dev    Must be called by owner or a whitelisted executor. Returns raw call return data.\n         Use with caution â€” giving an executor this ability is equivalent to giving control\n         of the vault's funds to that executor.\n @param target The destination contract / address to call.\n @param value  Amount of ETH to send with the call.\n @param data   Calldata to send.\n @return result The returned data from the call."
									},
									"functionSelector": "9e5d4c49",
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1017,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1016,
												"name": "onlyOwnerOrExecutor",
												"nameLocations": [
													"5504:19:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 759,
												"src": "5504:19:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5504:19:6"
										}
									],
									"name": "executeCall",
									"nameLocation": "5401:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5430:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "5422:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5422:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5454:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "5446:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5484:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "5469:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1013,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5469:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5412:82:6"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5546:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "5533:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1018,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5533:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5532:21:6"
									},
									"scope": 1193,
									"src": "5392:767:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "6453:93:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "6481:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1091,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "6490:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1087,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "6466:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1086,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "6459:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6459:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6473:7:6",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 154,
														"src": "6459:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6459:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "6459:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1096,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "6527:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6535:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1098,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "6538:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"id": 1094,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "6510:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_UserVault_$1193",
																"typeString": "contract UserVault"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6515:11:6",
														"memberName": "executeCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1068,
														"src": "6510:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,uint256,bytes memory) external returns (bytes memory)"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6510:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1085,
												"id": 1100,
												"nodeType": "Return",
												"src": "6503:40:6"
											}
										]
									},
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "6165:100:6",
										"text": "========== HELPERS ==========\n Approve then call helper (useful for DEX routing patterns)"
									},
									"functionSelector": "103657e7",
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1082,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1081,
												"name": "onlyOwnerOrExecutor",
												"nameLocations": [
													"6410:19:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 759,
												"src": "6410:19:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6410:19:6"
										}
									],
									"name": "approveAndCall",
									"nameLocation": "6279:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6307:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "6299:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6299:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6326:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "6318:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6318:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6347:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "6339:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6339:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6367:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "6359:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6394:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "6379:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1078,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6379:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:107:6"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "6439:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1083,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6439:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6438:14:6"
									},
									"scope": 1193,
									"src": "6270:276:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "6726:180:6",
										"statements": [
											{
												"assignments": [
													1111
												],
												"declarations": [
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "6744:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1140,
														"src": "6736:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6736:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1121,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1118,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6782:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UserVault_$1193",
																		"typeString": "contract UserVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UserVault_$1193",
																		"typeString": "contract UserVault"
																	}
																],
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6774:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1116,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6774:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6774:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1113,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "6757:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1112,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "6750:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6750:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6764:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "6750:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6750:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6736:52:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1122,
														"name": "bal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "6802:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6808:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6802:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1133,
												"nodeType": "IfStatement",
												"src": "6798:52:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 1129,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "6838:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1130,
																"name": "bal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "6846:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1126,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "6818:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1125,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6811:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6811:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6825:12:6",
															"memberName": "safeTransfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 212,
															"src": "6811:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
																"typeString": "function (contract IERC20,address,uint256)"
															}
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6811:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1132,
													"nodeType": "ExpressionStatement",
													"src": "6811:39:6"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1135,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "6880:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1136,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "6887:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "bal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "6895:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1134,
														"name": "ERC20Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "6865:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6865:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "EmitStatement",
												"src": "6860:39:6"
											}
										]
									},
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "6552:103:6",
										"text": "========== EMERGENCY ==========\n Emergency withdraw all ETH and tokens to owner (owner-only)"
									},
									"functionSelector": "40c442de",
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1108,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1107,
												"name": "onlyOwner",
												"nameLocations": [
													"6716:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 741,
												"src": "6716:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6716:9:6"
										}
									],
									"name": "emergencyWithdrawERC20",
									"nameLocation": "6669:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6700:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "6692:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6692:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6691:15:6"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6726:0:6"
									},
									"scope": 1193,
									"src": "6660:246:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "6963:239:6",
										"statements": [
											{
												"assignments": [
													1147
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "6981:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1182,
														"src": "6973:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6973:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1153,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1150,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "6995:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UserVault_$1193",
																	"typeString": "contract UserVault"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UserVault_$1193",
																	"typeString": "contract UserVault"
																}
															],
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6987:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1148,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6987:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6987:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7001:7:6",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "6987:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6973:35:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1154,
														"name": "bal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "7022:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7028:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7022:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1181,
												"nodeType": "IfStatement",
												"src": "7018:178:6",
												"trueBody": {
													"id": 1180,
													"nodeType": "Block",
													"src": "7031:165:6",
													"statements": [
														{
															"assignments": [
																1158,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1158,
																	"mutability": "mutable",
																	"name": "ok",
																	"nameLocation": "7051:2:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1180,
																	"src": "7046:7:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1157,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "7046:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1168,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7092:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1161,
																					"name": "_owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "7067:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1160,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7059:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 1159,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7059:8:6",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7059:15:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7075:4:6",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "7059:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1164,
																			"name": "bal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "7087:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "7059:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7059:36:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7045:50:6"
														},
														{
															"condition": {
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "7113:3:6",
																"subExpression": {
																	"id": 1169,
																	"name": "ok",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "7114:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1174,
															"nodeType": "IfStatement",
															"src": "7109:32:6",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1171,
																		"name": "TransferFailed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "7125:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7125:16:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1173,
																"nodeType": "RevertStatement",
																"src": "7118:23:6"
															}
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1176,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "7173:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1177,
																		"name": "bal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "7181:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1175,
																	"name": "ETHWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "7160:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7160:25:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1179,
															"nodeType": "EmitStatement",
															"src": "7155:30:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "84536017",
									"id": 1183,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1144,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1143,
												"name": "onlyOwner",
												"nameLocations": [
													"6953:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 741,
												"src": "6953:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6953:9:6"
										}
									],
									"name": "emergencyWithdrawETH",
									"nameLocation": "6921:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6941:2:6"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6963:0:6"
									},
									"scope": 1193,
									"src": "6912:290:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "7305:36:6",
										"statements": [
											{
												"expression": {
													"id": 1189,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 672,
													"src": "7322:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1188,
												"id": 1190,
												"nodeType": "Return",
												"src": "7315:19:6"
											}
										]
									},
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "7208:38:6",
										"text": "========== VIEW HELPERS =========="
									},
									"functionSelector": "392e53cd",
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isInitialized",
									"nameLocation": "7260:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7273:2:6"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "7299:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7299:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7298:6:6"
									},
									"scope": 1193,
									"src": "7251:90:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1194,
							"src": "974:6369:6",
							"usedErrors": [
								179,
								652,
								654,
								656,
								658,
								662
							],
							"usedEvents": [
								682,
								688,
								696,
								702,
								710,
								716,
								728
							]
						}
					],
					"src": "32:7312:6"
				},
				"id": 6
			}
		}
	}
}