{
	"id": "92aec8aaf8e42f159a191cdb9872d16b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/**\n * @title PortfolioViewer\n * @notice Read-only aggregator to fetch balances (ERC20 + native) across UserVaults\n *         and compute USD values via Chainlink price feeds (when configured).\n *\n * Conventions:\n *  - USD values are returned in 1e18 decimals (wei-like), regardless of the oracle's decimals.\n *  - If a token has no configured price feed, USD value will be 0.\n *\n * Admin:\n *  - Owner can set/update token -> price feed mapping and optional heartbeat limits.\n *  - Native token uses the sentinel address: address(0).\n */\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IERC20Metadata is IERC20 {\n    function decimals() external view returns (uint8);\n}\n\ninterface AggregatorV3Interface {\n    function latestRoundData()\n        external\n        view\n        returns (\n            uint80 roundId,\n            int256 answer,       // price\n            uint256 startedAt,\n            uint256 updatedAt,   // timestamp\n            uint80 answeredInRound\n        );\n\n    function decimals() external view returns (uint8);\n    function description() external view returns (string memory);\n}\n\ncontract PortfolioViewer is Ownable {\n    // Sentinel for native token (ETH/chain-native)\n    address public constant NATIVE = address(0);\n\n    struct FeedConfig {\n        AggregatorV3Interface feed;\n        uint48 heartbeat; // seconds; 0 = no freshness check\n    }\n\n    // token => feed config\n    mapping(address => FeedConfig) public feeds;\n\n    event FeedSet(address indexed token, address indexed feed, uint48 heartbeat);\n\n    constructor () Ownable(msg.sender){}\n\n    // ========= Admin: register price feeds =========\n\n    /**\n     * @notice Register or update the Chainlink price feed for a token.\n     * @param token ERC20 address or address(0) for native token\n     * @param feed Chainlink aggregator returning USD price\n     * @param heartbeat Max allowed staleness in seconds (0 = no check)\n     */\n    function setFeed(address token, AggregatorV3Interface feed, uint48 heartbeat) external onlyOwner {\n        require(address(feed) != address(0), \"Feed=0\");\n        feeds[token] = FeedConfig(feed, heartbeat);\n        emit FeedSet(token, address(feed), heartbeat);\n    }\n\n    // ========= Views: balances =========\n\n    function balanceOf(address vault, address token) public view returns (uint256 bal, uint8 dec) {\n        if (token == NATIVE) {\n            bal = vault.balance;\n            dec = 18;\n        } else {\n            bal = IERC20(token).balanceOf(vault);\n            dec = _decimals(token);\n        }\n    }\n\n    function balancesOf(address vault, address[] calldata tokens)\n        external\n        view\n        returns (uint256[] memory bals, uint8[] memory decs)\n    {\n        uint256 len = tokens.length;\n        bals = new uint256[](len);\n        decs = new uint8[](len);\n        for (uint256 i; i < len; ++i) {\n            (bals[i], decs[i]) = balanceOf(vault, tokens[i]);\n        }\n    }\n\n    // ========= Views: USD pricing =========\n\n    /**\n     * @notice Return USD price in 1e18 for a token (0 if no feed).\n     */\n    function priceUsd1e18(address token) public view returns (uint256 p) {\n        FeedConfig memory cfg = feeds[token];\n        if (address(cfg.feed) == address(0)) return 0;\n\n        (, int256 answer,, uint256 updatedAt,) = cfg.feed.latestRoundData();\n        if (answer <= 0) return 0;\n\n        if (cfg.heartbeat != 0 && block.timestamp - updatedAt > cfg.heartbeat) {\n            return 0; // stale\n        }\n\n        uint8 d = cfg.feed.decimals();\n        // scale answer (d) -> 18\n        // safe since d <= 18 for Chainlink USD feeds\n        if (d < 18) {\n            p = uint256(answer) * (10 ** (18 - d));\n        } else if (d > 18) {\n            p = uint256(answer) / (10 ** (d - 18));\n        } else {\n            p = uint256(answer);\n        }\n    }\n\n    /**\n     * @notice Compute USD value (1e18) for a (balance, token).\n     * @dev balance decimals = token decimals; price decimals = 1e18\n     */\n    function valueUsd1e18(address token, uint256 balance) public view returns (uint256) {\n        uint256 px = priceUsd1e18(token);\n        if (px == 0 || balance == 0) return 0;\n\n        uint8 dec = (token == NATIVE) ? 18 : _decimals(token);\n        // USD value = balance * price / (10^dec)\n        return (balance * px) / (10 ** dec);\n    }\n\n    /**\n     * @notice Return per-token balances and USD values for a single vault.\n     */\n    function portfolioOf(address vault, address[] calldata tokens)\n        external\n        view\n        returns (uint256[] memory bals, uint256[] memory usdValues, uint256 totalUsd1e18)\n    {\n        uint256 len = tokens.length;\n        bals = new uint256[](len);\n        usdValues = new uint256[](len);\n\n        for (uint256 i; i < len; ++i) {\n            (uint256 b,) = balanceOf(vault, tokens[i]);\n            bals[i] = b;\n            uint256 v = valueUsd1e18(tokens[i], b);\n            usdValues[i] = v;\n            totalUsd1e18 += v;\n        }\n    }\n\n    /**\n     * @notice Aggregate total USD value across many vaults and tokens.\n     * @dev Useful for team or leaderboard views.\n     */\n    function totalValueUsd(address[] calldata vaults, address[] calldata tokens)\n        external\n        view\n        returns (uint256 totalUsd1e18)\n    {\n        uint256 vLen = vaults.length;\n        uint256 tLen = tokens.length;\n        for (uint256 v; v < vLen; ++v) {\n            for (uint256 t; t < tLen; ++t) {\n                (uint256 b,) = balanceOf(vaults[v], tokens[t]);\n                totalUsd1e18 += valueUsd1e18(tokens[t], b);\n            }\n        }\n    }\n\n    // ========= Internal helpers =========\n\n    function _decimals(address token) internal view returns (uint8 d) {\n        // try/catch to support non-metadata tokens (assume 18)\n        try IERC20Metadata(token).decimals() returns (uint8 _d) {\n            d = _d;\n        } catch {\n            d = 18;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"latestRoundData()": "feaf968c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":{\"keccak256\":\"0xc407103f21338a82c9722d38fdc33d61a5135fc1282937e325acb06adc763b96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39606c7c59dfa669868bb75cf1ab8e719ee3ebe75d6e05aa4f7fe1704bf71d6\",\"dweb:/ipfs/QmTQ4yKoJc2xHQehwFYCGMpb489U7uw4tvnqVPYGAQmZUj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":{\"keccak256\":\"0xc407103f21338a82c9722d38fdc33d61a5135fc1282937e325acb06adc763b96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39606c7c59dfa669868bb75cf1ab8e719ee3ebe75d6e05aa4f7fe1704bf71d6\",\"dweb:/ipfs/QmTQ4yKoJc2xHQehwFYCGMpb489U7uw4tvnqVPYGAQmZUj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PortfolioViewer": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "feed",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "heartbeat",
									"type": "uint48"
								}
							],
							"name": "FeedSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "NATIVE",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "bal",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "dec",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "balancesOf",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "bals",
									"type": "uint256[]"
								},
								{
									"internalType": "uint8[]",
									"name": "decs",
									"type": "uint8[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "feeds",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "feed",
									"type": "address"
								},
								{
									"internalType": "uint48",
									"name": "heartbeat",
									"type": "uint48"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "portfolioOf",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "bals",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "usdValues",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "totalUsd1e18",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "priceUsd1e18",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "p",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "feed",
									"type": "address"
								},
								{
									"internalType": "uint48",
									"name": "heartbeat",
									"type": "uint48"
								}
							],
							"name": "setFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "vaults",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "totalValueUsd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalUsd1e18",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"name": "valueUsd1e18",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setFeed(address,address,uint48)": {
								"params": {
									"feed": "Chainlink aggregator returning USD price",
									"heartbeat": "Max allowed staleness in seconds (0 = no check)",
									"token": "ERC20 address or address(0) for native token"
								}
							},
							"totalValueUsd(address[],address[])": {
								"details": "Useful for team or leaderboard views."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"valueUsd1e18(address,uint256)": {
								"details": "balance decimals = token decimals; price decimals = 1e18"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n    /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1719:1729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  iszero\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_3\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n  dup1\n  sload\n    /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1719:1729  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n  dup3\n  and\n  dup2\n  or\n  dup4\n  sstore\n    /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1719:1729  msg.sender */\n  swap2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_3:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  shl(0xe0, 0x1e4fbdf7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n    /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n  mstore\n  0x24\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  revert\n    /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_23, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_23:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x2fba4aa9\n      eq\n      tag_25\n      jumpi\n      pop\n      dup1\n      0x6815d0df\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x9c03ef5d\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xa0cf0aea\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xc740e8f9\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xe098e844\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xefcab8ae\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xf0854de8\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_45\n      jumpi\n      0xf7888aec\n      eq\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      jumpi(tag_54, callvalue)\n      jumpi(tag_54, slt(add(not(0x03), calldatasize), 0x40))\n      tag_53\n      tag_1\n      jump\t// in\n    tag_53:\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_54\n      jumpi\n      tag_56\n      0xff\n      swap2\n      0x40\n      swap4\n      tag_20\n      jump\t// in\n    tag_56:\n      dup4\n      mload\n      swap2\n      dup3\n      mstore\n      swap1\n      swap2\n      and\n      0x20\n      dup3\n      add\n      mstore\n      return\n    tag_54:\n      0x00\n      dup1\n      revert\n    tag_45:\n      jumpi(tag_54, callvalue)\n      jumpi(tag_54, slt(add(not(0x03), calldatasize), 0x20))\n      tag_61\n      tag_1\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_62\n      tag_22\n      jump\t// in\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_63\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x00\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup4\n      or\n      dup3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      shl(0xe0, 0x1e4fbdf7)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      mstore(0x04, 0x00)\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      revert\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n    tag_43:\n      jumpi(tag_54, callvalue)\n      tag_67\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_67:\n      swap2\n      swap1\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4809:4827  new uint256[](len) */\n      swap1\n      tag_68\n      dup5\n      tag_15\n      jump\t// in\n    tag_68:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4849:4867  new uint256[](len) */\n      swap3\n      tag_69\n      dup6\n      tag_15\n      jump\t// in\n    tag_69:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4883:4892  uint256 i */\n      swap5\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4878:5113  for (uint256 i; i < len; ++i) {... */\n      swap3\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4894:4901  i < len */\n    tag_70:\n      dup2\n      dup5\n      lt\n      tag_71\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      tag_73\n      dup7\n      dup7\n      tag_74\n      dup11\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      0x60\n      dup7\n      mstore\n      0x60\n      dup7\n      add\n      swap1\n      tag_4\n      jump\t// in\n    tag_73:\n      swap1\n      dup5\n      dup3\n      sub\n      0x20\n      dup7\n      add\n      mstore\n      tag_4\n      jump\t// in\n    tag_74:\n      swap1\n      0x40\n      dup4\n      add\n      mstore\n      sub\n      swap1\n      return\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4903:4906  ++i */\n    tag_71:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4954:4963  tokens[i] */\n      swap1\n      swap2\n      swap3\n      swap4\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5085:5102  totalUsd1e18 += v */\n      tag_75\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x01\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4954:4963  tokens[i] */\n      swap2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5015:5041  valueUsd1e18(tokens[i], b) */\n      tag_76\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4937:4964  balanceOf(vault, tokens[i]) */\n      tag_77\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4954:4963  tokens[i] */\n      tag_78\n      tag_79\n      dup11\n      dup10\n      dup10\n      tag_16\n      jump\t// in\n    tag_79:\n      tag_17\n      jump\t// in\n    tag_78:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4937:4964  balanceOf(vault, tokens[i]) */\n      dup9\n      tag_20\n      jump\t// in\n    tag_77:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4978:4989  bals[i] = b */\n      pop\n      dup1\n      tag_80\n      dup11\n      dup13\n      tag_18\n      jump\t// in\n    tag_80:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5028:5037  tokens[i] */\n      tag_81\n      tag_79\n      dup11\n      dup10\n      dup10\n      tag_16\n      jump\t// in\n    tag_81:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5015:5041  valueUsd1e18(tokens[i], b) */\n      tag_8\n      jump\t// in\n    tag_76:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5055:5071  usdValues[i] = v */\n      swap1\n      dup2\n      tag_83\n      dup10\n      dup13\n      tag_18\n      jump\t// in\n    tag_83:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5085:5102  totalUsd1e18 += v */\n      tag_19\n      jump\t// in\n    tag_75:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4903:4906  ++i */\n      swap5\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4883:4892  uint256 i */\n      swap3\n      swap2\n      swap1\n      jump(tag_70)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n    tag_41:\n      jumpi(tag_54, callvalue)\n      jumpi(tag_54, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_54\n      jumpi\n      tag_90\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_90:\n      calldataload(0x24)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_54\n      jumpi\n      tag_93\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_93:\n      swap3\n      swap1\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5504:5513  uint256 v */\n      swap4\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5515:5523  v < vLen */\n    tag_94:\n      dup5\n      dup2\n      lt\n      tag_95\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x20\n      dup7\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5525:5528  ++v */\n    tag_95:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5560:5568  t < tLen */\n    tag_97:\n      dup3\n      dup2\n      lt\n      tag_98\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5525:5528  ++v */\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x01\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5504:5513  uint256 v */\n      jump(tag_94)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5570:5573  ++t */\n    tag_98:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5618:5627  vaults[v] */\n      swap3\n      swap2\n      swap1\n      swap5\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x01\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5657:5699  totalUsd1e18 += valueUsd1e18(tokens[t], b) */\n      tag_100\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5618:5627  vaults[v] */\n      dup2\n      swap9\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5673:5699  valueUsd1e18(tokens[t], b) */\n      tag_101\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5608:5639  balanceOf(vaults[v], tokens[t]) */\n      tag_102\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5618:5627  vaults[v] */\n      tag_103\n      tag_79\n      dup13\n      dup9\n      dup14\n      tag_16\n      jump\t// in\n    tag_103:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5629:5638  tokens[t] */\n      tag_105\n      tag_79\n      dup12\n      dup11\n      dup13\n      tag_16\n      jump\t// in\n    tag_105:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5608:5639  balanceOf(vaults[v], tokens[t]) */\n      swap1\n      tag_20\n      jump\t// in\n    tag_102:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5686:5695  tokens[t] */\n      pop\n      tag_81\n      tag_79\n      dup11\n      dup10\n      dup12\n      tag_16\n      jump\t// in\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5673:5699  valueUsd1e18(tokens[t], b) */\n    tag_101:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5657:5699  totalUsd1e18 += valueUsd1e18(tokens[t], b) */\n      swap1\n      tag_19\n      jump\t// in\n    tag_100:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5570:5573  ++t */\n      swap5\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5549:5558  uint256 t */\n      swap1\n      swap6\n      swap2\n      swap3\n      swap4\n      swap7\n      pop\n      jump(tag_97)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n    tag_39:\n      jumpi(tag_54, callvalue)\n      tag_111\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_111:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2913:2931  new uint256[](len) */\n      swap1\n      swap2\n      tag_112\n      dup3\n      tag_15\n      jump\t// in\n    tag_112:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      swap3\n      tag_113\n      dup4\n      tag_14\n      jump\t// in\n    tag_113:\n      swap2\n      tag_114\n      mload(0x40)\n      swap4\n      dup5\n      tag_10\n      jump\t// in\n    tag_114:\n      dup4\n      dup4\n      mstore\n      tag_115\n      dup5\n      tag_14\n      jump\t// in\n    tag_115:\n      0x20\n      dup5\n      add\n      swap5\n      swap1\n      not(0x1f)\n      add\n      calldatasize\n      dup7\n      calldatacopy\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2990:2997  i < len */\n    tag_116:\n      dup2\n      dup2\n      lt\n      tag_117\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      tag_119\n      dup8\n      dup8\n      dup8\n      0x20\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      0x40\n      dup7\n      mstore\n      0x40\n      dup7\n      add\n      swap1\n      tag_4\n      jump\t// in\n    tag_119:\n      swap2\n      dup5\n      dup4\n      sub\n      dup3\n      dup7\n      add\n      mstore\n      mload\n      swap2\n      dup3\n      dup2\n      mstore\n      add\n      swap2\n      swap1\n      0x00\n    tag_120:\n      dup2\n      dup2\n      lt\n      tag_121\n      jumpi\n      pop\n      pop\n      pop\n      sub\n      swap1\n      return\n    tag_121:\n      dup3\n      mload\n      0xff\n      and\n      dup5\n      mstore\n      dup6\n      swap5\n      pop\n      0x20\n      swap4\n      dup5\n      add\n      swap4\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      add\n      jump(tag_120)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2999:3002  ++i */\n    tag_117:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3056:3065  tokens[i] */\n      dup1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3039:3066  balanceOf(vault, tokens[i]) */\n      tag_123\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3056:3065  tokens[i] */\n      tag_124\n      tag_79\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x01\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3056:3065  tokens[i] */\n      swap5\n      dup7\n      dup10\n      tag_16\n      jump\t// in\n    tag_124:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3039:3066  balanceOf(vault, tokens[i]) */\n      dup6\n      tag_20\n      jump\t// in\n    tag_123:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0xff\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3018:3066  (bals[i], decs[i]) = balanceOf(vault, tokens[i]) */\n      tag_126\n      dup5\n      dup11\n      tag_18\n      jump\t// in\n    tag_126:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      swap2\n      and\n      swap1\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3018:3066  (bals[i], decs[i]) = balanceOf(vault, tokens[i]) */\n      tag_127\n      dup3\n      dup11\n      tag_18\n      jump\t// in\n    tag_127:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      mstore\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2979:2988  uint256 i */\n      jump(tag_116)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n    tag_37:\n      jumpi(tag_54, callvalue)\n      jumpi(tag_54, slt(add(not(0x03), calldatasize), 0x60))\n      tag_132\n      tag_1\n      jump\t// in\n    tag_132:\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      tag_54\n      jumpi\n      calldataload(0x44)\n      0xffffffffffff\n      dup2\n      and\n      dup1\n      swap2\n      sub\n      tag_54\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_137\n      tag_22\n      jump\t// in\n    tag_137:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2194:2221  address(feed) != address(0) */\n      dup3\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      tag_138\n      jumpi\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2299:2339  FeedSet(token, address(feed), heartbeat) */\n      0x0c3bdaa6ed090ed87c8e706ce5aa638bf3b37d80f743c5ebb168e3f86be0b44d\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      swap2\n      mload(0x40)\n      tag_140\n      dup2\n      tag_9\n      jump\t// in\n    tag_140:\n      dup6\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2257:2284  FeedConfig(feed, heartbeat) */\n      dup3\n      dup2\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      dup7\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n      0x01\n      dup7\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n      swap4\n      mload\n      dup5\n      sload\n      swap4\n      mload\n      shl(0xa0, 0xffffffffffff)\n      0xa0\n      swap2\n      swap1\n      swap2\n      shl\n      and\n      swap9\n      and\n      not(sub(shl(0xd0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap7\n      swap1\n      swap7\n      or\n      swap1\n      swap2\n      sstore\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2299:2339  FeedSet(token, address(feed), heartbeat) */\n      log3\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      stop\n    tag_138:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x06\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xd4, 0x0466565643d3)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_35:\n      jumpi(tag_54, callvalue)\n      jumpi(tag_54, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      return\n    tag_33:\n      jumpi(tag_54, callvalue)\n      jumpi(tag_54, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_149\n      tag_150\n      tag_1\n      jump\t// in\n    tag_150:\n      tag_13\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_31:\n      jumpi(tag_54, callvalue)\n      jumpi(tag_54, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x00)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_29:\n      jumpi(tag_54, callvalue)\n      jumpi(tag_54, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_159\n      tag_22\n      jump\t// in\n    tag_159:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x00\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      dup3\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      stop\n    tag_27:\n      jumpi(tag_54, callvalue)\n      jumpi(tag_54, slt(add(not(0x03), calldatasize), 0x40))\n      0x20\n      tag_149\n      tag_165\n      tag_1\n      jump\t// in\n    tag_165:\n      calldataload(0x24)\n      swap1\n      tag_8\n      jump\t// in\n    tag_25:\n      jumpi(tag_54, callvalue)\n      jumpi(tag_54, slt(add(not(0x03), calldatasize), 0x20))\n      0x40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_170\n      tag_1\n      jump\t// in\n    tag_170:\n      and\n      0x00\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1563:1606  mapping(address => FeedConfig) public feeds */\n      0x01\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x20\n      mstore\n      0xffffffffffff\n      dup3\n      0x00\n      keccak256\n      sload\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      and\n      dup4\n      mstore\n      0xa0\n      shr\n      and\n      0x20\n      dup3\n      add\n      mstore\n      return\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_54\n      jumpi\n      jump\t// out\n    tag_2:\n      swap2\n      dup2\n      0x1f\n      dup5\n      add\n      slt\n      iszero\n      tag_54\n      jumpi\n      dup3\n      calldataload\n      swap2\n      0xffffffffffffffff\n      dup4\n      gt\n      tag_54\n      jumpi\n      0x20\n      dup1\n      dup6\n      add\n      swap5\n      dup5\n      0x05\n      shl\n      add\n      add\n      gt\n      tag_54\n      jumpi\n      jump\t// out\n    tag_3:\n      swap1\n      0x40\n      not(0x03)\n      dup4\n      add\n      slt\n      tag_54\n      jumpi\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_54\n      jumpi\n      swap2\n      calldataload(0x24)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_54\n      jumpi\n      tag_185\n      swap2\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_185:\n      swap1\n      swap2\n      jump\t// out\n    tag_4:\n      swap1\n      0x20\n      dup1\n      dup4\n      mload\n      swap3\n      dup4\n      dup2\n      mstore\n      add\n      swap3\n      add\n      swap1\n      0x00\n    tag_186:\n      dup2\n      dup2\n      lt\n      tag_187\n      jumpi\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_187:\n      dup3\n      mload\n      dup5\n      mstore\n      0x20\n      swap4\n      dup5\n      add\n      swap4\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      add\n      jump(tag_186)\n    tag_5:\n      dup2\n      dup2\n      mul\n      swap3\n      swap2\n      dup2\n      iszero\n      swap2\n      dup5\n      div\n      eq\n      or\n      iszero\n      tag_189\n      jumpi\n      jump\t// out\n    tag_189:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_6:\n      0xff\n      and\n      0x4d\n      dup2\n      gt\n      tag_189\n      jumpi\n      0x0a\n      exp\n      swap1\n      jump\t// out\n    tag_7:\n      dup2\n      iszero\n      tag_193\n      jumpi\n      div\n      swap1\n      jump\t// out\n    tag_193:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x12)\n      revert(0x00, 0x24)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4131:4470  function valueUsd1e18(address token, uint256 balance) public view returns (uint256) {... */\n    tag_8:\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4238:4257  priceUsd1e18(token) */\n      tag_195\n      dup3\n      tag_13\n      jump\t// in\n    tag_195:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4271:4278  px == 0 */\n      dup1\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4271:4294  px == 0 || balance == 0 */\n      dup1\n      iszero\n      tag_196\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4131:4470  function valueUsd1e18(address token, uint256 balance) public view returns (uint256) {... */\n    tag_197:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4267:4304  if (px == 0 || balance == 0) return 0 */\n      tag_198\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4435:4463  (balance * px) / (10 ** dec) */\n      tag_202\n      swap3\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4453:4462  10 ** dec */\n      tag_201\n      swap2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4436:4448  balance * px */\n      tag_200\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      dup2\n      and\n      tag_203\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4327:4368  (token == NATIVE) ? 18 : _decimals(token) */\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4347:4349  18 */\n      0x12\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4327:4368  (token == NATIVE) ? 18 : _decimals(token) */\n      swap4\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4436:4448  balance * px */\n      tag_5\n      jump\t// in\n    tag_200:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4453:4462  10 ** dec */\n      swap2\n      tag_6\n      jump\t// in\n    tag_201:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4435:4463  (balance * px) / (10 ** dec) */\n      swap1\n      tag_7\n      jump\t// in\n    tag_202:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4131:4470  function valueUsd1e18(address token, uint256 balance) public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4327:4368  (token == NATIVE) ? 18 : _decimals(token) */\n    tag_203:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4352:4368  _decimals(token) */\n      tag_206\n      swap1\n      tag_21\n      jump\t// in\n    tag_206:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4327:4368  (token == NATIVE) ? 18 : _decimals(token) */\n      swap4\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4436:4448  balance * px */\n      tag_5\n      jump\t// in\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4267:4304  if (px == 0 || balance == 0) return 0 */\n    tag_198:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4296:4304  return 0 */\n      pop\n      pop\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4296:4304  return 0 */\n      swap1\n      jump\t// out\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4271:4294  px == 0 || balance == 0 */\n    tag_196:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4282:4294  balance == 0 */\n      pop\n      dup2\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":4271:4294  px == 0 || balance == 0 */\n      jump(tag_197)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n    tag_9:\n      0x40\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_207\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_207:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_10:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_207\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_11:\n      mload\n      swap1\n      0xffffffffffffffffffff\n      dup3\n      and\n      dup3\n      sub\n      tag_54\n      jumpi\n      jump\t// out\n    tag_12:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_54\n      jumpi\n      mload\n      0xff\n      dup2\n      and\n      dup2\n      sub\n      tag_54\n      jumpi\n      swap1\n      jump\t// out\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3220:3976  function priceUsd1e18(address token) public view returns (uint256 p) {... */\n    tag_13:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3323:3328  feeds */\n      0x01\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap1\n      tag_217\n      dup3\n      tag_9\n      jump\t// in\n    tag_217:\n      sload\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      and\n      swap2\n      dup3\n      dup3\n      mstore\n      0xffffffffffff\n      0x20\n      dup4\n      add\n      swap2\n      0xa0\n      shr\n      and\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3349:3380  address(cfg.feed) == address(0) */\n      dup3\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3345:3390  if (address(cfg.feed) == address(0)) return 0 */\n      tag_198\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0xa0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3442:3468  cfg.feed.latestRoundData() */\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      swap4\n      mload(0x40)\n      swap5\n      dup6\n      dup1\n      swap3\n      shl(0xe2, 0x3fabe5a3)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3442:3468  cfg.feed.latestRoundData() */\n      dup3\n      mstore\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_230\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x00\n      swap4\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3442:3468  cfg.feed.latestRoundData() */\n      swap3\n      tag_222\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3220:3976  function priceUsd1e18(address token) public view returns (uint256 p) {... */\n    tag_223:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3482:3493  answer <= 0 */\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3482:3493  answer <= 0 */\n      dup5\n      sgt\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3478:3503  if (answer <= 0) return 0 */\n      tag_224\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0xffffffffffff\n      dup2\n      mload\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3518:3536  cfg.heartbeat != 0 */\n      iszero\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3518:3583  cfg.heartbeat != 0 && block.timestamp - updatedAt > cfg.heartbeat */\n      swap2\n      dup3\n      tag_226\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3220:3976  function priceUsd1e18(address token) public view returns (uint256 p) {... */\n    tag_227:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3514:3627  if (cfg.heartbeat != 0 && block.timestamp - updatedAt > cfg.heartbeat) {... */\n      pop\n      pop\n      tag_228\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      mload\n      mload(0x40)\n      shl(0xe0, 0x313ce567)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3647:3666  cfg.feed.decimals() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      swap1\n      0x20\n      swap1\n      dup3\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3442:3468  cfg.feed.latestRoundData() */\n      0x04\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3647:3666  cfg.feed.decimals() */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_230\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0xff\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3647:3666  cfg.feed.decimals() */\n      swap2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3647:3666  cfg.feed.decimals() */\n      swap2\n      tag_232\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3220:3976  function priceUsd1e18(address token) public view returns (uint256 p) {... */\n    tag_233:\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3772:3774  18 */\n      0x12\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3768:3774  d < 18 */\n      dup2\n      lt\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3772:3774  18 */\n      iszero\n      tag_234\n      jumpi\n      0x12\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      sub\n      swap1\n      0xff\n      dup3\n      gt\n      tag_189\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3813:3827  10 ** (18 - d) */\n      tag_238\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3794:3828  uint256(answer) * (10 ** (18 - d)) */\n      tag_202\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3813:3827  10 ** (18 - d) */\n      swap3\n      tag_6\n      jump\t// in\n    tag_238:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3794:3828  uint256(answer) * (10 ** (18 - d)) */\n      swap1\n      tag_5\n      jump\t// in\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3764:3970  if (d < 18) {... */\n    tag_234:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3772:3774  18 */\n      0x12\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3849:3855  d > 18 */\n      dup2\n      gt\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3772:3774  18 */\n      iszero\n      tag_241\n      jumpi\n      not(0x11)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      add\n      swap1\n      0xff\n      dup3\n      gt\n      tag_189\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3894:3908  10 ** (d - 18) */\n      tag_201\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3875:3909  uint256(answer) / (10 ** (d - 18)) */\n      tag_202\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3894:3908  10 ** (d - 18) */\n      swap3\n      tag_6\n      jump\t// in\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3845:3970  if (d > 18) {... */\n    tag_241:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3940:3959  p = uint256(answer) */\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3845:3970  if (d > 18) {... */\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3220:3976  function priceUsd1e18(address token) public view returns (uint256 p) {... */\n      jump\t// out\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3647:3666  cfg.feed.decimals() */\n    tag_232:\n      tag_248\n      swap2\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3647:3666  cfg.feed.decimals() */\n      returndatasize\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3647:3666  cfg.feed.decimals() */\n      gt\n      tag_249\n      jumpi\n    tag_250:\n      tag_251\n      dup2\n      dup4\n      tag_10\n      jump\t// in\n    tag_251:\n      dup2\n      add\n      swap1\n      tag_12\n      jump\t// in\n    tag_248:\n      0x00\n      jump(tag_233)\n    tag_249:\n      pop\n      returndatasize\n      jump(tag_250)\n    tag_230:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3514:3627  if (cfg.heartbeat != 0 && block.timestamp - updatedAt > cfg.heartbeat) {... */\n    tag_228:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3599:3607  return 0 */\n      pop\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3599:3607  return 0 */\n      swap1\n      jump\t// out\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3518:3583  cfg.heartbeat != 0 && block.timestamp - updatedAt > cfg.heartbeat */\n    tag_226:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3540:3555  block.timestamp */\n      timestamp\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      swap1\n      dup2\n      sub\n      swap3\n      pop\n      dup3\n      gt\n      tag_189\n      jumpi\n      mload\n      0xffffffffffff\n      and\n      lt\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3518:3583  cfg.heartbeat != 0 && block.timestamp - updatedAt > cfg.heartbeat */\n      0x00\n      dup1\n      jump(tag_227)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3478:3503  if (answer <= 0) return 0 */\n    tag_224:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3495:3503  return 0 */\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3495:3503  return 0 */\n      swap1\n      jump\t// out\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3442:3468  cfg.feed.latestRoundData() */\n    tag_222:\n      swap4\n      pop\n      swap1\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0xa0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3442:3468  cfg.feed.latestRoundData() */\n      dup4\n      returndatasize\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0xa0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3442:3468  cfg.feed.latestRoundData() */\n      gt\n      tag_254\n      jumpi\n    tag_255:\n      dup2\n      tag_256\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0xa0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3442:3468  cfg.feed.latestRoundData() */\n      swap4\n      dup4\n      tag_10\n      jump\t// in\n    tag_256:\n      dup2\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      sub\n      slt\n      tag_54\n      jumpi\n      tag_259\n      dup4\n      tag_11\n      jump\t// in\n    tag_259:\n      pop\n      0x20\n      dup4\n      add\n      mload\n      tag_260\n      0x80\n      0x60\n      dup7\n      add\n      mload\n      swap6\n      add\n      tag_11\n      jump\t// in\n    tag_260:\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":3442:3468  cfg.feed.latestRoundData() */\n      swap3\n      swap1\n      0x00\n      jump(tag_223)\n    tag_254:\n      returndatasize\n      swap2\n      pop\n      jump(tag_255)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n    tag_14:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_207\n      jumpi\n      0x05\n      shl\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_15:\n      swap1\n      tag_263\n      dup3\n      tag_14\n      jump\t// in\n    tag_263:\n      tag_264\n      mload(0x40)\n      swap2\n      dup3\n      tag_10\n      jump\t// in\n    tag_264:\n      dup3\n      dup2\n      mstore\n      dup1\n      swap3\n      tag_265\n      not(0x1f)\n      swap2\n      tag_14\n      jump\t// in\n    tag_265:\n      add\n      swap1\n      0x20\n      calldatasize\n      swap2\n      add\n      calldatacopy\n      jump\t// out\n    tag_16:\n      swap2\n      swap1\n      dup2\n      lt\n      iszero\n      tag_266\n      jumpi\n      0x05\n      shl\n      add\n      swap1\n      jump\t// out\n    tag_266:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_17:\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_54\n      jumpi\n      swap1\n      jump\t// out\n    tag_18:\n      dup1\n      mload\n      dup3\n      lt\n      iszero\n      tag_266\n      jumpi\n      0x20\n      swap2\n      0x05\n      shl\n      add\n      add\n      swap1\n      jump\t// out\n    tag_19:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_189\n      jumpi\n      jump\t// out\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2396:2696  function balanceOf(address vault, address token) public view returns (uint256 bal, uint8 dec) {... */\n    tag_20:\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      dup2\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2504:2519  token == NATIVE */\n      dup1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      tag_274\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2541:2554  vault.balance */\n      pop\n      pop\n      balance\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2568:2576  dec = 18 */\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2574:2576  18 */\n      0x12\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2500:2690  if (token == NATIVE) {... */\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2396:2696  function balanceOf(address vault, address token) public view returns (uint256 bal, uint8 dec) {... */\n      jump\t// out\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2500:2690  if (token == NATIVE) {... */\n    tag_274:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2613:2643  IERC20(token).balanceOf(vault) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      swap1\n      swap4\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2613:2643  IERC20(token).balanceOf(vault) */\n      0x04\n      dup5\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      mstore\n      swap1\n      swap3\n      swap2\n      swap1\n      0x20\n      swap1\n      dup3\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2613:2643  IERC20(token).balanceOf(vault) */\n      0x24\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      dup3\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2613:2643  IERC20(token).balanceOf(vault) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_230\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1398:1399  0 */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2613:2643  IERC20(token).balanceOf(vault) */\n      swap1\n      tag_279\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2500:2690  if (token == NATIVE) {... */\n    tag_280:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2663:2679  _decimals(token) */\n      tag_202\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2607:2643  bal = IERC20(token).balanceOf(vault) */\n      swap2\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2663:2679  _decimals(token) */\n      swap3\n      tag_21\n      jump\t// in\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2613:2643  IERC20(token).balanceOf(vault) */\n    tag_279:\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2613:2643  IERC20(token).balanceOf(vault) */\n      dup2\n      returndatasize\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2613:2643  IERC20(token).balanceOf(vault) */\n      gt\n      tag_282\n      jumpi\n    tag_283:\n      dup2\n      tag_284\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2613:2643  IERC20(token).balanceOf(vault) */\n      swap4\n      dup4\n      tag_10\n      jump\t// in\n    tag_284:\n      dup2\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      sub\n      slt\n      tag_54\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2663:2679  _decimals(token) */\n      tag_202\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      swap1\n      mload\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":2613:2643  IERC20(token).balanceOf(vault) */\n      jump(tag_280)\n    tag_282:\n      returndatasize\n      swap2\n      pop\n      jump(tag_283)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5781:6052  function _decimals(address token) internal view returns (uint8 d) {... */\n    tag_21:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x313ce567)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5925:5957  IERC20Metadata(token).decimals() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5925:5957  IERC20Metadata(token).decimals() */\n      0x20\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      dup3\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5925:5957  IERC20Metadata(token).decimals() */\n      0x04\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5925:5957  IERC20Metadata(token).decimals() */\n      gas\n      staticcall\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      0x00\n      swap2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5925:5957  IERC20Metadata(token).decimals() */\n      dup2\n      tag_287\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5781:6052  function _decimals(address token) internal view returns (uint8 d) {... */\n    tag_288:\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5921:6046  try IERC20Metadata(token).decimals() returns (uint8 _d) {... */\n      tag_202\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":6029:6035  d = 18 */\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":6033:6035  18 */\n      0x12\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5921:6046  try IERC20Metadata(token).decimals() returns (uint8 _d) {... */\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5781:6052  function _decimals(address token) internal view returns (uint8 d) {... */\n      jump\t// out\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":5925:5957  IERC20Metadata(token).decimals() */\n    tag_287:\n      tag_292\n      swap2\n      swap3\n      pop\n      0x20\n      jumpi(tag_249, gt(0x20, returndatasize))\n      tag_251\n      dup2\n      dup4\n      tag_10\n      jump\t// in\n    tag_292:\n      swap1\n      0x00\n      jump(tag_288)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      shl(0xe0, 0x118cdaa7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":1263:6054  contract PortfolioViewer is Ownable {... */\n      mstore\n      0x24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      revert\n\n    auxdata: 0xa2646970667358221220bbb6077737ce5a1c13aedca41bb52122ed0f6d44e6658cb842fbc377e6be97b364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608080604052346071573315605e575f8054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3610be590816100768239f35b631e4fbdf760e01b5f525f60045260245ffd5b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c9081632fba4aa9146105e4575080636815d0df146105bd578063715018a6146105665780638da5cb5b1461053f5780639c03ef5d14610514578063a0cf0aea146104fa578063c740e8f9146103f3578063e098e8441461030d578063efcab8ae1461023c578063f0854de814610172578063f2fde38b146100ed5763f7888aec146100a0575f80fd5b346100e95760403660031901126100e9576100b9610631565b6024356001600160a01b03811681036100e9576100da60ff91604093610aa0565b83519182529091166020820152f35b5f80fd5b346100e95760203660031901126100e957610106610631565b61010e610b89565b6001600160a01b0316801561015f575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b346100e95761018036610678565b91905f9061018d84610a15565b9261019785610a15565b945f925b8184106101d7576101bf86866101cd8a6040519485946060865260608601906106bc565b9084820360208601526106bc565b9060408301520390f35b909192936102326001916102206102006101fa6101f58a8989610a47565b610a6b565b88610aa0565b508061020c8a8c610a7f565b5261021b6101f58a8989610a47565b610745565b908161022c898c610a7f565b52610a93565b940192919061019b565b346100e95760403660031901126100e95760043567ffffffffffffffff81116100e95761026d903690600401610647565b60243567ffffffffffffffff81116100e95761028d903690600401610647565b92905f935f5b8481106102a557602086604051908152f35b5f5b8281106102b75750600101610293565b9291909460016102ff81986102f96102ea6102d66101f58c888d610a47565b6102e46101f58b8a8c610a47565b90610aa0565b5061021b6101f58a898b610a47565b90610a93565b9401909591929396506102a7565b346100e95761031b36610678565b909161032682610a15565b92610330836109fd565b9161033e60405193846107dc565b83835261034a846109fd565b602084019490601f19013686375f5b8181106103b85761037c87878760206040519485946040865260408601906106bc565b918483038286015251918281520191905f5b81811061039c575050500390f35b825160ff1684528594506020938401939092019160010161038e565b806103d26103cc6101f56001948689610a47565b85610aa0565b60ff6103de848a610a7f565b911690526103ec828a610a7f565b5201610359565b346100e95760603660031901126100e95761040c610631565b6024356001600160a01b03811691908290036100e95760443565ffffffffffff81168091036100e95761043d610b89565b82156104cc5760207f0c3bdaa6ed090ed87c8e706ce5aa638bf3b37d80f743c5ebb168e3f86be0b44d91604051610473816107ac565b8581528281018281526001600160a01b039586165f8181526001865260409081902093518454935165ffffffffffff60a01b60a09190911b1698166001600160d01b0319909316929092179690961790915551908152a3005b60405162461bcd60e51b81526020600482015260066024820152650466565643d360d41b6044820152606490fd5b346100e9575f3660031901126100e95760206040515f8152f35b346100e95760203660031901126100e9576020610537610532610631565b61082e565b604051908152f35b346100e9575f3660031901126100e9575f546040516001600160a01b039091168152602090f35b346100e9575f3660031901126100e95761057e610b89565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100e95760403660031901126100e95760206105376105db610631565b60243590610745565b346100e95760203660031901126100e9576040906001600160a01b03610608610631565b165f52600160205265ffffffffffff825f205460018060a01b038116835260a01c166020820152f35b600435906001600160a01b03821682036100e957565b9181601f840112156100e95782359167ffffffffffffffff83116100e9576020808501948460051b0101116100e957565b9060406003198301126100e9576004356001600160a01b03811681036100e957916024359067ffffffffffffffff82116100e9576106b891600401610647565b9091565b90602080835192838152019201905f5b8181106106d95750505090565b82518452602093840193909201916001016106cc565b8181029291811591840414171561070257565b634e487b7160e01b5f52601160045260245ffd5b60ff16604d811161070257600a0a90565b8115610731570490565b634e487b7160e01b5f52601260045260245ffd5b9061074f8261082e565b801580156107a4575b61079d5761078b926107859161077f916001600160a01b03811661078e57506012936106ef565b91610716565b90610727565b90565b61079790610b32565b936106ef565b5050505f90565b508115610758565b6040810190811067ffffffffffffffff8211176107c857604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff8211176107c857604052565b519069ffffffffffffffffffff821682036100e957565b908160209103126100e9575160ff811681036100e95790565b60018060a01b03165f52600160205260405f206040519061084e826107ac565b549060018060a01b0382169182825265ffffffffffff602083019160a01c168152821561079d5760a060049360405194858092633fabe5a360e21b82525afa908115610971575f935f926109a7575b505f84131561099f5765ffffffffffff81511615159182610982575b505061097c575160405163313ce56760e01b815290602090829060049082906001600160a01b03165afa80156109715760ff915f91610942575b5016601281101561091c576012039060ff82116107025761091661078b92610716565b906106ef565b601281111561093e57601119019060ff82116107025761078561078b92610716565b5090565b610964915060203d60201161096a575b61095c81836107dc565b810190610815565b5f6108f3565b503d610952565b6040513d5f823e3d90fd5b50505f90565b4290810392508211610702575165ffffffffffff16105f806108b9565b505050505f90565b9350905060a0833d60a0116109f5575b816109c460a093836107dc565b810103126100e9576109d5836107fe565b5060208301516109ec6080606086015195016107fe565b5092905f61089d565b3d91506109b7565b67ffffffffffffffff81116107c85760051b60200190565b90610a1f826109fd565b610a2c60405191826107dc565b8281528092610a3d601f19916109fd565b0190602036910137565b9190811015610a575760051b0190565b634e487b7160e01b5f52603260045260245ffd5b356001600160a01b03811681036100e95790565b8051821015610a575760209160051b010190565b9190820180921161070257565b906001600160a01b03811680610ab95750503190601290565b6040516370a0823160e01b81526001600160a01b03909316600484015290929190602090829060249082905afa8015610971575f90610afe575b61078b915092610b32565b506020813d602011610b2a575b81610b18602093836107dc565b810103126100e95761078b9051610af3565b3d9150610b0b565b60405163313ce56760e01b815290602090829060049082906001600160a01b03165afa5f9181610b68575b5061078b5750601290565b610b8291925060203d60201161096a5761095c81836107dc565b905f610b5d565b5f546001600160a01b03163303610b9c57565b63118cdaa760e01b5f523360045260245ffdfea2646970667358221220bbb6077737ce5a1c13aedca41bb52122ed0f6d44e6658cb842fbc377e6be97b364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x71 JUMPI CALLER ISZERO PUSH1 0x5E JUMPI PUSH0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0xBE5 SWAP1 DUP2 PUSH2 0x76 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2FBA4AA9 EQ PUSH2 0x5E4 JUMPI POP DUP1 PUSH4 0x6815D0DF EQ PUSH2 0x5BD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0x9C03EF5D EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xA0CF0AEA EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xC740E8F9 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xE098E844 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xEFCAB8AE EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xF0854DE8 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xED JUMPI PUSH4 0xF7888AEC EQ PUSH2 0xA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0xB9 PUSH2 0x631 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xE9 JUMPI PUSH2 0xDA PUSH1 0xFF SWAP2 PUSH1 0x40 SWAP4 PUSH2 0xAA0 JUMP JUMPDEST DUP4 MLOAD SWAP2 DUP3 MSTORE SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x106 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x10E PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x15F JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH2 0x180 CALLDATASIZE PUSH2 0x678 JUMP JUMPDEST SWAP2 SWAP1 PUSH0 SWAP1 PUSH2 0x18D DUP5 PUSH2 0xA15 JUMP JUMPDEST SWAP3 PUSH2 0x197 DUP6 PUSH2 0xA15 JUMP JUMPDEST SWAP5 PUSH0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1D7 JUMPI PUSH2 0x1BF DUP7 DUP7 PUSH2 0x1CD DUP11 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x60 DUP7 MSTORE PUSH1 0x60 DUP7 ADD SWAP1 PUSH2 0x6BC JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x6BC JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x232 PUSH1 0x1 SWAP2 PUSH2 0x220 PUSH2 0x200 PUSH2 0x1FA PUSH2 0x1F5 DUP11 DUP10 DUP10 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST DUP9 PUSH2 0xAA0 JUMP JUMPDEST POP DUP1 PUSH2 0x20C DUP11 DUP13 PUSH2 0xA7F JUMP JUMPDEST MSTORE PUSH2 0x21B PUSH2 0x1F5 DUP11 DUP10 DUP10 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x22C DUP10 DUP13 PUSH2 0xA7F JUMP JUMPDEST MSTORE PUSH2 0xA93 JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x19B JUMP JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE9 JUMPI PUSH2 0x26D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x647 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE9 JUMPI PUSH2 0x28D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x647 JUMP JUMPDEST SWAP3 SWAP1 PUSH0 SWAP4 PUSH0 JUMPDEST DUP5 DUP2 LT PUSH2 0x2A5 JUMPI PUSH1 0x20 DUP7 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2B7 JUMPI POP PUSH1 0x1 ADD PUSH2 0x293 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP5 PUSH1 0x1 PUSH2 0x2FF DUP2 SWAP9 PUSH2 0x2F9 PUSH2 0x2EA PUSH2 0x2D6 PUSH2 0x1F5 DUP13 DUP9 DUP14 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x1F5 DUP12 DUP11 DUP13 PUSH2 0xA47 JUMP JUMPDEST SWAP1 PUSH2 0xAA0 JUMP JUMPDEST POP PUSH2 0x21B PUSH2 0x1F5 DUP11 DUP10 DUP12 PUSH2 0xA47 JUMP JUMPDEST SWAP1 PUSH2 0xA93 JUMP JUMPDEST SWAP5 ADD SWAP1 SWAP6 SWAP2 SWAP3 SWAP4 SWAP7 POP PUSH2 0x2A7 JUMP JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH2 0x31B CALLDATASIZE PUSH2 0x678 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x326 DUP3 PUSH2 0xA15 JUMP JUMPDEST SWAP3 PUSH2 0x330 DUP4 PUSH2 0x9FD JUMP JUMPDEST SWAP2 PUSH2 0x33E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x7DC JUMP JUMPDEST DUP4 DUP4 MSTORE PUSH2 0x34A DUP5 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x20 DUP5 ADD SWAP5 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP7 CALLDATACOPY PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3B8 JUMPI PUSH2 0x37C DUP8 DUP8 DUP8 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x40 DUP7 MSTORE PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x6BC JUMP JUMPDEST SWAP2 DUP5 DUP4 SUB DUP3 DUP7 ADD MSTORE MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x39C JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0xFF AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH2 0x3D2 PUSH2 0x3CC PUSH2 0x1F5 PUSH1 0x1 SWAP5 DUP7 DUP10 PUSH2 0xA47 JUMP JUMPDEST DUP6 PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0xFF PUSH2 0x3DE DUP5 DUP11 PUSH2 0xA7F JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH2 0x3EC DUP3 DUP11 PUSH2 0xA7F JUMP JUMPDEST MSTORE ADD PUSH2 0x359 JUMP JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x40C PUSH2 0x631 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0xE9 JUMPI PUSH1 0x44 CALLDATALOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0xE9 JUMPI PUSH2 0x43D PUSH2 0xB89 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x4CC JUMPI PUSH1 0x20 PUSH32 0xC3BDAA6ED090ED87C8E706CE5AA638BF3B37D80F743C5EBB168E3F86BE0B44D SWAP2 PUSH1 0x40 MLOAD PUSH2 0x473 DUP2 PUSH2 0x7AC JUMP JUMPDEST DUP6 DUP2 MSTORE DUP3 DUP2 ADD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 MLOAD DUP5 SLOAD SWAP4 MLOAD PUSH6 0xFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL AND SWAP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x466565643D3 PUSH1 0xD4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x20 PUSH2 0x537 PUSH2 0x532 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x57E PUSH2 0xB89 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x20 PUSH2 0x537 PUSH2 0x5DB PUSH2 0x631 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x745 JUMP JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x608 PUSH2 0x631 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH6 0xFFFFFFFFFFFF DUP3 PUSH0 KECCAK256 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP4 MSTORE PUSH1 0xA0 SHR AND PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE9 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE9 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE9 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0xE9 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xE9 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE9 JUMPI PUSH2 0x6B8 SWAP2 PUSH1 0x4 ADD PUSH2 0x647 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x6D9 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x6CC JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x702 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0x702 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x731 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH2 0x74F DUP3 PUSH2 0x82E JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x7A4 JUMPI JUMPDEST PUSH2 0x79D JUMPI PUSH2 0x78B SWAP3 PUSH2 0x785 SWAP2 PUSH2 0x77F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x78E JUMPI POP PUSH1 0x12 SWAP4 PUSH2 0x6EF JUMP JUMPDEST SWAP2 PUSH2 0x716 JUMP JUMPDEST SWAP1 PUSH2 0x727 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x797 SWAP1 PUSH2 0xB32 JUMP JUMPDEST SWAP4 PUSH2 0x6EF JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7C8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7C8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xE9 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xE9 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0xE9 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x84E DUP3 PUSH2 0x7AC JUMP JUMPDEST SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 DUP3 DUP3 MSTORE PUSH6 0xFFFFFFFFFFFF PUSH1 0x20 DUP4 ADD SWAP2 PUSH1 0xA0 SHR AND DUP2 MSTORE DUP3 ISZERO PUSH2 0x79D JUMPI PUSH1 0xA0 PUSH1 0x4 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x971 JUMPI PUSH0 SWAP4 PUSH0 SWAP3 PUSH2 0x9A7 JUMPI JUMPDEST POP PUSH0 DUP5 SGT ISZERO PUSH2 0x99F JUMPI PUSH6 0xFFFFFFFFFFFF DUP2 MLOAD AND ISZERO ISZERO SWAP2 DUP3 PUSH2 0x982 JUMPI JUMPDEST POP POP PUSH2 0x97C JUMPI MLOAD PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x971 JUMPI PUSH1 0xFF SWAP2 PUSH0 SWAP2 PUSH2 0x942 JUMPI JUMPDEST POP AND PUSH1 0x12 DUP2 LT ISZERO PUSH2 0x91C JUMPI PUSH1 0x12 SUB SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x702 JUMPI PUSH2 0x916 PUSH2 0x78B SWAP3 PUSH2 0x716 JUMP JUMPDEST SWAP1 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x12 DUP2 GT ISZERO PUSH2 0x93E JUMPI PUSH1 0x11 NOT ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x702 JUMPI PUSH2 0x785 PUSH2 0x78B SWAP3 PUSH2 0x716 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x964 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x96A JUMPI JUMPDEST PUSH2 0x95C DUP2 DUP4 PUSH2 0x7DC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x815 JUMP JUMPDEST PUSH0 PUSH2 0x8F3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST TIMESTAMP SWAP1 DUP2 SUB SWAP3 POP DUP3 GT PUSH2 0x702 JUMPI MLOAD PUSH6 0xFFFFFFFFFFFF AND LT PUSH0 DUP1 PUSH2 0x8B9 JUMP JUMPDEST POP POP POP POP PUSH0 SWAP1 JUMP JUMPDEST SWAP4 POP SWAP1 POP PUSH1 0xA0 DUP4 RETURNDATASIZE PUSH1 0xA0 GT PUSH2 0x9F5 JUMPI JUMPDEST DUP2 PUSH2 0x9C4 PUSH1 0xA0 SWAP4 DUP4 PUSH2 0x7DC JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xE9 JUMPI PUSH2 0x9D5 DUP4 PUSH2 0x7FE JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x9EC PUSH1 0x80 PUSH1 0x60 DUP7 ADD MLOAD SWAP6 ADD PUSH2 0x7FE JUMP JUMPDEST POP SWAP3 SWAP1 PUSH0 PUSH2 0x89D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x9B7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7C8 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA1F DUP3 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0xA2C PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x7DC JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0xA3D PUSH1 0x1F NOT SWAP2 PUSH2 0x9FD JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xA57 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xE9 JUMPI SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xA57 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x702 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 PUSH2 0xAB9 JUMPI POP POP BALANCE SWAP1 PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH2 0x971 JUMPI PUSH0 SWAP1 PUSH2 0xAFE JUMPI JUMPDEST PUSH2 0x78B SWAP2 POP SWAP3 PUSH2 0xB32 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB2A JUMPI JUMPDEST DUP2 PUSH2 0xB18 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x7DC JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xE9 JUMPI PUSH2 0x78B SWAP1 MLOAD PUSH2 0xAF3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0xB68 JUMPI JUMPDEST POP PUSH2 0x78B JUMPI POP PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH2 0xB82 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x96A JUMPI PUSH2 0x95C DUP2 DUP4 PUSH2 0x7DC JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0xB5D JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xB9C JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xB6 SMOD PUSH24 0x37CE5A1C13AEDCA41BB52122ED0F6D44E6658CB842FBC377 0xE6 0xBE SWAP8 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1263:4791:3:-:0;;;;;;;1719:10;1273:26:0;1269:95;;1297:1;1263:4791:3;;1719:10;-1:-1:-1;;;;;;1263:4791:3;;;;;;1719:10;-1:-1:-1;;;;;1263:4791:3;;;;3052:40:0;;1297:1;3052:40;1263:4791:3;;;;;;;1269:95:0;1322:31;;;1297:1;1322:31;1297:1;1322:31;1263:4791:3;;1297:1:0;1322:31;1263:4791:3;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 1585,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_addresst_array_address_dyn_calldata": {
									"entryPoint": 1656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_array_address_dyn_calldata": {
									"entryPoint": 1607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_uint80_fromMemory": {
									"entryPoint": 2046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint8_fromMemory": {
									"entryPoint": 2069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_and_zero_memory_array_array_uint256_dyn": {
									"entryPoint": 2581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 2557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"calldata_array_index_access_address_dyn_calldata": {
									"entryPoint": 2631,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 2707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_uint256": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_rational_by_uint8": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_mul_uint256": {
									"entryPoint": 1775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_5343": {
									"entryPoint": 1964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_balanceOf": {
									"entryPoint": 2720,
									"id": 415,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"fun_checkOwner": {
									"entryPoint": 2953,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_decimals": {
									"entryPoint": 2866,
									"id": 819,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_priceUsd1e18": {
									"entryPoint": 2094,
									"id": 592,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_valueUsd1e18": {
									"entryPoint": 1861,
									"id": 641,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"memory_array_index_access_uint256_dyn": {
									"entryPoint": 2687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"read_from_calldatat_address": {
									"entryPoint": 2667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c9081632fba4aa9146105e4575080636815d0df146105bd578063715018a6146105665780638da5cb5b1461053f5780639c03ef5d14610514578063a0cf0aea146104fa578063c740e8f9146103f3578063e098e8441461030d578063efcab8ae1461023c578063f0854de814610172578063f2fde38b146100ed5763f7888aec146100a0575f80fd5b346100e95760403660031901126100e9576100b9610631565b6024356001600160a01b03811681036100e9576100da60ff91604093610aa0565b83519182529091166020820152f35b5f80fd5b346100e95760203660031901126100e957610106610631565b61010e610b89565b6001600160a01b0316801561015f575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b346100e95761018036610678565b91905f9061018d84610a15565b9261019785610a15565b945f925b8184106101d7576101bf86866101cd8a6040519485946060865260608601906106bc565b9084820360208601526106bc565b9060408301520390f35b909192936102326001916102206102006101fa6101f58a8989610a47565b610a6b565b88610aa0565b508061020c8a8c610a7f565b5261021b6101f58a8989610a47565b610745565b908161022c898c610a7f565b52610a93565b940192919061019b565b346100e95760403660031901126100e95760043567ffffffffffffffff81116100e95761026d903690600401610647565b60243567ffffffffffffffff81116100e95761028d903690600401610647565b92905f935f5b8481106102a557602086604051908152f35b5f5b8281106102b75750600101610293565b9291909460016102ff81986102f96102ea6102d66101f58c888d610a47565b6102e46101f58b8a8c610a47565b90610aa0565b5061021b6101f58a898b610a47565b90610a93565b9401909591929396506102a7565b346100e95761031b36610678565b909161032682610a15565b92610330836109fd565b9161033e60405193846107dc565b83835261034a846109fd565b602084019490601f19013686375f5b8181106103b85761037c87878760206040519485946040865260408601906106bc565b918483038286015251918281520191905f5b81811061039c575050500390f35b825160ff1684528594506020938401939092019160010161038e565b806103d26103cc6101f56001948689610a47565b85610aa0565b60ff6103de848a610a7f565b911690526103ec828a610a7f565b5201610359565b346100e95760603660031901126100e95761040c610631565b6024356001600160a01b03811691908290036100e95760443565ffffffffffff81168091036100e95761043d610b89565b82156104cc5760207f0c3bdaa6ed090ed87c8e706ce5aa638bf3b37d80f743c5ebb168e3f86be0b44d91604051610473816107ac565b8581528281018281526001600160a01b039586165f8181526001865260409081902093518454935165ffffffffffff60a01b60a09190911b1698166001600160d01b0319909316929092179690961790915551908152a3005b60405162461bcd60e51b81526020600482015260066024820152650466565643d360d41b6044820152606490fd5b346100e9575f3660031901126100e95760206040515f8152f35b346100e95760203660031901126100e9576020610537610532610631565b61082e565b604051908152f35b346100e9575f3660031901126100e9575f546040516001600160a01b039091168152602090f35b346100e9575f3660031901126100e95761057e610b89565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100e95760403660031901126100e95760206105376105db610631565b60243590610745565b346100e95760203660031901126100e9576040906001600160a01b03610608610631565b165f52600160205265ffffffffffff825f205460018060a01b038116835260a01c166020820152f35b600435906001600160a01b03821682036100e957565b9181601f840112156100e95782359167ffffffffffffffff83116100e9576020808501948460051b0101116100e957565b9060406003198301126100e9576004356001600160a01b03811681036100e957916024359067ffffffffffffffff82116100e9576106b891600401610647565b9091565b90602080835192838152019201905f5b8181106106d95750505090565b82518452602093840193909201916001016106cc565b8181029291811591840414171561070257565b634e487b7160e01b5f52601160045260245ffd5b60ff16604d811161070257600a0a90565b8115610731570490565b634e487b7160e01b5f52601260045260245ffd5b9061074f8261082e565b801580156107a4575b61079d5761078b926107859161077f916001600160a01b03811661078e57506012936106ef565b91610716565b90610727565b90565b61079790610b32565b936106ef565b5050505f90565b508115610758565b6040810190811067ffffffffffffffff8211176107c857604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff8211176107c857604052565b519069ffffffffffffffffffff821682036100e957565b908160209103126100e9575160ff811681036100e95790565b60018060a01b03165f52600160205260405f206040519061084e826107ac565b549060018060a01b0382169182825265ffffffffffff602083019160a01c168152821561079d5760a060049360405194858092633fabe5a360e21b82525afa908115610971575f935f926109a7575b505f84131561099f5765ffffffffffff81511615159182610982575b505061097c575160405163313ce56760e01b815290602090829060049082906001600160a01b03165afa80156109715760ff915f91610942575b5016601281101561091c576012039060ff82116107025761091661078b92610716565b906106ef565b601281111561093e57601119019060ff82116107025761078561078b92610716565b5090565b610964915060203d60201161096a575b61095c81836107dc565b810190610815565b5f6108f3565b503d610952565b6040513d5f823e3d90fd5b50505f90565b4290810392508211610702575165ffffffffffff16105f806108b9565b505050505f90565b9350905060a0833d60a0116109f5575b816109c460a093836107dc565b810103126100e9576109d5836107fe565b5060208301516109ec6080606086015195016107fe565b5092905f61089d565b3d91506109b7565b67ffffffffffffffff81116107c85760051b60200190565b90610a1f826109fd565b610a2c60405191826107dc565b8281528092610a3d601f19916109fd565b0190602036910137565b9190811015610a575760051b0190565b634e487b7160e01b5f52603260045260245ffd5b356001600160a01b03811681036100e95790565b8051821015610a575760209160051b010190565b9190820180921161070257565b906001600160a01b03811680610ab95750503190601290565b6040516370a0823160e01b81526001600160a01b03909316600484015290929190602090829060249082905afa8015610971575f90610afe575b61078b915092610b32565b506020813d602011610b2a575b81610b18602093836107dc565b810103126100e95761078b9051610af3565b3d9150610b0b565b60405163313ce56760e01b815290602090829060049082906001600160a01b03165afa5f9181610b68575b5061078b5750601290565b610b8291925060203d60201161096a5761095c81836107dc565b905f610b5d565b5f546001600160a01b03163303610b9c57565b63118cdaa760e01b5f523360045260245ffdfea2646970667358221220bbb6077737ce5a1c13aedca41bb52122ed0f6d44e6658cb842fbc377e6be97b364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2FBA4AA9 EQ PUSH2 0x5E4 JUMPI POP DUP1 PUSH4 0x6815D0DF EQ PUSH2 0x5BD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0x9C03EF5D EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xA0CF0AEA EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xC740E8F9 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xE098E844 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xEFCAB8AE EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xF0854DE8 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xED JUMPI PUSH4 0xF7888AEC EQ PUSH2 0xA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0xB9 PUSH2 0x631 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xE9 JUMPI PUSH2 0xDA PUSH1 0xFF SWAP2 PUSH1 0x40 SWAP4 PUSH2 0xAA0 JUMP JUMPDEST DUP4 MLOAD SWAP2 DUP3 MSTORE SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x106 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x10E PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x15F JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH2 0x180 CALLDATASIZE PUSH2 0x678 JUMP JUMPDEST SWAP2 SWAP1 PUSH0 SWAP1 PUSH2 0x18D DUP5 PUSH2 0xA15 JUMP JUMPDEST SWAP3 PUSH2 0x197 DUP6 PUSH2 0xA15 JUMP JUMPDEST SWAP5 PUSH0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1D7 JUMPI PUSH2 0x1BF DUP7 DUP7 PUSH2 0x1CD DUP11 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x60 DUP7 MSTORE PUSH1 0x60 DUP7 ADD SWAP1 PUSH2 0x6BC JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x6BC JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x232 PUSH1 0x1 SWAP2 PUSH2 0x220 PUSH2 0x200 PUSH2 0x1FA PUSH2 0x1F5 DUP11 DUP10 DUP10 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST DUP9 PUSH2 0xAA0 JUMP JUMPDEST POP DUP1 PUSH2 0x20C DUP11 DUP13 PUSH2 0xA7F JUMP JUMPDEST MSTORE PUSH2 0x21B PUSH2 0x1F5 DUP11 DUP10 DUP10 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x22C DUP10 DUP13 PUSH2 0xA7F JUMP JUMPDEST MSTORE PUSH2 0xA93 JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x19B JUMP JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE9 JUMPI PUSH2 0x26D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x647 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE9 JUMPI PUSH2 0x28D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x647 JUMP JUMPDEST SWAP3 SWAP1 PUSH0 SWAP4 PUSH0 JUMPDEST DUP5 DUP2 LT PUSH2 0x2A5 JUMPI PUSH1 0x20 DUP7 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2B7 JUMPI POP PUSH1 0x1 ADD PUSH2 0x293 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP5 PUSH1 0x1 PUSH2 0x2FF DUP2 SWAP9 PUSH2 0x2F9 PUSH2 0x2EA PUSH2 0x2D6 PUSH2 0x1F5 DUP13 DUP9 DUP14 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x1F5 DUP12 DUP11 DUP13 PUSH2 0xA47 JUMP JUMPDEST SWAP1 PUSH2 0xAA0 JUMP JUMPDEST POP PUSH2 0x21B PUSH2 0x1F5 DUP11 DUP10 DUP12 PUSH2 0xA47 JUMP JUMPDEST SWAP1 PUSH2 0xA93 JUMP JUMPDEST SWAP5 ADD SWAP1 SWAP6 SWAP2 SWAP3 SWAP4 SWAP7 POP PUSH2 0x2A7 JUMP JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH2 0x31B CALLDATASIZE PUSH2 0x678 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x326 DUP3 PUSH2 0xA15 JUMP JUMPDEST SWAP3 PUSH2 0x330 DUP4 PUSH2 0x9FD JUMP JUMPDEST SWAP2 PUSH2 0x33E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x7DC JUMP JUMPDEST DUP4 DUP4 MSTORE PUSH2 0x34A DUP5 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x20 DUP5 ADD SWAP5 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP7 CALLDATACOPY PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3B8 JUMPI PUSH2 0x37C DUP8 DUP8 DUP8 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x40 DUP7 MSTORE PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x6BC JUMP JUMPDEST SWAP2 DUP5 DUP4 SUB DUP3 DUP7 ADD MSTORE MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x39C JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0xFF AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH2 0x3D2 PUSH2 0x3CC PUSH2 0x1F5 PUSH1 0x1 SWAP5 DUP7 DUP10 PUSH2 0xA47 JUMP JUMPDEST DUP6 PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0xFF PUSH2 0x3DE DUP5 DUP11 PUSH2 0xA7F JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH2 0x3EC DUP3 DUP11 PUSH2 0xA7F JUMP JUMPDEST MSTORE ADD PUSH2 0x359 JUMP JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x40C PUSH2 0x631 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0xE9 JUMPI PUSH1 0x44 CALLDATALOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0xE9 JUMPI PUSH2 0x43D PUSH2 0xB89 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x4CC JUMPI PUSH1 0x20 PUSH32 0xC3BDAA6ED090ED87C8E706CE5AA638BF3B37D80F743C5EBB168E3F86BE0B44D SWAP2 PUSH1 0x40 MLOAD PUSH2 0x473 DUP2 PUSH2 0x7AC JUMP JUMPDEST DUP6 DUP2 MSTORE DUP3 DUP2 ADD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 MLOAD DUP5 SLOAD SWAP4 MLOAD PUSH6 0xFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL AND SWAP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x466565643D3 PUSH1 0xD4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x20 PUSH2 0x537 PUSH2 0x532 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x57E PUSH2 0xB89 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x20 PUSH2 0x537 PUSH2 0x5DB PUSH2 0x631 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x745 JUMP JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x608 PUSH2 0x631 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH6 0xFFFFFFFFFFFF DUP3 PUSH0 KECCAK256 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP4 MSTORE PUSH1 0xA0 SHR AND PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE9 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE9 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE9 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0xE9 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xE9 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE9 JUMPI PUSH2 0x6B8 SWAP2 PUSH1 0x4 ADD PUSH2 0x647 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x6D9 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x6CC JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x702 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0x702 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x731 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH2 0x74F DUP3 PUSH2 0x82E JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x7A4 JUMPI JUMPDEST PUSH2 0x79D JUMPI PUSH2 0x78B SWAP3 PUSH2 0x785 SWAP2 PUSH2 0x77F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x78E JUMPI POP PUSH1 0x12 SWAP4 PUSH2 0x6EF JUMP JUMPDEST SWAP2 PUSH2 0x716 JUMP JUMPDEST SWAP1 PUSH2 0x727 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x797 SWAP1 PUSH2 0xB32 JUMP JUMPDEST SWAP4 PUSH2 0x6EF JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7C8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7C8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xE9 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xE9 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0xE9 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x84E DUP3 PUSH2 0x7AC JUMP JUMPDEST SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 DUP3 DUP3 MSTORE PUSH6 0xFFFFFFFFFFFF PUSH1 0x20 DUP4 ADD SWAP2 PUSH1 0xA0 SHR AND DUP2 MSTORE DUP3 ISZERO PUSH2 0x79D JUMPI PUSH1 0xA0 PUSH1 0x4 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x971 JUMPI PUSH0 SWAP4 PUSH0 SWAP3 PUSH2 0x9A7 JUMPI JUMPDEST POP PUSH0 DUP5 SGT ISZERO PUSH2 0x99F JUMPI PUSH6 0xFFFFFFFFFFFF DUP2 MLOAD AND ISZERO ISZERO SWAP2 DUP3 PUSH2 0x982 JUMPI JUMPDEST POP POP PUSH2 0x97C JUMPI MLOAD PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x971 JUMPI PUSH1 0xFF SWAP2 PUSH0 SWAP2 PUSH2 0x942 JUMPI JUMPDEST POP AND PUSH1 0x12 DUP2 LT ISZERO PUSH2 0x91C JUMPI PUSH1 0x12 SUB SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x702 JUMPI PUSH2 0x916 PUSH2 0x78B SWAP3 PUSH2 0x716 JUMP JUMPDEST SWAP1 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x12 DUP2 GT ISZERO PUSH2 0x93E JUMPI PUSH1 0x11 NOT ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x702 JUMPI PUSH2 0x785 PUSH2 0x78B SWAP3 PUSH2 0x716 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x964 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x96A JUMPI JUMPDEST PUSH2 0x95C DUP2 DUP4 PUSH2 0x7DC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x815 JUMP JUMPDEST PUSH0 PUSH2 0x8F3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST TIMESTAMP SWAP1 DUP2 SUB SWAP3 POP DUP3 GT PUSH2 0x702 JUMPI MLOAD PUSH6 0xFFFFFFFFFFFF AND LT PUSH0 DUP1 PUSH2 0x8B9 JUMP JUMPDEST POP POP POP POP PUSH0 SWAP1 JUMP JUMPDEST SWAP4 POP SWAP1 POP PUSH1 0xA0 DUP4 RETURNDATASIZE PUSH1 0xA0 GT PUSH2 0x9F5 JUMPI JUMPDEST DUP2 PUSH2 0x9C4 PUSH1 0xA0 SWAP4 DUP4 PUSH2 0x7DC JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xE9 JUMPI PUSH2 0x9D5 DUP4 PUSH2 0x7FE JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x9EC PUSH1 0x80 PUSH1 0x60 DUP7 ADD MLOAD SWAP6 ADD PUSH2 0x7FE JUMP JUMPDEST POP SWAP3 SWAP1 PUSH0 PUSH2 0x89D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x9B7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7C8 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA1F DUP3 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0xA2C PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x7DC JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0xA3D PUSH1 0x1F NOT SWAP2 PUSH2 0x9FD JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xA57 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xE9 JUMPI SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xA57 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x702 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 PUSH2 0xAB9 JUMPI POP POP BALANCE SWAP1 PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH2 0x971 JUMPI PUSH0 SWAP1 PUSH2 0xAFE JUMPI JUMPDEST PUSH2 0x78B SWAP2 POP SWAP3 PUSH2 0xB32 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB2A JUMPI JUMPDEST DUP2 PUSH2 0xB18 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x7DC JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xE9 JUMPI PUSH2 0x78B SWAP1 MLOAD PUSH2 0xAF3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0xB68 JUMPI JUMPDEST POP PUSH2 0x78B JUMPI POP PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH2 0xB82 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x96A JUMPI PUSH2 0x95C DUP2 DUP4 PUSH2 0x7DC JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0xB5D JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xB9C JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xB6 SMOD PUSH24 0x37CE5A1C13AEDCA41BB52122ED0F6D44E6658CB842FBC377 0xE6 0xBE SWAP8 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1263:4791:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1263:4791:3;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1263:4791:3;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1263:4791:3;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;1263:4791:3;2627:22:0;;2623:91;;1263:4791:3;;;-1:-1:-1;;;;;;1263:4791:3;;;;;;-1:-1:-1;;;;;1263:4791:3;;3052:40:0;;1263:4791:3;3052:40:0;1263:4791:3;2623:91:0;2672:31;;;1263:4791:3;2672:31:0;1263:4791:3;;;;;2672:31:0;1263:4791:3;;;;;;;:::i;:::-;;;;4809:18;;;;:::i;:::-;4849;;;;:::i;:::-;4883:9;1263:4791;4878:235;4894:7;;;;;;1263:4791;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;4903:3;4954:9;;;;5085:17;1263:4791;4954:9;5015:26;4937:27;4954:9;;;;;;:::i;:::-;;:::i;:::-;4937:27;;:::i;:::-;4978:11;;;;;;:::i;:::-;1263:4791;5028:9;;;;;;:::i;:::-;5015:26;:::i;:::-;5055:16;;;;;;:::i;:::-;1263:4791;5085:17;:::i;:::-;4903:3;1263:4791;4883:9;;;;;1263:4791;;;;;;-1:-1:-1;;1263:4791:3;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;5504:9;1263:4791;5515:8;;;;;;1263:4791;;;;;;;;5525:3;1263:4791;5560:8;;;;;;5525:3;1263:4791;;5504:9;;5570:3;5618:9;;;;1263:4791;5657:42;5618:9;;5673:26;5608:31;5618:9;;;;;;:::i;:::-;5629;;;;;;:::i;:::-;5608:31;;:::i;:::-;5686:9;;;;;;;:::i;5673:26::-;5657:42;;:::i;:::-;5570:3;1263:4791;5549:9;;;;;;;;;1263:4791;;;;;;;:::i;:::-;2913:18;;;;;:::i;:::-;1263:4791;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1263:4791:3;;;;;2990:7;;;;;;1263:4791;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1263:4791:3;;;;;;;;;;;;;2999:3;3056:9;3039:27;3056:9;;1263:4791;3056:9;;;;:::i;:::-;3039:27;;:::i;:::-;1263:4791;3018:48;;;;:::i;:::-;1263:4791;;;;3018:48;;;;:::i;:::-;1263:4791;;2979:9;;1263:4791;;;;;;-1:-1:-1;;1263:4791:3;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1263:4791:3;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;2194:27:3;;1263:4791;;;2299:40;1263:4791;;;;;;:::i;:::-;;;;2257:27;;;1263:4791;;;-1:-1:-1;;;;;1263:4791:3;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1263:4791:3;;;;;;;;-1:-1:-1;;;;;;1263:4791:3;;;;;;;;;;;;;;;;;;2299:40;1263:4791;;;;-1:-1:-1;;;1263:4791:3;;;;;;;;;;;;-1:-1:-1;;;1263:4791:3;;;;;;;;;;;;;-1:-1:-1;;1263:4791:3;;;;;;;;;;;;;;;;;-1:-1:-1;;1263:4791:3;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;1263:4791:3;;;;;;;;-1:-1:-1;;;;;1263:4791:3;;;;;;;;;;;;;;-1:-1:-1;;1263:4791:3;;;;1500:62:0;;:::i;:::-;1263:4791:3;;;-1:-1:-1;;;;;;1263:4791:3;;;;-1:-1:-1;;;;;1263:4791:3;3052:40:0;1263:4791:3;;3052:40:0;1263:4791:3;;;;;;;-1:-1:-1;;1263:4791:3;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;1263:4791:3;;;;;;-1:-1:-1;;;;;1263:4791:3;;:::i;:::-;;;;1563:43;1263:4791;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1263:4791:3;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;1263:4791:3;;;;;;;-1:-1:-1;;;;;1263:4791:3;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;1263:4791:3;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;4131:339;;4238:19;;;:::i;:::-;4271:7;;:23;;;;4131:339;4267:37;;4435:28;;4453:9;;4436:12;;-1:-1:-1;;;;;1263:4791:3;;;;4327:41;4347:2;4327:41;4436:12;:::i;:::-;4453:9;;:::i;:::-;4435:28;;:::i;:::-;4131:339;:::o;4327:41::-;4352:16;;;:::i;:::-;4327:41;4436:12;:::i;4267:37::-;4296:8;;;1263:4791;4296:8;:::o;4271:23::-;4282:12;;;4271:23;;1263:4791;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1263:4791:3;;;;;-1:-1:-1;1263:4791:3;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;3220:756::-;1263:4791;;;;;;;;3323:5;1263:4791;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3349:31;;3345:45;;1263:4791;3442:26;1263:4791;;;;;;;;;;3442:26;;;;;;;;;1263:4791;;;3442:26;;;3220:756;3482:11;1263:4791;3482:11;;;3478:25;;1263:4791;;;;3518:18;;:65;;;;3220:756;3514:113;;;;1263:4791;;;-1:-1:-1;;;3647:19:3;;1263:4791;;;;;3442:26;;1263:4791;;-1:-1:-1;;;;;1263:4791:3;3647:19;;;;;;1263:4791;3647:19;1263:4791;3647:19;;;3220:756;-1:-1:-1;1263:4791:3;3772:2;3768:6;;3772:2;;;;1263:4791;;;;;;;3813:14;3794:34;3813:14;;:::i;:::-;3794:34;;:::i;3764:206::-;3772:2;3849:6;;3772:2;;;-1:-1:-1;;1263:4791:3;;;;;;;3894:14;3875:34;3894:14;;:::i;3845:125::-;3940:19;3845:125;3220:756::o;3647:19::-;;;;1263:4791;3647:19;1263:4791;3647:19;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1263:4791;;;;;;;;;3514:113;3599:8;;1263:4791;3599:8;:::o;3518:65::-;3540:15;1263:4791;;;;-1:-1:-1;1263:4791:3;;;;;;;-1:-1:-1;3518:65:3;;;;3478:25;3495:8;;;;1263:4791;3495:8;:::o;3442:26::-;;;;;1263:4791;3442:26;;1263:4791;3442:26;;;;;;1263:4791;3442:26;;;:::i;:::-;;;1263:4791;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;3442:26;;;;;;;;-1:-1:-1;3442:26:3;;1263:4791;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1263:4791:3;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;2396:300::-;;-1:-1:-1;;;;;1263:4791:3;;2504:15;1263:4791;;2541:13;;;2568:8;2574:2;2500:190;2396:300::o;2500:190::-;1263:4791;;-1:-1:-1;;;2613:30:3;;-1:-1:-1;;;;;1263:4791:3;;;2613:30;;;1263:4791;;;;;;;;;2613:30;;1263:4791;;2613:30;;;;;;1398:1;2613:30;;;2500:190;2663:16;2607:36;;2663:16;;:::i;2613:30::-;;1263:4791;2613:30;;1263:4791;2613:30;;;;;;1263:4791;2613:30;;;:::i;:::-;;;1263:4791;;;;2663:16;1263:4791;;2613:30;;;;;-1:-1:-1;2613:30:3;;5781:271;1263:4791;;-1:-1:-1;;;5925:32:3;;1263:4791;5925:32;;1263:4791;;5925:32;;1263:4791;;-1:-1:-1;;;;;1263:4791:3;5925:32;;1263:4791;;5925:32;;;5781:271;-1:-1:-1;5921:125:3;;6029:6;6033:2;5921:125;5781:271::o;5925:32::-;;;;;;;;;;;;;;;:::i;:::-;;;;;1796:162:0;1710:6;1263:4791:3;-1:-1:-1;;;;;1263:4791:3;735:10:2;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:2;1901:40:0;1263:4791:3;;1710:6:0;1901:40"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "609000",
								"executionCost": "26449",
								"totalCost": "635449"
							},
							"external": {
								"NATIVE()": "262",
								"balanceOf(address,address)": "infinite",
								"balancesOf(address,address[])": "infinite",
								"feeds(address)": "2446",
								"owner()": "2345",
								"portfolioOf(address,address[])": "infinite",
								"priceUsd1e18(address)": "infinite",
								"renounceOwnership()": "28094",
								"setFeed(address,address,uint48)": "28909",
								"totalValueUsd(address[],address[])": "infinite",
								"transferOwnership(address)": "28390",
								"valueUsd1e18(address,uint256)": "infinite"
							},
							"internal": {
								"_decimals(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1263,
									"end": 6054,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1719,
									"end": 1729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1719,
									"end": 1729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1719,
									"end": 1729,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "RETURN",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 6054,
									"name": "REVERT",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bbb6077737ce5a1c13aedca41bb52122ed0f6d44e6658cb842fbc377e6be97b364736f6c634300081a0033",
									".code": [
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "2FBA4AA9"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "6815D0DF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "9C03EF5D"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "A0CF0AEA"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "C740E8F9"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "E098E844"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "EFCAB8AE"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "F0854DE8"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "F7888AEC"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF7"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4827,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4809,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4809,
											"end": 4827,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4809,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 4809,
											"end": 4827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4809,
											"end": 4827,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4809,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4867,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4849,
											"end": 4867,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 4849,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4867,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4849,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4883,
											"end": 4892,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 5113,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 4901,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4894,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 4901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 4901,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 4901,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4894,
											"end": 4901,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 4906,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4903,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5015,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4937,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 4954,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4954,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4937,
											"end": 4964,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 4937,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4937,
											"end": 4964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4937,
											"end": 4964,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4937,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4978,
											"end": 4989,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4978,
											"end": 4989,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4978,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4978,
											"end": 4989,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 4978,
											"end": 4989,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 4978,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 4978,
											"end": 4989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4978,
											"end": 4989,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4978,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 5028,
											"end": 5037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5015,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5015,
											"end": 5041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5015,
											"end": 5041,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5015,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5055,
											"end": 5071,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5055,
											"end": 5071,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5055,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 5055,
											"end": 5071,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5055,
											"end": 5071,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 5055,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 5055,
											"end": 5071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5055,
											"end": 5071,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 5055,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 5085,
											"end": 5102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5102,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5085,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 4906,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4883,
											"end": 4892,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4883,
											"end": 4892,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4883,
											"end": 4892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4883,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4883,
											"end": 4892,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5504,
											"end": 5513,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5523,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5515,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5515,
											"end": 5523,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5515,
											"end": 5523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5515,
											"end": 5523,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5515,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5515,
											"end": 5523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5528,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5525,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5568,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 5560,
											"end": 5568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5560,
											"end": 5568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5560,
											"end": 5568,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5560,
											"end": 5568,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5560,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 5560,
											"end": 5568,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5504,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5504,
											"end": 5513,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5570,
											"end": 5573,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 5570,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5627,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5627,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5627,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5627,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5657,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5618,
											"end": 5627,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5627,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 5673,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5608,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 5618,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5618,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5618,
											"end": 5627,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5627,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5627,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 5618,
											"end": 5627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5627,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5618,
											"end": 5627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5629,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5629,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5629,
											"end": 5638,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 5629,
											"end": 5638,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 5629,
											"end": 5638,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 5629,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 5629,
											"end": 5638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5629,
											"end": 5638,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5629,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5608,
											"end": 5639,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5608,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5608,
											"end": 5639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5608,
											"end": 5639,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 5608,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 5695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5686,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5686,
											"end": 5695,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 5695,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 5695,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 5686,
											"end": 5695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5673,
											"end": 5699,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5673,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 5657,
											"end": 5699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5699,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5657,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5570,
											"end": 5573,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5549,
											"end": 5558,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5549,
											"end": 5558,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 5549,
											"end": 5558,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5549,
											"end": 5558,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5549,
											"end": 5558,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5549,
											"end": 5558,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 5549,
											"end": 5558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5549,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 5549,
											"end": 5558,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2913,
											"end": 2931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2999,
											"end": 3002,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2999,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3039,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3056,
											"end": 3065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3039,
											"end": 3066,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3039,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3039,
											"end": 3066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3039,
											"end": 3066,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3039,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3018,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3018,
											"end": 3066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3066,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3018,
											"end": 3066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3066,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3018,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3018,
											"end": 3066,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3066,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3018,
											"end": 3066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3066,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3018,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2979,
											"end": 2988,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2194,
											"end": 2221,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2221,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2299,
											"end": 2339,
											"name": "PUSH",
											"source": 3,
											"value": "C3BDAA6ED090ED87C8E706CE5AA638BF3B37D80F743C5EBB168E3F86BE0B44D"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2257,
											"end": 2284,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2257,
											"end": 2284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2257,
											"end": 2284,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2339,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "466565643D3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1606,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4D"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4470,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 4131,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4238,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4238,
											"end": 4257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4238,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 4238,
											"end": 4257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4238,
											"end": 4257,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4238,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4278,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4278,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4294,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4294,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 4271,
											"end": 4294,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4470,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4131,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4267,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4267,
											"end": 4304,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4435,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 4435,
											"end": 4463,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 4453,
											"end": 4462,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 4436,
											"end": 4448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4368,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4347,
											"end": 4349,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4327,
											"end": 4368,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4436,
											"end": 4448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4448,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 4436,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4462,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4453,
											"end": 4462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4462,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 4453,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4435,
											"end": 4463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4435,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4435,
											"end": 4463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4435,
											"end": 4463,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 4435,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4368,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4327,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4352,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4352,
											"end": 4368,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4352,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4352,
											"end": 4368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4352,
											"end": 4368,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4352,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4368,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4436,
											"end": 4448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4267,
											"end": 4304,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4267,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4296,
											"end": 4304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4294,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 4271,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4271,
											"end": 4294,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3976,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3220,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3328,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3349,
											"end": 3380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3349,
											"end": 3380,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3345,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 3345,
											"end": 3390,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "3FABE5A3"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "E2"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3976,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3220,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3493,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3493,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3493,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3583,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3518,
											"end": 3583,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3976,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3220,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3514,
											"end": 3627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3514,
											"end": 3627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3514,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3514,
											"end": 3627,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3976,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 3220,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3774,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3774,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3772,
											"end": 3774,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3774,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 3794,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 3813,
											"end": 3827,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3813,
											"end": 3827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3827,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 3813,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3794,
											"end": 3828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3794,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3794,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3970,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3764,
											"end": 3970,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3774,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3849,
											"end": 3855,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3855,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3774,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 3772,
											"end": 3774,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3894,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 3875,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 3894,
											"end": 3908,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3894,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3894,
											"end": 3908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 3970,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 3845,
											"end": 3970,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 3959,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3647,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3647,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 3647,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3514,
											"end": 3627,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3514,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3583,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3518,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3540,
											"end": 3555,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 3518,
											"end": 3583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3583,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3518,
											"end": 3583,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3442,
											"end": 3468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 3442,
											"end": 3468,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2396,
											"end": 2696,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2396,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2396,
											"end": 2696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2554,
											"name": "BALANCE",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2574,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2500,
											"end": 2690,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2396,
											"end": 2696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2690,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 2500,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1398,
											"end": 1399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2690,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 2500,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2607,
											"end": 2643,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2607,
											"end": 2643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2679,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2663,
											"end": 2679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2613,
											"end": 2643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 2613,
											"end": 2643,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5781,
											"end": 6052,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 5781,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5781,
											"end": 6052,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 5781,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5921,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5921,
											"end": 6046,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6029,
											"end": 6035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6033,
											"end": 6035,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5921,
											"end": 6046,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5781,
											"end": 6052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 5925,
											"end": 5957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 5925,
											"end": 5957,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA7"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 6054,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NATIVE()": "a0cf0aea",
							"balanceOf(address,address)": "f7888aec",
							"balancesOf(address,address[])": "e098e844",
							"feeds(address)": "2fba4aa9",
							"owner()": "8da5cb5b",
							"portfolioOf(address,address[])": "f0854de8",
							"priceUsd1e18(address)": "9c03ef5d",
							"renounceOwnership()": "715018a6",
							"setFeed(address,address,uint48)": "c740e8f9",
							"totalValueUsd(address[],address[])": "efcab8ae",
							"transferOwnership(address)": "f2fde38b",
							"valueUsd1e18(address,uint256)": "6815d0df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"heartbeat\",\"type\":\"uint48\"}],\"name\":\"FeedSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"dec\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"balancesOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"bals\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8[]\",\"name\":\"decs\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeds\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"feed\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"heartbeat\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"portfolioOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"bals\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"usdValues\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"totalUsd1e18\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"priceUsd1e18\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"p\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"feed\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"heartbeat\",\"type\":\"uint48\"}],\"name\":\"setFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"vaults\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"totalValueUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalUsd1e18\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"valueUsd1e18\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setFeed(address,address,uint48)\":{\"params\":{\"feed\":\"Chainlink aggregator returning USD price\",\"heartbeat\":\"Max allowed staleness in seconds (0 = no check)\",\"token\":\"ERC20 address or address(0) for native token\"}},\"totalValueUsd(address[],address[])\":{\"details\":\"Useful for team or leaderboard views.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"valueUsd1e18(address,uint256)\":{\"details\":\"balance decimals = token decimals; price decimals = 1e18\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"portfolioOf(address,address[])\":{\"notice\":\"Return per-token balances and USD values for a single vault.\"},\"priceUsd1e18(address)\":{\"notice\":\"Return USD price in 1e18 for a token (0 if no feed).\"},\"setFeed(address,address,uint48)\":{\"notice\":\"Register or update the Chainlink price feed for a token.\"},\"totalValueUsd(address[],address[])\":{\"notice\":\"Aggregate total USD value across many vaults and tokens.\"},\"valueUsd1e18(address,uint256)\":{\"notice\":\"Compute USD value (1e18) for a (balance, token).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":\"PortfolioViewer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol\":{\"keccak256\":\"0xc407103f21338a82c9722d38fdc33d61a5135fc1282937e325acb06adc763b96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39606c7c59dfa669868bb75cf1ab8e719ee3ebe75d6e05aa4f7fe1704bf71d6\",\"dweb:/ipfs/QmTQ4yKoJc2xHQehwFYCGMpb489U7uw4tvnqVPYGAQmZUj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol:PortfolioViewer",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 312,
								"contract": "src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol:PortfolioViewer",
								"label": "feeds",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(FeedConfig)307_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)293": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(FeedConfig)307_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct PortfolioViewer.FeedConfig)",
								"numberOfBytes": "32",
								"value": "t_struct(FeedConfig)307_storage"
							},
							"t_struct(FeedConfig)307_storage": {
								"encoding": "inplace",
								"label": "struct PortfolioViewer.FeedConfig",
								"members": [
									{
										"astId": 304,
										"contract": "src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol:PortfolioViewer",
										"label": "feed",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(AggregatorV3Interface)293"
									},
									{
										"astId": 306,
										"contract": "src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol:PortfolioViewer",
										"label": "heartbeat",
										"offset": 20,
										"slot": "0",
										"type": "t_uint48"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint48": {
								"encoding": "inplace",
								"label": "uint48",
								"numberOfBytes": "6"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"portfolioOf(address,address[])": {
								"notice": "Return per-token balances and USD values for a single vault."
							},
							"priceUsd1e18(address)": {
								"notice": "Return USD price in 1e18 for a token (0 if no feed)."
							},
							"setFeed(address,address,uint48)": {
								"notice": "Register or update the Chainlink price feed for a token."
							},
							"totalValueUsd(address[],address[])": {
								"notice": "Aggregate total USD value across many vaults and tokens."
							},
							"valueUsd1e18(address,uint256)": {
								"notice": "Compute USD value (1e18) for a (balance, token)."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "215:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "397:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "406:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "428:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "448:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:1"
									},
									"src": "391:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "628:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "637:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "660:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "685:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:1"
									},
									"src": "622:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "822:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:1"
									},
									"scope": 225,
									"src": "776:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "932:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "972:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:1"
									},
									"scope": 225,
									"src": "913:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1223:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1235:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1268:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:1"
									},
									"scope": 225,
									"src": "1205:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1568:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1583:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1623:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:1"
									},
									"scope": 225,
									"src": "1549:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2327:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2344:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2377:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:1"
									},
									"scope": 225,
									"src": "2310:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2713:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2727:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2739:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2772:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:1"
									},
									"scope": 225,
									"src": "2691:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "205:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2675:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol": {
				"ast": {
					"absolutePath": "src/Contract Architecture/Trading & Portfolio Management/PortfolioViewer.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							293
						],
						"IERC20": [
							225
						],
						"IERC20Metadata": [
							269
						],
						"Ownable": [
							147
						],
						"PortfolioViewer": [
							820
						]
					},
					"id": 821,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 148,
							"src": "597:67:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 258,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "605:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 261,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 226,
							"src": "665:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 260,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "673:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 262,
										"name": "IERC20",
										"nameLocations": [
											"765:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "765:6:3"
									},
									"id": 263,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 269,
							"linearizedBaseContracts": [
								269,
								225
							],
							"name": "IERC20Metadata",
							"nameLocation": "747:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "787:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "821:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 265,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "821:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:7:3"
									},
									"scope": 269,
									"src": "778:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 821,
							"src": "737:93:3",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 293,
							"linearizedBaseContracts": [
								293
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "842:21:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "feaf968c",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "879:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "894:2:3"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "964:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "957:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 271,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "957:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "992:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "985:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 273,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "985:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "1035:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1027:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "1066:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1058:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "1111:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1104:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 279,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "1104:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "943:193:3"
									},
									"scope": 293,
									"src": "870:267:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1152:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1160:2:3"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1186:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 284,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1186:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1185:7:3"
									},
									"scope": 293,
									"src": "1143:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "1207:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:3"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1244:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1244:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:3"
									},
									"scope": 293,
									"src": "1198:61:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 821,
							"src": "832:429:3",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 294,
										"name": "Ownable",
										"nameLocations": [
											"1291:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1291:7:3"
									},
									"id": 295,
									"nodeType": "InheritanceSpecifier",
									"src": "1291:7:3"
								}
							],
							"canonicalName": "PortfolioViewer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 820,
							"linearizedBaseContracts": [
								820,
								147,
								255
							],
							"name": "PortfolioViewer",
							"nameLocation": "1272:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "a0cf0aea",
									"id": 301,
									"mutability": "constant",
									"name": "NATIVE",
									"nameLocation": "1381:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "1357:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 296,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1357:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 299,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1398:1:3",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 298,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1390:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 297,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1390:7:3",
												"typeDescriptions": {}
											}
										},
										"id": 300,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1390:10:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "PortfolioViewer.FeedConfig",
									"id": 307,
									"members": [
										{
											"constant": false,
											"id": 304,
											"mutability": "mutable",
											"name": "feed",
											"nameLocation": "1457:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 307,
											"src": "1435:26:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_AggregatorV3Interface_$293",
												"typeString": "contract AggregatorV3Interface"
											},
											"typeName": {
												"id": 303,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 302,
													"name": "AggregatorV3Interface",
													"nameLocations": [
														"1435:21:3"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 293,
													"src": "1435:21:3"
												},
												"referencedDeclaration": 293,
												"src": "1435:21:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_AggregatorV3Interface_$293",
													"typeString": "contract AggregatorV3Interface"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 306,
											"mutability": "mutable",
											"name": "heartbeat",
											"nameLocation": "1478:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 307,
											"src": "1471:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 305,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "1471:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeedConfig",
									"nameLocation": "1414:10:3",
									"nodeType": "StructDefinition",
									"scope": 820,
									"src": "1407:122:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2fba4aa9",
									"id": 312,
									"mutability": "mutable",
									"name": "feeds",
									"nameLocation": "1601:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "1563:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeedConfig_$307_storage_$",
										"typeString": "mapping(address => struct PortfolioViewer.FeedConfig)"
									},
									"typeName": {
										"id": 311,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1571:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1563:30:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeedConfig_$307_storage_$",
											"typeString": "mapping(address => struct PortfolioViewer.FeedConfig)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 310,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 309,
												"name": "FeedConfig",
												"nameLocations": [
													"1582:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 307,
												"src": "1582:10:3"
											},
											"referencedDeclaration": 307,
											"src": "1582:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FeedConfig_$307_storage_ptr",
												"typeString": "struct PortfolioViewer.FeedConfig"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "0c3bdaa6ed090ed87c8e706ce5aa638bf3b37d80f743c5ebb168e3f86be0b44d",
									"id": 320,
									"name": "FeedSet",
									"nameLocation": "1619:7:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1643:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "1627:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "feed",
												"nameLocation": "1666:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "1650:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"indexed": false,
												"mutability": "mutable",
												"name": "heartbeat",
												"nameLocation": "1679:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "1672:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 317,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1672:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1626:63:3"
									},
									"src": "1613:77:3"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "1730:2:3",
										"statements": []
									},
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 323,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 325,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 322,
												"name": "Ownable",
												"nameLocations": [
													"1711:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1711:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1711:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:3"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1730:0:3"
									},
									"scope": 820,
									"src": "1696:36:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "2176:170:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 344,
																		"name": "feed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 334,
																		"src": "2202:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$293",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$293",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	],
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2194:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 342,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2194:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2194:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2219:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2211:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 346,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2211:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2211:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2194:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "466565643d30",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2223:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f737be831b774e62aaf85a0c31bde9378684c25f34c3a39444eeae56f5a66ede",
																"typeString": "literal_string \"Feed=0\""
															},
															"value": "Feed=0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f737be831b774e62aaf85a0c31bde9378684c25f34c3a39444eeae56f5a66ede",
																"typeString": "literal_string \"Feed=0\""
															}
														],
														"id": 341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2186:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2186:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "2186:46:3"
											},
											{
												"expression": {
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 354,
															"name": "feeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "2242:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeedConfig_$307_storage_$",
																"typeString": "mapping(address => struct PortfolioViewer.FeedConfig storage ref)"
															}
														},
														"id": 356,
														"indexExpression": {
															"id": 355,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2248:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2242:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeedConfig_$307_storage",
															"typeString": "struct PortfolioViewer.FeedConfig storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 358,
																"name": "feed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "2268:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$293",
																	"typeString": "contract AggregatorV3Interface"
																}
															},
															{
																"id": 359,
																"name": "heartbeat",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2274:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$293",
																	"typeString": "contract AggregatorV3Interface"
																},
																{
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															],
															"id": 357,
															"name": "FeedConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "2257:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FeedConfig_$307_storage_ptr_$",
																"typeString": "type(struct PortfolioViewer.FeedConfig storage pointer)"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2257:27:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeedConfig_$307_memory_ptr",
															"typeString": "struct PortfolioViewer.FeedConfig memory"
														}
													},
													"src": "2242:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeedConfig_$307_storage",
														"typeString": "struct PortfolioViewer.FeedConfig storage ref"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "2242:42:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 364,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2307:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 367,
																	"name": "feed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "2322:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AggregatorV3Interface_$293",
																		"typeString": "contract AggregatorV3Interface"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AggregatorV3Interface_$293",
																		"typeString": "contract AggregatorV3Interface"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2314:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2314:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2314:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "heartbeat",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "2329:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														],
														"id": 363,
														"name": "FeedSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "2299:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint48_$returns$__$",
															"typeString": "function (address,address,uint48)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2299:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "EmitStatement",
												"src": "2294:45:3"
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "1794:280:3",
										"text": " @notice Register or update the Chainlink price feed for a token.\n @param token ERC20 address or address(0) for native token\n @param feed Chainlink aggregator returning USD price\n @param heartbeat Max allowed staleness in seconds (0 = no check)"
									},
									"functionSelector": "c740e8f9",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 339,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 338,
												"name": "onlyOwner",
												"nameLocations": [
													"2166:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2166:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2166:9:3"
										}
									],
									"name": "setFeed",
									"nameLocation": "2088:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2104:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2096:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "feed",
												"nameLocation": "2133:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2111:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_AggregatorV3Interface_$293",
													"typeString": "contract AggregatorV3Interface"
												},
												"typeName": {
													"id": 333,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 332,
														"name": "AggregatorV3Interface",
														"nameLocations": [
															"2111:21:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 293,
														"src": "2111:21:3"
													},
													"referencedDeclaration": 293,
													"src": "2111:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$293",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "heartbeat",
												"nameLocation": "2146:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2139:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 335,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "2139:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:61:3"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2176:0:3"
									},
									"scope": 820,
									"src": "2079:267:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "2490:206:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 384,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "2504:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 385,
														"name": "NATIVE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "2513:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2504:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "2593:97:3",
													"statements": [
														{
															"expression": {
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "bal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "2607:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 402,
																			"name": "vault",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 375,
																			"src": "2637:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 399,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 377,
																					"src": "2620:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 398,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 225,
																				"src": "2613:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2613:13:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2627:9:3",
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 182,
																		"src": "2613:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2613:30:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2607:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 405,
															"nodeType": "ExpressionStatement",
															"src": "2607:36:3"
														},
														{
															"expression": {
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 406,
																	"name": "dec",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "2657:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 408,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "2673:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 407,
																		"name": "_decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 819,
																		"src": "2663:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint8_$",
																			"typeString": "function (address) view returns (uint8)"
																		}
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2663:16:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "2657:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 411,
															"nodeType": "ExpressionStatement",
															"src": "2657:22:3"
														}
													]
												},
												"id": 413,
												"nodeType": "IfStatement",
												"src": "2500:190:3",
												"trueBody": {
													"id": 396,
													"nodeType": "Block",
													"src": "2521:66:3",
													"statements": [
														{
															"expression": {
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 387,
																	"name": "bal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "2535:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 388,
																		"name": "vault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "2541:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2547:7:3",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "2541:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2535:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 391,
															"nodeType": "ExpressionStatement",
															"src": "2535:19:3"
														},
														{
															"expression": {
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 392,
																	"name": "dec",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "2568:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3138",
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2574:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "2568:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 395,
															"nodeType": "ExpressionStatement",
															"src": "2568:8:3"
														}
													]
												}
											}
										]
									},
									"functionSelector": "f7888aec",
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2405:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "2423:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "2415:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2438:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "2430:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2414:30:3"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "bal",
												"nameLocation": "2474:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "2466:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2466:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "dec",
												"nameLocation": "2485:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "2479:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 381,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2479:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2465:24:3"
									},
									"scope": 820,
									"src": "2396:300:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2859:224:3",
										"statements": [
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "2877:3:3",
														"nodeType": "VariableDeclaration",
														"scope": 476,
														"src": "2869:11:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2869:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"expression": {
														"id": 431,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2883:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2890:6:3",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2883:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2869:27:3"
											},
											{
												"expression": {
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 434,
														"name": "bals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "2906:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 438,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "2927:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "2913:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 435,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2917:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 436,
																"nodeType": "ArrayTypeName",
																"src": "2917:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2913:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "2906:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "2906:25:3"
											},
											{
												"expression": {
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 442,
														"name": "decs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "2941:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
															"typeString": "uint8[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 446,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "2960:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "2948:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint8[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 443,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "2952:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 444,
																"nodeType": "ArrayTypeName",
																"src": "2952:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
																	"typeString": "uint8[]"
																}
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2948:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
															"typeString": "uint8[] memory"
														}
													},
													"src": "2941:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
														"typeString": "uint8[] memory"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "2941:23:3"
											},
											{
												"body": {
													"id": 474,
													"nodeType": "Block",
													"src": "3004:73:3",
													"statements": [
														{
															"expression": {
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"baseExpression": {
																				"id": 459,
																				"name": "bals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 424,
																				"src": "3019:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 461,
																			"indexExpression": {
																				"id": 460,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 451,
																				"src": "3024:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "3019:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 462,
																				"name": "decs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 427,
																				"src": "3028:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																					"typeString": "uint8[] memory"
																				}
																			},
																			"id": 464,
																			"indexExpression": {
																				"id": 463,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 451,
																				"src": "3033:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "3028:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 465,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "3018:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																		"typeString": "tuple(uint256,uint8)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 467,
																			"name": "vault",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 417,
																			"src": "3049:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 468,
																				"name": "tokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 420,
																				"src": "3056:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																					"typeString": "address[] calldata"
																				}
																			},
																			"id": 470,
																			"indexExpression": {
																				"id": 469,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 451,
																				"src": "3063:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3056:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 466,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "3039:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$_t_uint8_$",
																			"typeString": "function (address,address) view returns (uint256,uint8)"
																		}
																	},
																	"id": 471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3039:27:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																		"typeString": "tuple(uint256,uint8)"
																	}
																},
																"src": "3018:48:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 473,
															"nodeType": "ExpressionStatement",
															"src": "3018:48:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 453,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "2990:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 454,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "2994:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2990:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 475,
												"initializationExpression": {
													"assignments": [
														451
													],
													"declarations": [
														{
															"constant": false,
															"id": 451,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2987:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 475,
															"src": "2979:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 450,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2979:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 452,
													"nodeType": "VariableDeclarationStatement",
													"src": "2979:9:3"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2999:3:3",
														"subExpression": {
															"id": 456,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "3001:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 458,
													"nodeType": "ExpressionStatement",
													"src": "2999:3:3"
												},
												"nodeType": "ForStatement",
												"src": "2974:103:3"
											}
										]
									},
									"functionSelector": "e098e844",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balancesOf",
									"nameLocation": "2711:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "2730:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2722:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2722:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "2756:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2737:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 418,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2737:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 419,
													"nodeType": "ArrayTypeName",
													"src": "2737:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2721:42:3"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "bals",
												"nameLocation": "2828:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2811:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 422,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2811:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 423,
													"nodeType": "ArrayTypeName",
													"src": "2811:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "decs",
												"nameLocation": "2849:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2834:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 425,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "2834:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 426,
													"nodeType": "ArrayTypeName",
													"src": "2834:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2810:44:3"
									},
									"scope": 820,
									"src": "2702:381:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "3289:687:3",
										"statements": [
											{
												"assignments": [
													487
												],
												"declarations": [
													{
														"constant": false,
														"id": 487,
														"mutability": "mutable",
														"name": "cfg",
														"nameLocation": "3317:3:3",
														"nodeType": "VariableDeclaration",
														"scope": 591,
														"src": "3299:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeedConfig_$307_memory_ptr",
															"typeString": "struct PortfolioViewer.FeedConfig"
														},
														"typeName": {
															"id": 486,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 485,
																"name": "FeedConfig",
																"nameLocations": [
																	"3299:10:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 307,
																"src": "3299:10:3"
															},
															"referencedDeclaration": 307,
															"src": "3299:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FeedConfig_$307_storage_ptr",
																"typeString": "struct PortfolioViewer.FeedConfig"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 491,
												"initialValue": {
													"baseExpression": {
														"id": 488,
														"name": "feeds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "3323:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeedConfig_$307_storage_$",
															"typeString": "mapping(address => struct PortfolioViewer.FeedConfig storage ref)"
														}
													},
													"id": 490,
													"indexExpression": {
														"id": 489,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3329:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3323:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeedConfig_$307_storage",
														"typeString": "struct PortfolioViewer.FeedConfig storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3299:36:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 494,
																	"name": "cfg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3357:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FeedConfig_$307_memory_ptr",
																		"typeString": "struct PortfolioViewer.FeedConfig memory"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3361:4:3",
																"memberName": "feed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 304,
																"src": "3357:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$293",
																	"typeString": "contract AggregatorV3Interface"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$293",
																	"typeString": "contract AggregatorV3Interface"
																}
															],
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3349:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 492,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3349:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3349:17:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3378:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3370:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 497,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3370:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3370:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3349:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3345:45:3",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3389:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 484,
													"id": 503,
													"nodeType": "Return",
													"src": "3382:8:3"
												}
											},
											{
												"assignments": [
													null,
													506,
													null,
													508,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "answer",
														"nameLocation": "3411:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 591,
														"src": "3404:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 505,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3404:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "updatedAt",
														"nameLocation": "3428:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 591,
														"src": "3420:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 507,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3420:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 513,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 509,
																"name": "cfg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "3442:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeedConfig_$307_memory_ptr",
																	"typeString": "struct PortfolioViewer.FeedConfig memory"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3446:4:3",
															"memberName": "feed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 304,
															"src": "3442:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$293",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3451:15:3",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 282,
														"src": "3442:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3442:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3401:67:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 514,
														"name": "answer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "3482:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3492:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3482:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"nodeType": "IfStatement",
												"src": "3478:25:3",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3502:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 484,
													"id": 518,
													"nodeType": "Return",
													"src": "3495:8:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														},
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 520,
																"name": "cfg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "3518:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeedConfig_$307_memory_ptr",
																	"typeString": "struct PortfolioViewer.FeedConfig memory"
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3522:9:3",
															"memberName": "heartbeat",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 306,
															"src": "3518:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3535:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3518:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 524,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3540:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3546:9:3",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3540:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 526,
																"name": "updatedAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "3558:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3540:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 528,
																"name": "cfg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "3570:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeedConfig_$307_memory_ptr",
																	"typeString": "struct PortfolioViewer.FeedConfig memory"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3574:9:3",
															"memberName": "heartbeat",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 306,
															"src": "3570:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"src": "3540:43:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3518:65:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 535,
												"nodeType": "IfStatement",
												"src": "3514:113:3",
												"trueBody": {
													"id": 534,
													"nodeType": "Block",
													"src": "3585:42:3",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3606:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 484,
															"id": 533,
															"nodeType": "Return",
															"src": "3599:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													537
												],
												"declarations": [
													{
														"constant": false,
														"id": 537,
														"mutability": "mutable",
														"name": "d",
														"nameLocation": "3643:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 591,
														"src": "3637:7:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 536,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3637:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 542,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 538,
																"name": "cfg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "3647:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeedConfig_$307_memory_ptr",
																	"typeString": "struct PortfolioViewer.FeedConfig memory"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3651:4:3",
															"memberName": "feed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 304,
															"src": "3647:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$293",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3656:8:3",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 287,
														"src": "3647:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3647:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3637:29:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 543,
														"name": "d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "3768:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3138",
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3772:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "3768:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 562,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "3849:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "3138",
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3853:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "3849:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 588,
														"nodeType": "Block",
														"src": "3926:44:3",
														"statements": [
															{
																"expression": {
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 581,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "3940:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 584,
																				"name": "answer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "3952:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3944:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 582,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3944:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3944:15:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3940:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 587,
																"nodeType": "ExpressionStatement",
																"src": "3940:19:3"
															}
														]
													},
													"id": 589,
													"nodeType": "IfStatement",
													"src": "3845:125:3",
													"trueBody": {
														"id": 580,
														"nodeType": "Block",
														"src": "3857:63:3",
														"statements": [
															{
																"expression": {
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 565,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "3871:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 568,
																					"name": "answer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 506,
																					"src": "3883:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3875:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 566,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3875:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3875:15:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 575,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 570,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3894:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 573,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 571,
																									"name": "d",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 537,
																									"src": "3901:1:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "3138",
																									"id": 572,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3905:2:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_18_by_1",
																										"typeString": "int_const 18"
																									},
																									"value": "18"
																								},
																								"src": "3901:6:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"id": 574,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3900:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "3894:14:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 576,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3893:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3875:34:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3871:38:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 579,
																"nodeType": "ExpressionStatement",
																"src": "3871:38:3"
															}
														]
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "3764:206:3",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "3776:63:3",
													"statements": [
														{
															"expression": {
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 546,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "3790:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 549,
																				"name": "answer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "3802:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3794:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 547,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3794:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3794:15:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 551,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3813:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 554,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3138",
																								"id": 552,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3820:2:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_18_by_1",
																									"typeString": "int_const 18"
																								},
																								"value": "18"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 553,
																								"name": "d",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 537,
																								"src": "3825:1:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "3820:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"id": 555,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3819:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "3813:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 557,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3812:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3794:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3790:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 560,
															"nodeType": "ExpressionStatement",
															"src": "3790:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "3136:79:3",
										"text": " @notice Return USD price in 1e18 for a token (0 if no feed)."
									},
									"functionSelector": "9c03ef5d",
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "priceUsd1e18",
									"nameLocation": "3229:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3250:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "3242:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3242:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3241:15:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "p",
												"nameLocation": "3286:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "3278:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3278:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3277:11:3"
									},
									"scope": 820,
									"src": "3220:756:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "4215:255:3",
										"statements": [
											{
												"assignments": [
													603
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "px",
														"nameLocation": "4233:2:3",
														"nodeType": "VariableDeclaration",
														"scope": 640,
														"src": "4225:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4225:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 607,
												"initialValue": {
													"arguments": [
														{
															"id": 605,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "4251:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 604,
														"name": "priceUsd1e18",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "4238:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4238:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4225:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 608,
															"name": "px",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "4271:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4277:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4271:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 611,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "4282:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4293:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4282:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4271:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 617,
												"nodeType": "IfStatement",
												"src": "4267:37:3",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4303:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 601,
													"id": 616,
													"nodeType": "Return",
													"src": "4296:8:3"
												}
											},
											{
												"assignments": [
													619
												],
												"declarations": [
													{
														"constant": false,
														"id": 619,
														"mutability": "mutable",
														"name": "dec",
														"nameLocation": "4321:3:3",
														"nodeType": "VariableDeclaration",
														"scope": 640,
														"src": "4315:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 618,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4315:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 620,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "4328:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 621,
																	"name": "NATIVE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "4337:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4328:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 623,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4327:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 626,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "4362:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 625,
															"name": "_decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "4352:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint8_$",
																"typeString": "function (address) view returns (uint8)"
															}
														},
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4352:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4327:41:3",
													"trueExpression": {
														"hexValue": "3138",
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4347:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4315:53:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 630,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "4436:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 631,
																	"name": "px",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "4446:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4436:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 633,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4435:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4453:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 635,
																	"name": "dec",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "4459:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4453:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 637,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4452:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4435:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 601,
												"id": 639,
												"nodeType": "Return",
												"src": "4428:35:3"
											}
										]
									},
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "3982:144:3",
										"text": " @notice Compute USD value (1e18) for a (balance, token).\n @dev balance decimals = token decimals; price decimals = 1e18"
									},
									"functionSelector": "6815d0df",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "valueUsd1e18",
									"nameLocation": "4140:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4161:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4153:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4176:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4168:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4152:32:3"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4206:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4206:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4205:9:3"
									},
									"scope": 820,
									"src": "4131:339:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "4755:364:3",
										"statements": [
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "4773:3:3",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "4765:11:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4765:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 662,
												"initialValue": {
													"expression": {
														"id": 660,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "4779:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4786:6:3",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4779:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4765:27:3"
											},
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 663,
														"name": "bals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "4802:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 667,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "4823:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4809:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 664,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4813:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 665,
																"nodeType": "ArrayTypeName",
																"src": "4813:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4809:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "4802:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "4802:25:3"
											},
											{
												"expression": {
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 671,
														"name": "usdValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "4837:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 675,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "4863:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4849:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 672,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 673,
																"nodeType": "ArrayTypeName",
																"src": "4853:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4849:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "4837:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "4837:30:3"
											},
											{
												"body": {
													"id": 722,
													"nodeType": "Block",
													"src": "4908:205:3",
													"statements": [
														{
															"assignments": [
																689,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 689,
																	"mutability": "mutable",
																	"name": "b",
																	"nameLocation": "4931:1:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 722,
																	"src": "4923:9:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 688,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4923:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 696,
															"initialValue": {
																"arguments": [
																	{
																		"id": 691,
																		"name": "vault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 644,
																		"src": "4947:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 692,
																			"name": "tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 647,
																			"src": "4954:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 694,
																		"indexExpression": {
																			"id": 693,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "4961:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4954:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 690,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "4937:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$_t_uint8_$",
																		"typeString": "function (address,address) view returns (uint256,uint8)"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4937:27:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																	"typeString": "tuple(uint256,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4922:42:3"
														},
														{
															"expression": {
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 697,
																		"name": "bals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "4978:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 699,
																	"indexExpression": {
																		"id": 698,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "4983:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4978:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 700,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "4988:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4978:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 702,
															"nodeType": "ExpressionStatement",
															"src": "4978:11:3"
														},
														{
															"assignments": [
																704
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 704,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "5011:1:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 722,
																	"src": "5003:9:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 703,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5003:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 711,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 706,
																			"name": "tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 647,
																			"src": "5028:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 708,
																		"indexExpression": {
																			"id": 707,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "5035:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5028:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 709,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 689,
																		"src": "5039:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 705,
																	"name": "valueUsd1e18",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "5015:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5015:26:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5003:38:3"
														},
														{
															"expression": {
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 712,
																		"name": "usdValues",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 654,
																		"src": "5055:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 714,
																	"indexExpression": {
																		"id": 713,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "5065:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5055:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 715,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "5070:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5055:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 717,
															"nodeType": "ExpressionStatement",
															"src": "5055:16:3"
														},
														{
															"expression": {
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 718,
																	"name": "totalUsd1e18",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "5085:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 719,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "5101:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5085:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 721,
															"nodeType": "ExpressionStatement",
															"src": "5085:17:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 682,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "4894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 683,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "4898:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4894:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 723,
												"initializationExpression": {
													"assignments": [
														680
													],
													"declarations": [
														{
															"constant": false,
															"id": 680,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4891:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 723,
															"src": "4883:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 679,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4883:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 681,
													"nodeType": "VariableDeclarationStatement",
													"src": "4883:9:3"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4903:3:3",
														"subExpression": {
															"id": 685,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "4905:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 687,
													"nodeType": "ExpressionStatement",
													"src": "4903:3:3"
												},
												"nodeType": "ForStatement",
												"src": "4878:235:3"
											}
										]
									},
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "4476:87:3",
										"text": " @notice Return per-token balances and USD values for a single vault."
									},
									"functionSelector": "f0854de8",
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "portfolioOf",
									"nameLocation": "4577:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "4597:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "4589:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4589:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "4623:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "4604:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 645,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4604:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 646,
													"nodeType": "ArrayTypeName",
													"src": "4604:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4588:42:3"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "bals",
												"nameLocation": "4695:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "4678:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 649,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4678:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 650,
													"nodeType": "ArrayTypeName",
													"src": "4678:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "usdValues",
												"nameLocation": "4718:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "4701:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 652,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4701:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 653,
													"nodeType": "ArrayTypeName",
													"src": "4701:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "totalUsd1e18",
												"nameLocation": "4737:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "4729:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4729:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:73:3"
									},
									"scope": 820,
									"src": "4568:551:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "5413:317:3",
										"statements": [
											{
												"assignments": [
													738
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "vLen",
														"nameLocation": "5431:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "5423:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 737,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5423:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 741,
												"initialValue": {
													"expression": {
														"id": 739,
														"name": "vaults",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "5438:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5445:6:3",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5438:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5423:28:3"
											},
											{
												"assignments": [
													743
												],
												"declarations": [
													{
														"constant": false,
														"id": 743,
														"mutability": "mutable",
														"name": "tLen",
														"nameLocation": "5469:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "5461:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 742,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5461:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"expression": {
														"id": 744,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "5476:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5483:6:3",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5476:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5461:28:3"
											},
											{
												"body": {
													"id": 787,
													"nodeType": "Block",
													"src": "5530:194:3",
													"statements": [
														{
															"body": {
																"id": 785,
																"nodeType": "Block",
																"src": "5575:139:3",
																"statements": [
																	{
																		"assignments": [
																			766,
																			null
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 766,
																				"mutability": "mutable",
																				"name": "b",
																				"nameLocation": "5602:1:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 785,
																				"src": "5594:9:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 765,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5594:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			},
																			null
																		],
																		"id": 775,
																		"initialValue": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 768,
																						"name": "vaults",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 729,
																						"src": "5618:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																							"typeString": "address[] calldata"
																						}
																					},
																					"id": 770,
																					"indexExpression": {
																						"id": 769,
																						"name": "v",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 748,
																						"src": "5625:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5618:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 771,
																						"name": "tokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 732,
																						"src": "5629:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																							"typeString": "address[] calldata"
																						}
																					},
																					"id": 773,
																					"indexExpression": {
																						"id": 772,
																						"name": "t",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 757,
																						"src": "5636:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5629:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 767,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "5608:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$_t_uint8_$",
																					"typeString": "function (address,address) view returns (uint256,uint8)"
																				}
																			},
																			"id": 774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5608:31:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																				"typeString": "tuple(uint256,uint8)"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5593:46:3"
																	},
																	{
																		"expression": {
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 776,
																				"name": "totalUsd1e18",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 735,
																				"src": "5657:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 778,
																							"name": "tokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 732,
																							"src": "5686:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																								"typeString": "address[] calldata"
																							}
																						},
																						"id": 780,
																						"indexExpression": {
																							"id": 779,
																							"name": "t",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 757,
																							"src": "5693:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5686:9:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 781,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 766,
																						"src": "5697:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 777,
																					"name": "valueUsd1e18",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "5673:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (address,uint256) view returns (uint256)"
																					}
																				},
																				"id": 782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5673:26:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5657:42:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 784,
																		"nodeType": "ExpressionStatement",
																		"src": "5657:42:3"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 759,
																	"name": "t",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "5560:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 760,
																	"name": "tLen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "5564:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5560:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 786,
															"initializationExpression": {
																"assignments": [
																	757
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 757,
																		"mutability": "mutable",
																		"name": "t",
																		"nameLocation": "5557:1:3",
																		"nodeType": "VariableDeclaration",
																		"scope": 786,
																		"src": "5549:9:3",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 756,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5549:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 758,
																"nodeType": "VariableDeclarationStatement",
																"src": "5549:9:3"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "5570:3:3",
																	"subExpression": {
																		"id": 762,
																		"name": "t",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "5572:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 764,
																"nodeType": "ExpressionStatement",
																"src": "5570:3:3"
															},
															"nodeType": "ForStatement",
															"src": "5544:170:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 750,
														"name": "v",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "5515:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 751,
														"name": "vLen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "5519:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5515:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 788,
												"initializationExpression": {
													"assignments": [
														748
													],
													"declarations": [
														{
															"constant": false,
															"id": 748,
															"mutability": "mutable",
															"name": "v",
															"nameLocation": "5512:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 788,
															"src": "5504:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 747,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5504:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 749,
													"nodeType": "VariableDeclarationStatement",
													"src": "5504:9:3"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5525:3:3",
														"subExpression": {
															"id": 753,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "5527:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 755,
													"nodeType": "ExpressionStatement",
													"src": "5525:3:3"
												},
												"nodeType": "ForStatement",
												"src": "5499:225:3"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "5125:133:3",
										"text": " @notice Aggregate total USD value across many vaults and tokens.\n @dev Useful for team or leaderboard views."
									},
									"functionSelector": "efcab8ae",
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalValueUsd",
									"nameLocation": "5272:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "vaults",
												"nameLocation": "5305:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "5286:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 727,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5286:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 728,
													"nodeType": "ArrayTypeName",
													"src": "5286:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "5332:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "5313:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 730,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5313:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 731,
													"nodeType": "ArrayTypeName",
													"src": "5313:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5285:54:3"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "totalUsd1e18",
												"nameLocation": "5395:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "5387:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5387:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5386:22:3"
									},
									"scope": 820,
									"src": "5263:467:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "5847:205:3",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 809,
															"nodeType": "Block",
															"src": "5977:31:3",
															"statements": [
																{
																	"expression": {
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 805,
																			"name": "d",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "5991:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 806,
																			"name": "_d",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "5995:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "5991:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 808,
																	"nodeType": "ExpressionStatement",
																	"src": "5991:6:3"
																}
															]
														},
														"errorName": "",
														"id": 810,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 804,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 803,
																	"mutability": "mutable",
																	"name": "_d",
																	"nameLocation": "5973:2:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 810,
																	"src": "5967:8:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 802,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "5967:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "5966:10:3"
														},
														"src": "5958:50:3"
													},
													{
														"block": {
															"id": 815,
															"nodeType": "Block",
															"src": "6015:31:3",
															"statements": [
																{
																	"expression": {
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 811,
																			"name": "d",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "6029:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "3138",
																			"id": 812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6033:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "6029:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 814,
																	"nodeType": "ExpressionStatement",
																	"src": "6029:6:3"
																}
															]
														},
														"errorName": "",
														"id": 816,
														"nodeType": "TryCatchClause",
														"src": "6009:37:3"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 798,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "5940:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 797,
																"name": "IERC20Metadata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "5925:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$269_$",
																	"typeString": "type(contract IERC20Metadata)"
																}
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5925:21:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$269",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5947:8:3",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "5925:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:32:3",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 817,
												"nodeType": "TryStatement",
												"src": "5921:125:3"
											}
										]
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_decimals",
									"nameLocation": "5790:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5808:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "5800:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5800:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5799:15:3"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "d",
												"nameLocation": "5844:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "5838:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 794,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5838:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5837:9:3"
									},
									"scope": 820,
									"src": "5781:271:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 821,
							"src": "1263:4791:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								320
							]
						}
					],
					"src": "32:6023:3"
				},
				"id": 3
			}
		}
	}
}