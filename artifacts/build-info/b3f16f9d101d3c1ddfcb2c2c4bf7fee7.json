{
	"id": "b3f16f9d101d3c1ddfcb2c2c4bf7fee7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/**\n * @title SwapModule (Uniswap V3)\n * @notice ActionExecutor-registered module for buying/selling tokens from a UserVault via Uniswap V3.\n *         IMPORTANT: This module is intended to be called FROM a UserVault context using\n *         UserVault.executeCall(module, value, data). That means `msg.sender` is the vault,\n *         so token approvals and transfers operate on the vault's balances.\n *CA:0x28a62cfe6Ae10e930CDbdC76308761e1167144b4\n * Supported flows:\n *  - Exact Input Single (tokenIn -> tokenOut)\n *  - Exact Input Multi-hop (path-encoded)\n *  - Exact Output Single (target exact amountOut)\n *  - Wrap/Unwrap ETH (via WETH9) helpers\n *\n * Security:\n *  - No internal fund custody. All tokens remain in the vault.\n *  - Approval pattern resets to 0 before setting new allowance (non-standard ERC20 safety).\n *  - Slippage and deadlines must be provided by the caller/relayer.\n */\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ninterface IWETH9 {\n    function deposit() external payable;\n    function withdraw(uint256) external;\n}\n\ninterface IUniswapV3RouterLike {\n    /// @dev Minimal subset of ISwapRouter we need\n\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24  fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96; // set 0 to ignore\n    }\n\n    struct ExactInputParams {\n        bytes   path;       // encoded path: tokenIn, fee, tokenMid, fee, tokenOut...\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24  fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96; // set 0 to ignore\n    }\n\n    struct ExactOutputParams {\n        bytes   path;       // note: path is reversed (tokenOut...tokenIn)\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n\ncontract SwapModule is Ownable {\n    using SafeERC20 for IERC20;\n\n    /// @notice Module identifier to use when registering in ActionExecutor\n    bytes32 public constant MODULE_ID = keccak256(\"SWAP_MODULE_V1\");\n\n    /// @notice Uniswap V3 router (ISwapRouter)\n    IUniswapV3RouterLike public router;\n\n    /// @notice Wrapped native token\n    IWETH9 public weth;\n\n    event RouterUpdated(address indexed newRouter);\n    event WETHUpdated(address indexed newWETH);\n\n    event SwapExactInputSingle(\n        address indexed vault,\n        address indexed tokenIn,\n        address indexed tokenOut,\n        uint24 fee,\n        uint256 amountIn,\n        uint256 amountOut\n    );\n\n    event SwapExactInputPath(\n        address indexed vault,\n        bytes path,\n        uint256 amountIn,\n        uint256 amountOut\n    );\n\n    event SwapExactOutputSingle(\n        address indexed vault,\n        address indexed tokenIn,\n        address indexed tokenOut,\n        uint24 fee,\n        uint256 amountOut,\n        uint256 amountInSpent\n    );\n\n    event SwapExactOutputPath(\n        address indexed vault,\n        bytes path,\n        uint256 amountOut,\n        uint256 amountInSpent\n    );\n\n    event Wrapped(address indexed vault, uint256 amount);\n    event Unwrapped(address indexed vault, uint256 amount);\n\n    constructor(address _router, address _weth) Ownable(msg.sender) {\n        require(_router != address(0) && _weth != address(0), \"ZeroAddr\");\n        router = IUniswapV3RouterLike(_router);\n        weth = IWETH9(_weth);\n        emit RouterUpdated(_router);\n        emit WETHUpdated(_weth);\n    }\n\n    // ========= Admin =========\n\n    function setRouter(address _router) external onlyOwner {\n        require(_router != address(0), \"ZeroAddr\");\n        router = IUniswapV3RouterLike(_router);\n        emit RouterUpdated(_router);\n    }\n\n    function setWETH(address _weth) external onlyOwner {\n        require(_weth != address(0), \"ZeroAddr\");\n        weth = IWETH9(_weth);\n        emit WETHUpdated(_weth);\n    }\n\n    // ========= Internal approval helper =========\n\n    function _safeApprove(IERC20 token, address spender, uint256 amount) internal {\n        // Reset to 0 first (handles tokens that require allowance to be 0 before set)\n        token.approve(spender, 0);\n        token.approve(spender, amount);\n    }\n\n    // ========= Public swap methods (to be called from the vault context) =========\n\n    /**\n     * @notice Exact-input single-pool swap (tokenIn -> tokenOut).\n     * @dev Caller must be the vault (i.e., invoked via UserVault.executeCall).\n     * @param tokenIn Input token address\n     * @param tokenOut Output token address\n     * @param fee Uniswap V3 pool fee (e.g., 500/3000/10000)\n     * @param amountIn Amount of tokenIn to swap\n     * @param amountOutMin Minimum acceptable tokenOut (slippage control)\n     * @param deadline Unix timestamp after which the tx reverts\n     */\n    function swapExactInputSingle(\n        address tokenIn,\n        address tokenOut,\n        uint24  fee,\n        uint256 amountIn,\n        uint256 amountOutMin,\n        uint256 deadline\n    ) external returns (uint256 amountOut) {\n        _safeApprove(IERC20(tokenIn), address(router), amountIn);\n\n        amountOut = router.exactInputSingle(\n            IUniswapV3RouterLike.ExactInputSingleParams({\n                tokenIn: tokenIn,\n                tokenOut: tokenOut,\n                fee: fee,\n                recipient: msg.sender, // vault receives output\n                deadline: deadline,\n                amountIn: amountIn,\n                amountOutMinimum: amountOutMin,\n                sqrtPriceLimitX96: 0\n            })\n        );\n\n        emit SwapExactInputSingle(msg.sender, tokenIn, tokenOut, fee, amountIn, amountOut);\n    }\n\n    /**\n     * @notice Exact-input multihop swap using an encoded path.\n     * @param path Uniswap V3 path (tokenIn,fee,tokenMid,fee,tokenOut...)\n     * @param amountIn Amount of input token to spend\n     * @param amountOutMin Minimum acceptable output (slippage)\n     * @param deadline Expiry\n     */\n    function swapExactInputPath(\n        bytes calldata path,\n        uint256 amountIn,\n        uint256 amountOutMin,\n        uint256 deadline,\n        address tokenIn // needed to approve\n    ) external returns (uint256 amountOut) {\n        _safeApprove(IERC20(tokenIn), address(router), amountIn);\n\n        amountOut = router.exactInput(\n            IUniswapV3RouterLike.ExactInputParams({\n                path: path,\n                recipient: msg.sender,\n                deadline: deadline,\n                amountIn: amountIn,\n                amountOutMinimum: amountOutMin\n            })\n        );\n\n        emit SwapExactInputPath(msg.sender, path, amountIn, amountOut);\n    }\n\n    /**\n     * @notice Exact-output single-pool swap (spend up to amountInMax to receive amountOut).\n     * @param tokenIn Input token address\n     * @param tokenOut Output token address\n     * @param fee Pool fee\n     * @param amountOut Desired exact output\n     * @param amountInMax Max input you're willing to spend (slippage)\n     * @param deadline Expiry\n     */\n    function swapExactOutputSingle(\n        address tokenIn,\n        address tokenOut,\n        uint24  fee,\n        uint256 amountOut,\n        uint256 amountInMax,\n        uint256 deadline\n    ) external returns (uint256 amountInSpent) {\n        _safeApprove(IERC20(tokenIn), address(router), amountInMax);\n\n        amountInSpent = router.exactOutputSingle(\n            IUniswapV3RouterLike.ExactOutputSingleParams({\n                tokenIn: tokenIn,\n                tokenOut: tokenOut,\n                fee: fee,\n                recipient: msg.sender,\n                deadline: deadline,\n                amountOut: amountOut,\n                amountInMaximum: amountInMax,\n                sqrtPriceLimitX96: 0\n            })\n        );\n\n        // Return any unspent approval to zero\n        if (amountInSpent < amountInMax) {\n            IERC20(tokenIn).approve(address(router), 0);\n        }\n\n        emit SwapExactOutputSingle(msg.sender, tokenIn, tokenOut, fee, amountOut, amountInSpent);\n    }\n\n    /**\n     * @notice Exact-output multihop swap using reversed path (per Uniswap V3 convention).\n     * @param path Reversed path (tokenOut,fee,tokenMid,fee,tokenIn)\n     * @param amountOut Desired exact output\n     * @param amountInMax Max input willing to spend\n     * @param deadline Expiry\n     * @param tokenIn Token to draw from vault & approve\n     */\n    function swapExactOutputPath(\n        bytes calldata path,\n        uint256 amountOut,\n        uint256 amountInMax,\n        uint256 deadline,\n        address tokenIn\n    ) external returns (uint256 amountInSpent) {\n        _safeApprove(IERC20(tokenIn), address(router), amountInMax);\n\n        amountInSpent = router.exactOutput(\n            IUniswapV3RouterLike.ExactOutputParams({\n                path: path,\n                recipient: msg.sender,\n                deadline: deadline,\n                amountOut: amountOut,\n                amountInMaximum: amountInMax\n            })\n        );\n\n        if (amountInSpent < amountInMax) {\n            IERC20(tokenIn).approve(address(router), 0);\n        }\n\n        emit SwapExactOutputPath(msg.sender, path, amountOut, amountInSpent);\n    }\n\n    // ========= ETH helpers (wrap/unwrap) =========\n\n    /// @notice Wrap native ETH held by the vault into WETH.\n    function wrapETH(uint256 amount) external payable {\n        // Since this runs in vault context, the ETH must already be held by the vault,\n        // or forwarded as `value` when calling UserVault.executeCall.\n        require(msg.value == amount, \"BadValue\");\n        weth.deposit{value: amount}();\n        // WETH is now held by the vault\n        emit Wrapped(msg.sender, amount);\n    }\n\n    /// @notice Unwrap WETH held by the vault back to native ETH.\n    function unwrapWETH(uint256 amount) external {\n        weth.withdraw(amount);\n        // ETH is now in the module's balance *from vault context*; forward back to vault\n        // Because msg.sender is the vault, simply sending to msg.sender returns it.\n        (bool ok, ) = payable(msg.sender).call{value: amount}(\"\");\n        require(ok, \"SendFail\");\n        emit Unwrapped(msg.sender, amount);\n    }\n\n    receive() external payable {}\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206bfdc9ac7dcde7d0d9e24a3daef55fe1e4d0511b16864fa15835cba9402bd75464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212206bfdc9ac7dcde7d0d9e24a3daef55fe1e4d0511b16864fa15835cba9402bd75464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xFDC9AC7DCDE7D0D9E24A3DAE CREATE2 PUSH0 0xE1 0xE4 0xD0 MLOAD SHL AND DUP7 0x4F LOG1 PC CALLDATALOAD 0xCB 0xA9 BLOCKHASH 0x2B 0xD7 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea26469706673582212206bfdc9ac7dcde7d0d9e24a3daef55fe1e4d0511b16864fa15835cba9402bd75464736f6c634300081a0033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xFDC9AC7DCDE7D0D9E24A3DAE CREATE2 PUSH0 0xE1 0xE4 0xD0 MLOAD SHL AND DUP7 0x4F LOG1 PC CALLDATALOAD 0xCB 0xA9 BLOCKHASH 0x2B 0xD7 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "library_deploy_address"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206bfdc9ac7dcde7d0d9e24a3daef55fe1e4d0511b16864fa15835cba9402bd75464736f6c634300081a0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol": {
				"IUniswapV3RouterLike": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct IUniswapV3RouterLike.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IUniswapV3RouterLike.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct IUniswapV3RouterLike.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IUniswapV3RouterLike.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct IUniswapV3RouterLike.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IUniswapV3RouterLike.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct IUniswapV3RouterLike.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IUniswapV3RouterLike.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":\"IUniswapV3RouterLike\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":{\"keccak256\":\"0x18d988fc061a7254fbfe572fd11192a677d9d8d8fdee0756f6debf5f9c27aa14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12a17ece331646c757cf5aafc5c7cbb38b36dba65fa01c33c0a037503f953be5\",\"dweb:/ipfs/QmahbJwksQQRHq9PnbNiA7CzFQ2jb7BTNYVupUVkzv2xGH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IWETH9": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":\"IWETH9\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":{\"keccak256\":\"0x18d988fc061a7254fbfe572fd11192a677d9d8d8fdee0756f6debf5f9c27aa14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12a17ece331646c757cf5aafc5c7cbb38b36dba65fa01c33c0a037503f953be5\",\"dweb:/ipfs/QmahbJwksQQRHq9PnbNiA7CzFQ2jb7BTNYVupUVkzv2xGH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SwapModule": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_router",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_weth",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newRouter",
									"type": "address"
								}
							],
							"name": "RouterUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "SwapExactInputPath",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "SwapExactInputSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountInSpent",
									"type": "uint256"
								}
							],
							"name": "SwapExactOutputPath",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountInSpent",
									"type": "uint256"
								}
							],
							"name": "SwapExactOutputSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Unwrapped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newWETH",
									"type": "address"
								}
							],
							"name": "WETHUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Wrapped",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MODULE_ID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "router",
							"outputs": [
								{
									"internalType": "contract IUniswapV3RouterLike",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_router",
									"type": "address"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_weth",
									"type": "address"
								}
							],
							"name": "setWETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								}
							],
							"name": "swapExactInputPath",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								}
							],
							"name": "swapExactOutputPath",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountInSpent",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountInSpent",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "unwrapWETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weth",
							"outputs": [
								{
									"internalType": "contract IWETH9",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "wrapETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"swapExactInputPath(bytes,uint256,uint256,uint256,address)": {
								"params": {
									"amountIn": "Amount of input token to spend",
									"amountOutMin": "Minimum acceptable output (slippage)",
									"deadline": "Expiry",
									"path": "Uniswap V3 path (tokenIn,fee,tokenMid,fee,tokenOut...)"
								}
							},
							"swapExactInputSingle(address,address,uint24,uint256,uint256,uint256)": {
								"details": "Caller must be the vault (i.e., invoked via UserVault.executeCall).",
								"params": {
									"amountIn": "Amount of tokenIn to swap",
									"amountOutMin": "Minimum acceptable tokenOut (slippage control)",
									"deadline": "Unix timestamp after which the tx reverts",
									"fee": "Uniswap V3 pool fee (e.g., 500/3000/10000)",
									"tokenIn": "Input token address",
									"tokenOut": "Output token address"
								}
							},
							"swapExactOutputPath(bytes,uint256,uint256,uint256,address)": {
								"params": {
									"amountInMax": "Max input willing to spend",
									"amountOut": "Desired exact output",
									"deadline": "Expiry",
									"path": "Reversed path (tokenOut,fee,tokenMid,fee,tokenIn)",
									"tokenIn": "Token to draw from vault & approve"
								}
							},
							"swapExactOutputSingle(address,address,uint24,uint256,uint256,uint256)": {
								"params": {
									"amountInMax": "Max input you're willing to spend (slippage)",
									"amountOut": "Desired exact output",
									"deadline": "Expiry",
									"fee": "Pool fee",
									"tokenIn": "Input token address",
									"tokenOut": "Output token address"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n  0x80\n  jumpi(tag_6, callvalue)\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_4\n  jumpi\n  dup1\n  dup5\n  swap3\n  0x40\n  swap5\n  dup6\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_6\n  jumpi\n  tag_8\n  0x20\n  tag_9\n  dup4\n  tag_1\n  jump\t// in\ntag_9:\n  swap3\n  add\n  tag_1\n  jump\t// in\ntag_8:\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4194:4204  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  iszero\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n  0x00\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n  dup1\n  sload\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4194:4204  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n  dup3\n  and\n  dup2\n  or\n  dup4\n  sstore\n  mload(0x40)\n  swap5\n  swap3\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4194:4204  msg.sender */\n  swap1\n  swap2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n  and\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  dup1\n  log3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n  and\n  swap2\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4224:4245  _router != address(0) */\n  dup3\n  iszero\n  iszero\n  dup1\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4224:4268  _router != address(0) && _weth != address(0) */\n  tag_12\n  jumpi\ntag_13:\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n  iszero\n  tag_14\n  jumpi\n  pop\n  0x01\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  dup5\n  or\n  swap1\n  swap2\n  sstore\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4339:4359  weth = IWETH9(_weth) */\n  0x02\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  dup3\n  or\n  swap1\n  sstore\n  mload(0x40)\n  swap2\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4374:4396  RouterUpdated(_router) */\n  0x7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc80\n  0x00\n  dup1\n  log2\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4411:4429  WETHUpdated(_weth) */\n  0x5f85e7e522385144040f94bcb1eeaeb07da5e11d6384c124c09f53986d0ed8bc\n  0x00\n  dup1\n  log2\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_14:\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x08\n  0x24\n  dup3\n  add\n  mstore\n  shl(0xc1, 0x2d32b937a0b23239)\n  0x44\n  dup3\n  add\n  mstore\n  0x64\n  swap1\n  revert\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4224:4268  _router != address(0) && _weth != address(0) */\ntag_12:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n  dup3\n  and\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4249:4268  _weth != address(0) */\n  iszero\n  iszero\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4224:4268  _router != address(0) && _weth != address(0) */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mstore(0x00, shl(0xe0, 0x1e4fbdf7))\n  0x00\n  0x04\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n  mstore\n  0x24\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  revert\n    /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\ntag_6:\n  0x00\n  dup1\n  revert\ntag_4:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_1:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_6\n  jumpi\n  jump\t// out\nstop\n\nsub_0: assembly {\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_17, iszero(lt(calldatasize, 0x04)))\n    tag_18:\n      jumpi(tag_19, iszero(calldatasize))\n      0x00\n      dup1\n      revert\n    tag_19:\n      stop\n    tag_17:\n      0x00\n      dup1\n      calldataload\n      0xe0\n      shr\n      dup1\n      0x023884b7\n      eq\n      tag_21\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8314:8667  IUniswapV3RouterLike.ExactOutputSingleParams({... */\n      dup1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x1c58db4f\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8314:8667  IUniswapV3RouterLike.ExactOutputSingleParams({... */\n      eq\n      tag_23\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup1\n      0x3fc8cef3\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x51e820e7\n      eq\n      tag_27\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6101:6478  IUniswapV3RouterLike.ExactInputSingleParams({... */\n      dup1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x5b769f3c\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6101:6478  IUniswapV3RouterLike.ExactInputSingleParams({... */\n      eq\n      tag_29\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup1\n      0x715018a6\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x8e2fdfa4\n      eq\n      tag_35\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9648:9889  IUniswapV3RouterLike.ExactOutputParams({... */\n      dup1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x9eaa1983\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9648:9889  IUniswapV3RouterLike.ExactOutputParams({... */\n      eq\n      tag_37\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7244:7484  IUniswapV3RouterLike.ExactInputParams({... */\n      dup1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0xc0d78655\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7244:7484  IUniswapV3RouterLike.ExactInputParams({... */\n      eq\n      tag_39\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup1\n      0xed2f21f5\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xf018a8c1\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_45\n      jumpi\n      0xf887ea40\n      eq\n      tag_47\n      jumpi\n      pop\n      jump(tag_18)\n    tag_47:\n      jumpi(tag_51, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_51\n      jumpi\n      sload(0x01)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_51:\n      dup1\n      revert\n    tag_45:\n      pop\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x20))\n      tag_57\n      tag_1\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_58\n      tag_16\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_59\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup3\n      or\n      dup4\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup4\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_59:\n      shl(0xe0, 0x1e4fbdf7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      dup3\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x04\n      dup3\n      swap1\n      mstore\n      0x24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      dup3\n      revert\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n    tag_43:\n      pop\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10732:10736  weth */\n      0x02\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      sload\n      calldataload(0x04)\n      swap1\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10732:10753  weth.withdraw(amount) */\n      dup1\n      extcodesize\n      iszero\n      tag_79\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup2\n      dup1\n      swap2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10732:10753  weth.withdraw(amount) */\n      0x24\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mload(0x40)\n      dup1\n      swap5\n      dup2\n      swap4\n      shl(0xe0, 0x2e1a7d4d)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10732:10753  weth.withdraw(amount) */\n      dup4\n      mstore\n      dup9\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10732:10753  weth.withdraw(amount) */\n      dup5\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10732:10753  weth.withdraw(amount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_67\n      jumpi\n      tag_69\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n    tag_70:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10960:10970  msg.sender */\n      pop\n      dup1\n      dup1\n      dup1\n      dup5\n      caller\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10952:10995  payable(msg.sender).call{value: amount}(\"\") */\n      gas\n      call\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      jumpi(tag_71, iszero(returndatasize))\n      returndatasize\n      tag_73\n      dup2\n      tag_11\n      jump\t// in\n    tag_73:\n      swap1\n      tag_74\n      mload(0x40)\n      swap3\n      dup4\n      tag_6\n      jump\t// in\n    tag_74:\n      dup2\n      mstore\n      dup4\n      0x20\n      returndatasize\n      swap3\n      add\n      returndatacopy\n    tag_75:\n      iszero\n      tag_76\n      jumpi\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":11043:11072  Unwrapped(msg.sender, amount) */\n      0x95ae649bfaaef9def56a52f4fb2d9e8fa5496bb7082930e442c74cc76b03dcb3\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10960:10970  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":11043:11072  Unwrapped(msg.sender, amount) */\n      swap3\n      log2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup1\n      return\n    tag_76:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x08\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10732:10753  weth.withdraw(amount) */\n      0x24\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup3\n      add\n      mstore\n      shl(0xc2, 0x14d95b9911985a5b)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_71:\n      jump(tag_75)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10732:10753  weth.withdraw(amount) */\n    tag_69:\n      dup2\n      tag_78\n      swap2\n      tag_6\n      jump\t// in\n    tag_78:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      tag_79\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10732:10753  weth.withdraw(amount) */\n      dup2\n      0x00\n      jump(tag_70)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n    tag_79:\n      pop\n      dup1\n      revert\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10732:10753  weth.withdraw(amount) */\n    tag_67:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mload(0x40)\n      returndatasize\n      dup5\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_41:\n      pop\n      jumpi(tag_51, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_51\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":3023:3050  keccak256(\"SWAP_MODULE_V1\") */\n      0xc4e0f79f70db4b2ce509cf1e4adb5fb99d03350de03fafd915b46124a7b5dd28\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup2\n      mstore\n      return\n    tag_39:\n      pop\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x20))\n      tag_89\n      tag_1\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_90\n      tag_16\n      jump\t// in\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4541:4583  require(_router != address(0), \"ZeroAddr\") */\n      tag_91\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4549:4570  _router != address(0) */\n      dup2\n      iszero\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4541:4583  require(_router != address(0), \"ZeroAddr\") */\n      tag_10\n      jump\t// in\n    tag_91:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4593:4631  router = IUniswapV3RouterLike(_router) */\n      0x01\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4646:4668  RouterUpdated(_router) */\n      0x7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc80\n      dup3\n      dup1\n      log2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup1\n      return\n    tag_37:\n      pop\n      jumpi(tag_51, callvalue)\n      dup1\n      tag_94\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7181:7189  amountIn */\n      tag_95\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7244:7484  IUniswapV3RouterLike.ExactInputParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      swap4\n      tag_96\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_96:\n      sload(0x01)\n      swap4\n      swap11\n      swap6\n      swap9\n      swap5\n      swap8\n      swap3\n      swap4\n      swap2\n      swap3\n      swap2\n      dup12\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      swap2\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7181:7189  amountIn */\n      tag_15\n      jump\t// in\n    tag_95:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7172:7178  router */\n      0x01\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      sload\n      and\n      swap2\n      mload(0x40)\n      swap2\n      tag_97\n      dup4\n      tag_5\n      jump\t// in\n    tag_97:\n      tag_98\n      calldatasize\n      dup10\n      dup12\n      tag_12\n      jump\t// in\n    tag_98:\n      dup4\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7339:7349  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7244:7484  IUniswapV3RouterLike.ExactInputParams({... */\n      dup7\n      dup5\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n      0x40\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7244:7484  IUniswapV3RouterLike.ExactInputParams({... */\n      dup4\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7244:7484  IUniswapV3RouterLike.ExactInputParams({... */\n      dup10\n      0x60\n      dup4\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7244:7484  IUniswapV3RouterLike.ExactInputParams({... */\n      0x80\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n      mload(0x40)\n      swap5\n      dup6\n      dup1\n      swap5\n      dup2\n      swap4\n      shl(0xe0, 0xc04b8d59)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7213:7494  router.exactInput(... */\n      dup4\n      mstore\n      dup8\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7213:7494  router.exactInput(... */\n      dup5\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n      0x24\n      dup4\n      add\n      swap1\n      tag_13\n      jump\t// in\n    tag_94:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7213:7494  router.exactInput(... */\n      sub\n      swap3\n      gas\n      call\n      swap4\n      dup5\n      iszero\n      tag_99\n      jumpi\n      swap4\n      tag_101\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n    tag_102:\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7244:7484  IUniswapV3RouterLike.ExactInputParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      swap4\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7510:7567  SwapExactInputPath(msg.sender, path, amountIn, amountOut) */\n      0x459322b794f649891286454db465d0eed0ee1c64f4e314f184014f24028d4077\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      swap2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7510:7567  SwapExactInputPath(msg.sender, path, amountIn, amountOut) */\n      tag_103\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup6\n      mload(0x40)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7339:7349  msg.sender */\n      swap4\n      dup5\n      swap4\n      caller\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7510:7567  SwapExactInputPath(msg.sender, path, amountIn, amountOut) */\n      swap8\n      dup6\n      tag_14\n      jump\t// in\n    tag_103:\n      sub\n      swap1\n      log2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7213:7494  router.exactInput(... */\n    tag_101:\n      swap1\n      swap3\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7244:7484  IUniswapV3RouterLike.ExactInputParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7213:7494  router.exactInput(... */\n      dup2\n      returndatasize\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7244:7484  IUniswapV3RouterLike.ExactInputParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7213:7494  router.exactInput(... */\n      gt\n      tag_104\n      jumpi\n    tag_105:\n      dup2\n      tag_106\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7213:7494  router.exactInput(... */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_106:\n      dup2\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      sub\n      slt\n      tag_107\n      jumpi\n      mload\n      swap2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7244:7484  IUniswapV3RouterLike.ExactInputParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7213:7494  router.exactInput(... */\n      jump(tag_102)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n    tag_107:\n      0x00\n      dup1\n      revert\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":7213:7494  router.exactInput(... */\n    tag_104:\n      returndatasize\n      swap2\n      pop\n      jump(tag_105)\n    tag_99:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mload(0x40)\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_35:\n      pop\n      jumpi(tag_51, callvalue)\n      dup1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9648:9889  IUniswapV3RouterLike.ExactOutputParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      tag_111\n      tag_112\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_112:\n      sload(0x01)\n      swap4\n      swap10\n      swap6\n      swap8\n      swap5\n      swap7\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      swap6\n      swap4\n      swap5\n      swap1\n      swap3\n      swap2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9577:9588  amountInMax */\n      tag_113\n      swap2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup7\n      swap2\n      and\n      dup8\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9577:9588  amountInMax */\n      tag_15\n      jump\t// in\n    tag_113:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      sload(0x01)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap2\n      tag_114\n      dup3\n      tag_5\n      jump\t// in\n    tag_114:\n      tag_115\n      calldatasize\n      dup11\n      dup13\n      tag_12\n      jump\t// in\n    tag_115:\n      dup3\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9744:9754  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9648:9889  IUniswapV3RouterLike.ExactOutputParams({... */\n      dup6\n      dup4\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n      0x40\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9648:9889  IUniswapV3RouterLike.ExactOutputParams({... */\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9648:9889  IUniswapV3RouterLike.ExactOutputParams({... */\n      dup11\n      0x60\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9648:9889  IUniswapV3RouterLike.ExactOutputParams({... */\n      dup5\n      0x80\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n      mload(0x40)\n      swap10\n      dup11\n      dup1\n      swap5\n      dup2\n      swap4\n      shl(0xe3, 0x1e518093)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9616:9899  router.exactOutput(... */\n      dup4\n      mstore\n      dup8\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9616:9899  router.exactOutput(... */\n      dup5\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n      0x24\n      dup4\n      add\n      swap1\n      tag_13\n      jump\t// in\n    tag_111:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9616:9899  router.exactOutput(... */\n      sub\n      swap3\n      gas\n      call\n      swap6\n      dup7\n      iszero\n      tag_116\n      jumpi\n      dup4\n      swap7\n      tag_118\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n    tag_119:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9914:9941  amountInSpent < amountInMax */\n      pop\n      dup6\n      lt\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9910:10011  if (amountInSpent < amountInMax) {... */\n      tag_120\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n    tag_121:\n      pop\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9648:9889  IUniswapV3RouterLike.ExactOutputParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      swap4\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10026:10089  SwapExactOutputPath(msg.sender, path, amountOut, amountInSpent) */\n      0x61982354c6e19eaebbe0c4376bde59016aad8d6d049a71ec6cdbb157c4d63bf3\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      swap2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10026:10089  SwapExactOutputPath(msg.sender, path, amountOut, amountInSpent) */\n      tag_103\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup6\n      mload(0x40)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9744:9754  msg.sender */\n      swap4\n      dup5\n      swap4\n      caller\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10026:10089  SwapExactOutputPath(msg.sender, path, amountOut, amountInSpent) */\n      swap8\n      dup6\n      tag_14\n      jump\t// in\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9910:10011  if (amountInSpent < amountInMax) {... */\n    tag_120:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9648:9889  IUniswapV3RouterLike.ExactOutputParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup3\n      swap2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9957:10000  IERC20(tokenIn).approve(address(router), 0) */\n      0x44\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9568:9574  router */\n      0x01\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      sload\n      and\n      mload(0x40)\n      swap6\n      dup7\n      swap4\n      dup5\n      swap3\n      shl(0xe0, 0x095ea7b3)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9957:10000  IERC20(tokenIn).approve(address(router), 0) */\n      dup5\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9957:10000  IERC20(tokenIn).approve(address(router), 0) */\n      dup5\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n      dup2\n      0x24\n      dup5\n      add\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9957:10000  IERC20(tokenIn).approve(address(router), 0) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_99\n      jumpi\n      pop\n      swap2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9648:9889  IUniswapV3RouterLike.ExactOutputParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9957:10000  IERC20(tokenIn).approve(address(router), 0) */\n      swap6\n      swap2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10026:10089  SwapExactOutputPath(msg.sender, path, amountOut, amountInSpent) */\n      0x61982354c6e19eaebbe0c4376bde59016aad8d6d049a71ec6cdbb157c4d63bf3\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9957:10000  IERC20(tokenIn).approve(address(router), 0) */\n      swap4\n      tag_125\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9910:10011  if (amountInSpent < amountInMax) {... */\n    tag_126:\n      pop\n      swap2\n      dup2\n      swap6\n      pop\n      jump(tag_121)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9957:10000  IERC20(tokenIn).approve(address(router), 0) */\n    tag_125:\n      tag_127\n      swap1\n      dup8\n      returndatasize\n      dup10\n      gt\n      tag_128\n      jumpi\n    tag_129:\n      tag_130\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_130:\n      dup2\n      add\n      swap1\n      tag_8\n      jump\t// in\n    tag_127:\n      pop\n      0x00\n      jump(tag_126)\n    tag_128:\n      pop\n      returndatasize\n      jump(tag_129)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9616:9899  router.exactOutput(... */\n    tag_118:\n      swap1\n      swap6\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9648:9889  IUniswapV3RouterLike.ExactOutputParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9616:9899  router.exactOutput(... */\n      dup2\n      returndatasize\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9648:9889  IUniswapV3RouterLike.ExactOutputParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9616:9899  router.exactOutput(... */\n      gt\n      tag_131\n      jumpi\n    tag_132:\n      dup2\n      tag_133\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9616:9899  router.exactOutput(... */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_133:\n      dup2\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      sub\n      slt\n      tag_107\n      jumpi\n      mload\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":9616:9899  router.exactOutput(... */\n      swap5\n      0x00\n      jump(tag_119)\n    tag_131:\n      returndatasize\n      swap2\n      pop\n      jump(tag_132)\n    tag_116:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mload(0x40)\n      returndatasize\n      dup6\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_33:\n      pop\n      jumpi(tag_51, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_51\n      jumpi\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_31:\n      pop\n      jumpi(tag_51, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_51\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_144\n      tag_16\n      jump\t// in\n    tag_144:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup3\n      sstore\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup3\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup1\n      return\n    tag_29:\n      pop\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x20))\n      tag_149\n      tag_1\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_150\n      tag_16\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4742:4782  require(_weth != address(0), \"ZeroAddr\") */\n      tag_151\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4750:4769  _weth != address(0) */\n      dup2\n      iszero\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4742:4782  require(_weth != address(0), \"ZeroAddr\") */\n      tag_10\n      jump\t// in\n    tag_151:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4792:4812  weth = IWETH9(_weth) */\n      0x02\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4827:4845  WETHUpdated(_weth) */\n      0x5f85e7e522385144040f94bcb1eeaeb07da5e11d6384c124c09f53986d0ed8bc\n      dup3\n      dup1\n      log2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup1\n      return\n    tag_27:\n      pop\n      jumpi(tag_51, callvalue)\n      tag_154\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6101:6478  IUniswapV3RouterLike.ExactInputSingleParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6064:6488  router.exactInputSingle(... */\n      0x0104\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      tag_155\n      calldatasize\n      tag_2\n      jump\t// in\n    tag_155:\n      swap7\n      swap3\n      swap5\n      0x01\n      dup1\n      0xa0\n      swap12\n      swap5\n      swap12\n      swap9\n      swap4\n      swap7\n      swap9\n      shl\n      sub\n      and\n      swap6\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6032:6040  amountIn */\n      tag_156\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup11\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6023:6029  router */\n      0x01\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      sload\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6032:6040  amountIn */\n      dup10\n      tag_15\n      jump\t// in\n    tag_156:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6023:6029  router */\n      0x01\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      sload\n      and\n      swap5\n      mload(0x40)\n      swap2\n      tag_157\n      dup4\n      tag_4\n      jump\t// in\n    tag_157:\n      dup9\n      dup4\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6101:6478  IUniswapV3RouterLike.ExactInputSingleParams({... */\n      swap9\n      dup10\n      dup7\n      dup5\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n      0xffffff\n      dup9\n      and\n      0x40\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6101:6478  IUniswapV3RouterLike.ExactInputSingleParams({... */\n      dup5\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6270:6280  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6101:6478  IUniswapV3RouterLike.ExactInputSingleParams({... */\n      0x60\n      dup5\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6101:6478  IUniswapV3RouterLike.ExactInputSingleParams({... */\n      0x80\n      dup4\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6101:6478  IUniswapV3RouterLike.ExactInputSingleParams({... */\n      dup11\n      0xa0\n      dup4\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6101:6478  IUniswapV3RouterLike.ExactInputSingleParams({... */\n      0xc0\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6101:6478  IUniswapV3RouterLike.ExactInputSingleParams({... */\n      dup9\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0xe0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6101:6478  IUniswapV3RouterLike.ExactInputSingleParams({... */\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n      dup9\n      mload(0x40)\n      swap6\n      dup7\n      swap5\n      dup6\n      swap4\n      shl(0xe0, 0x414bf389)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6064:6488  router.exactInputSingle(... */\n      dup6\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6064:6488  router.exactInputSingle(... */\n      dup6\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      swap1\n      tag_7\n      jump\t// in\n    tag_154:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6064:6488  router.exactInputSingle(... */\n      gas\n      call\n      swap5\n      dup6\n      iszero\n      tag_99\n      jumpi\n      swap5\n      tag_160\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n    tag_161:\n      pop\n      0x40\n      dup1\n      mload\n      0xffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6101:6478  IUniswapV3RouterLike.ExactInputSingleParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup3\n      dup2\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6270:6280  msg.sender */\n      caller\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6504:6581  SwapExactInputSingle(msg.sender, tokenIn, tokenOut, fee, amountIn, amountOut) */\n      0xa0eab23d718fd05cf523c2400b0a13d8681222f055452f738a5b50ef83e82956\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup1\n      0x60\n      dup2\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6504:6581  SwapExactInputSingle(msg.sender, tokenIn, tokenOut, fee, amountIn, amountOut) */\n    tag_162:\n      sub\n      swap1\n      log4\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6064:6488  router.exactInputSingle(... */\n    tag_160:\n      swap5\n      swap4\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6101:6478  IUniswapV3RouterLike.ExactInputSingleParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6064:6488  router.exactInputSingle(... */\n      dup6\n      returndatasize\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6101:6478  IUniswapV3RouterLike.ExactInputSingleParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6064:6488  router.exactInputSingle(... */\n      gt\n      tag_163\n      jumpi\n    tag_164:\n      dup2\n      tag_165\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6064:6488  router.exactInputSingle(... */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_165:\n      dup2\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      sub\n      slt\n      tag_107\n      jumpi\n      swap4\n      mload\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6064:6488  router.exactInputSingle(... */\n      swap3\n      swap4\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6504:6581  SwapExactInputSingle(msg.sender, tokenIn, tokenOut, fee, amountIn, amountOut) */\n      0xa0eab23d718fd05cf523c2400b0a13d8681222f055452f738a5b50ef83e82956\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":6064:6488  router.exactInputSingle(... */\n      jump(tag_161)\n    tag_163:\n      returndatasize\n      swap2\n      pop\n      jump(tag_164)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n    tag_25:\n      pop\n      jumpi(tag_51, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_51\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":3183:3201  IWETH9 public weth */\n      0x02\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_23:\n      pop\n      jumpi(tag_107, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10444:10453  msg.value */\n      dup1\n      callvalue\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10444:10463  msg.value == amount */\n      sub\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      tag_174\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10486:10490  weth */\n      0x02\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10486:10515  weth.deposit{value: amount}() */\n      dup1\n      extcodesize\n      iszero\n      tag_107\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x00\n      dup3\n      swap2\n      0x04\n      mload(0x40)\n      dup1\n      swap5\n      dup2\n      swap4\n      shl(0xe4, 0x0d0e30db)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10486:10515  weth.deposit{value: amount}() */\n      dup4\n      mstore\n      gas\n      call\n      dup1\n      iszero\n      tag_178\n      jumpi\n      tag_180\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n    tag_181:\n      pop\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10571:10598  Wrapped(msg.sender, amount) */\n      0x4700c1726b4198077cd40320a32c45265a1910521eb0ef713dd1d8412413d7fc\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10579:10589  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10571:10598  Wrapped(msg.sender, amount) */\n      swap3\n      log2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup1\n      return\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10486:10515  weth.deposit{value: amount}() */\n    tag_180:\n      tag_182\n      swap2\n      swap3\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10486:10515  weth.deposit{value: amount}() */\n      swap1\n      tag_6\n      jump\t// in\n    tag_182:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":10486:10515  weth.deposit{value: amount}() */\n      swap1\n      0x00\n      jump(tag_181)\n    tag_178:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_174:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x08\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xc0, 0x42616456616c7565)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_21:\n      jumpi(tag_107, callvalue)\n      tag_185\n      calldatasize\n      tag_2\n      jump\t// in\n    tag_185:\n      sload(0x01)\n      swap3\n      swap6\n      swap1\n      swap4\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      swap4\n      swap1\n      swap3\n      swap2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8237:8248  amountInMax */\n      tag_186\n      swap2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup4\n      swap2\n      and\n      dup6\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8237:8248  amountInMax */\n      tag_15\n      jump\t// in\n    tag_186:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8314:8667  IUniswapV3RouterLike.ExactOutputSingleParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      tag_187\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8276:8677  router.exactOutputSingle(... */\n      0x0104\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8228:8234  router */\n      0x01\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      sload\n      and\n      swap8\n      mload(0x40)\n      swap1\n      tag_188\n      dup3\n      tag_4\n      jump\t// in\n    tag_188:\n      dup8\n      dup3\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8314:8667  IUniswapV3RouterLike.ExactOutputSingleParams({... */\n      swap8\n      dup9\n      dup6\n      dup4\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n      0xffffff\n      dup8\n      and\n      0x40\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8314:8667  IUniswapV3RouterLike.ExactOutputSingleParams({... */\n      dup4\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8484:8494  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8314:8667  IUniswapV3RouterLike.ExactOutputSingleParams({... */\n      0x60\n      dup4\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8314:8667  IUniswapV3RouterLike.ExactOutputSingleParams({... */\n      0x80\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8314:8667  IUniswapV3RouterLike.ExactOutputSingleParams({... */\n      dup10\n      0xa0\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8314:8667  IUniswapV3RouterLike.ExactOutputSingleParams({... */\n      dup5\n      0xc0\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n      0x00\n      0xe0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8314:8667  IUniswapV3RouterLike.ExactOutputSingleParams({... */\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n      0x00\n      mload(0x40)\n      swap10\n      dup11\n      swap5\n      dup6\n      swap4\n      shl(0xe3, 0x1b67c433)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8276:8677  router.exactOutputSingle(... */\n      dup6\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8276:8677  router.exactOutputSingle(... */\n      dup6\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      swap1\n      tag_7\n      jump\t// in\n    tag_187:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8276:8677  router.exactOutputSingle(... */\n      gas\n      call\n      swap5\n      dup6\n      iszero\n      tag_178\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8276:8677  router.exactOutputSingle(... */\n      swap6\n      tag_191\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n    tag_192:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8739:8766  amountInSpent < amountInMax */\n      pop\n      dup5\n      lt\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8735:8836  if (amountInSpent < amountInMax) {... */\n      tag_193\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n    tag_194:\n      0x40\n      dup1\n      mload\n      0xffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8314:8667  IUniswapV3RouterLike.ExactOutputSingleParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup3\n      dup2\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8484:8494  msg.sender */\n      caller\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8851:8934  SwapExactOutputSingle(msg.sender, tokenIn, tokenOut, fee, amountOut, amountInSpent) */\n      0x72e4e8885b9b7bf72254c4f959b634e6f85ed5c2b83a39bd986cfca591850450\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      dup1\n      0x60\n      dup2\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8851:8934  SwapExactOutputSingle(msg.sender, tokenIn, tokenOut, fee, amountOut, amountInSpent) */\n      tag_162\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      jump\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8735:8836  if (amountInSpent < amountInMax) {... */\n    tag_193:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8228:8234  router */\n      0x01\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      sload\n      and\n      mload(0x40)\n      swap1\n      shl(0xe0, 0x095ea7b3)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8782:8825  IERC20(tokenIn).approve(address(router), 0) */\n      dup3\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8782:8825  IERC20(tokenIn).approve(address(router), 0) */\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n      0x00\n      0x24\n      dup3\n      add\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8314:8667  IUniswapV3RouterLike.ExactOutputSingleParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8782:8825  IERC20(tokenIn).approve(address(router), 0) */\n      dup2\n      0x44\n      dup2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8782:8825  IERC20(tokenIn).approve(address(router), 0) */\n      dup8\n      gas\n      call\n      dup1\n      iszero\n      tag_178\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8314:8667  IUniswapV3RouterLike.ExactOutputSingleParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8782:8825  IERC20(tokenIn).approve(address(router), 0) */\n      swap7\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8851:8934  SwapExactOutputSingle(msg.sender, tokenIn, tokenOut, fee, amountOut, amountInSpent) */\n      0x72e4e8885b9b7bf72254c4f959b634e6f85ed5c2b83a39bd986cfca591850450\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8782:8825  IERC20(tokenIn).approve(address(router), 0) */\n      swap3\n      dup8\n      swap3\n      tag_198\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8735:8836  if (amountInSpent < amountInMax) {... */\n    tag_199:\n      pop\n      swap7\n      pop\n      pop\n      pop\n      jump(tag_194)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8782:8825  IERC20(tokenIn).approve(address(router), 0) */\n    tag_198:\n      tag_200\n      swap1\n      dup10\n      returndatasize\n      dup12\n      gt\n      tag_128\n      jumpi\n      tag_130\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_200:\n      pop\n      dup9\n      jump(tag_199)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8276:8677  router.exactOutputSingle(... */\n    tag_191:\n      swap1\n      swap5\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8314:8667  IUniswapV3RouterLike.ExactOutputSingleParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8276:8677  router.exactOutputSingle(... */\n      dup2\n      returndatasize\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8314:8667  IUniswapV3RouterLike.ExactOutputSingleParams({... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8276:8677  router.exactOutputSingle(... */\n      gt\n      tag_204\n      jumpi\n    tag_205:\n      dup2\n      tag_206\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8276:8677  router.exactOutputSingle(... */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_206:\n      dup2\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      sub\n      slt\n      tag_107\n      jumpi\n      mload\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":8276:8677  router.exactOutputSingle(... */\n      swap4\n      dup7\n      jump(tag_192)\n    tag_204:\n      returndatasize\n      swap2\n      pop\n      jump(tag_205)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_107\n      jumpi\n      jump\t// out\n    tag_2:\n      0xc0\n      swap1\n      not(0x03)\n      add\n      slt\n      tag_107\n      jumpi\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_107\n      jumpi\n      swap1\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_107\n      jumpi\n      swap1\n      calldataload(0x44)\n      0xffffff\n      dup2\n      and\n      dup2\n      sub\n      tag_107\n      jumpi\n      swap1\n      calldataload(0x64)\n      swap1\n      calldataload(0x84)\n      swap1\n      calldataload(0xa4)\n      swap1\n      jump\t// out\n    tag_3:\n      swap1\n      0xa0\n      not(0x03)\n      dup4\n      add\n      slt\n      tag_107\n      jumpi\n      calldataload(0x04)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_107\n      jumpi\n      dup3\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_107\n      jumpi\n      dup1\n      0x04\n      add\n      calldataload\n      swap3\n      0xffffffffffffffff\n      dup5\n      gt\n      tag_107\n      jumpi\n      0x24\n      dup5\n      dup4\n      add\n      add\n      gt\n      tag_107\n      jumpi\n      0x24\n      swap1\n      dup2\n      add\n      swap3\n      swap2\n      swap1\n      calldataload\n      swap1\n      calldataload(0x44)\n      swap1\n      calldataload(0x64)\n      swap1\n      calldataload(0x84)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_107\n      jumpi\n      swap1\n      jump\t// out\n    tag_4:\n      0x0100\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_231\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_231:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_5:\n      0xa0\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_231\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_6:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_231\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_7:\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup4\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      mload\n      dup3\n      and\n      swap1\n      dup5\n      add\n      mstore\n      0x40\n      dup1\n      dup4\n      add\n      mload\n      0xffffff\n      and\n      swap1\n      dup5\n      add\n      mstore\n      0x60\n      dup1\n      dup4\n      add\n      mload\n      dup3\n      and\n      swap1\n      dup5\n      add\n      mstore\n      0x80\n      dup1\n      dup4\n      add\n      mload\n      swap1\n      dup5\n      add\n      mstore\n      0xa0\n      dup1\n      dup4\n      add\n      mload\n      swap1\n      dup5\n      add\n      mstore\n      0xc0\n      dup1\n      dup4\n      add\n      mload\n      swap1\n      dup5\n      add\n      mstore\n      0xe0\n      swap2\n      dup3\n      add\n      mload\n      and\n      swap2\n      add\n      mstore\n      jump\t// out\n    tag_8:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_107\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_107\n      jumpi\n      swap1\n      jump\t// out\n    tag_10:\n      iszero\n      tag_241\n      jumpi\n      jump\t// out\n    tag_241:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x08\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xc1, 0x2d32b937a0b23239)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_11:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_231\n      jumpi\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_12:\n      swap3\n      swap2\n      swap3\n      tag_245\n      dup3\n      tag_11\n      jump\t// in\n    tag_245:\n      swap2\n      tag_246\n      mload(0x40)\n      swap4\n      dup5\n      tag_6\n      jump\t// in\n    tag_246:\n      dup3\n      swap5\n      dup2\n      dup5\n      mstore\n      dup2\n      dup4\n      add\n      gt\n      tag_107\n      jumpi\n      dup3\n      dup2\n      0x20\n      swap4\n      dup5\n      0x00\n      swap7\n      add\n      calldatacopy\n      add\n      add\n      mstore\n      jump\t// out\n    tag_13:\n      swap1\n      0x20\n      0x80\n      0xc0\n      swap4\n      dup1\n      mload\n      0xa0\n      dup6\n      mstore\n      dup1\n      mload\n      swap4\n      dup5\n      swap2\n      dup3\n      0xa0\n      dup9\n      add\n      mstore\n      add\n      dup7\n      dup7\n      add\n      mcopy\n      0x00\n      dup5\n      dup5\n      add\n      dup7\n      add\n      mstore\n      0x20\n      dup2\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup6\n      add\n      mstore\n      0x40\n      dup1\n      dup3\n      add\n      mload\n      swap1\n      dup6\n      add\n      mstore\n      0x60\n      dup1\n      dup3\n      add\n      mload\n      swap1\n      dup6\n      add\n      mstore\n      add\n      mload\n      0x80\n      dup4\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_14:\n      swap1\n      dup3\n      0x40\n      swap4\n      0x80\n      swap3\n      swap8\n      swap7\n      swap6\n      swap8\n      0x60\n      dup6\n      mstore\n      dup2\n      0x60\n      dup7\n      add\n      mstore\n      dup4\n      dup6\n      add\n      calldatacopy\n      0x00\n      dup3\n      dup3\n      dup6\n      add\n      add\n      mstore\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup3\n      add\n      add\n      swap5\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\t// out\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4911:5158  function _safeApprove(IERC20 token, address spender, uint256 amount) internal {... */\n    tag_15:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap2\n      mload(0x40)\n      swap2\n      shl(0xe0, 0x095ea7b3)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":5086:5111  token.approve(spender, 0) */\n      dup4\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":5086:5111  token.approve(spender, 0) */\n      dup1\n      0x04\n      dup5\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":5109:5110  0 */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x24\n      dup5\n      add\n      mstore\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":5086:5111  token.approve(spender, 0) */\n      dup4\n      0x44\n      dup2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":5109:5110  0 */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":5086:5111  token.approve(spender, 0) */\n      dup9\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_178\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":5086:5111  token.approve(spender, 0) */\n      swap4\n      0x44\n      swap3\n      tag_251\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4911:5158  function _safeApprove(IERC20 token, address spender, uint256 amount) internal {... */\n    tag_252:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":5109:5110  0 */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mload(0x40)\n      swap6\n      dup7\n      swap5\n      dup6\n      swap4\n      shl(0xe0, 0x095ea7b3)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":5121:5151  token.approve(spender, amount) */\n      dup6\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":5086:5111  token.approve(spender, 0) */\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":5121:5151  token.approve(spender, amount) */\n      dup6\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n      0x24\n      dup5\n      add\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":5121:5151  token.approve(spender, amount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_178\n      jumpi\n      tag_255\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4911:5158  function _safeApprove(IERC20 token, address spender, uint256 amount) internal {... */\n      pop\n      jump\t// out\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":5121:5151  token.approve(spender, amount) */\n    tag_255:\n      tag_257\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":5121:5151  token.approve(spender, amount) */\n      returndatasize\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":5121:5151  token.approve(spender, amount) */\n      gt\n      tag_128\n      jumpi\n      tag_130\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_257:\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":4911:5158  function _safeApprove(IERC20 token, address spender, uint256 amount) internal {... */\n      jump\t// out\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":5086:5111  token.approve(spender, 0) */\n    tag_251:\n      tag_261\n      swap1\n      dup6\n      returndatasize\n      dup8\n      gt\n      tag_128\n      jumpi\n      tag_130\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_261:\n      jump(tag_252)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      shl(0xe0, 0x118cdaa7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":2841:11116  contract SwapModule is Ownable {... */\n      mstore\n      0x24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      revert\n\n    auxdata: 0xa2646970667358221220452ae4fa35cc23a47d24bf57a4b044fc583e23071ff06f0dc1da0c1c226e94de64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x1F PUSH2 0x10D6 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x194 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x190 JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x1A8 JUMP JUMPDEST SWAP3 ADD PUSH2 0x1A8 JUMP JUMPDEST CALLER ISZERO PUSH2 0x17D JUMPI PUSH0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP5 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO ISZERO DUP1 PUSH2 0x16B JUMPI JUMPDEST ISZERO PUSH2 0x13E JUMPI POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH32 0x7AED1D3E8155A07CCF395E44EA3109A0E2D6C9B29BBBE9F142D9790596F4DC80 PUSH0 DUP1 LOG2 PUSH32 0x5F85E7E522385144040F94BCB1EEAEB07DA5E11D6384C124C09F53986D0ED8BC PUSH0 DUP1 LOG2 PUSH2 0xF19 SWAP1 DUP2 PUSH2 0x1BD DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2D32B937A0B23239 PUSH1 0xC1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO PUSH2 0xB3 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x190 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1A JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x18 JUMPI PUSH0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x23884B7 EQ PUSH2 0x971 JUMPI DUP1 PUSH4 0x1C58DB4F EQ PUSH2 0x8A4 JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x87B JUMPI DUP1 PUSH4 0x51E820E7 EQ PUSH2 0x717 JUMPI DUP1 PUSH4 0x5B769F3C EQ PUSH2 0x6A8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x627 JUMPI DUP1 PUSH4 0x8E2FDFA4 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x9EAA1983 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xED2F21F5 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xF018A8C1 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xEA JUMPI PUSH4 0xF887EA40 EQ PUSH2 0xBF JUMPI POP PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0xE7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE7 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE7 JUMPI PUSH2 0x104 PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x10C PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x15C JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE7 JUMPI PUSH1 0x2 SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x272 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x276 JUMPI PUSH2 0x25D JUMPI JUMPDEST POP DUP1 DUP1 DUP1 DUP5 CALLER GAS CALL RETURNDATASIZE ISZERO PUSH2 0x258 JUMPI RETURNDATASIZE PUSH2 0x1DC DUP2 PUSH2 0xD2D JUMP JUMPDEST SWAP1 PUSH2 0x1EA PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0xC5C JUMP JUMPDEST DUP2 MSTORE DUP4 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x228 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x95AE649BFAAEF9DEF56A52F4FB2D9E8FA5496BB7082930E442C74CC76B03DCB3 PUSH1 0x20 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x14D95B9911985A5B PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1F4 JUMP JUMPDEST DUP2 PUSH2 0x267 SWAP2 PUSH2 0xC5C JUMP JUMPDEST PUSH2 0x272 JUMPI DUP2 PUSH0 PUSH2 0x1C4 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE7 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xC4E0F79F70DB4B2CE509CF1E4ADB5FB99D03350DE03FAFD915B46124A7B5DD28 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE7 JUMPI PUSH2 0x2D6 PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x2DE PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F2 DUP2 ISZERO ISZERO PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x7AED1D3E8155A07CCF395E44EA3109A0E2D6C9B29BBBE9F142D9790596F4DC80 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI DUP1 PUSH2 0x3C4 PUSH2 0x366 PUSH1 0x20 SWAP4 PUSH2 0x344 CALLDATASIZE PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP4 SWAP11 SWAP6 SWAP9 SWAP5 SWAP8 SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP12 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x37F DUP4 PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x38A CALLDATASIZE DUP10 DUP12 PUSH2 0xD49 JUMP JUMPDEST DUP4 MSTORE CALLER DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE DUP10 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xC04B8D59 PUSH1 0xE0 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0xD7F JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x451 JUMPI SWAP4 PUSH2 0x418 JUMPI JUMPDEST POP PUSH1 0x20 SWAP4 PUSH32 0x459322B794F649891286454DB465D0EED0EE1C64F4E314F184014F24028D4077 SWAP2 PUSH2 0x40D DUP6 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 CALLER SWAP8 DUP6 PUSH2 0xDDE JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x449 JUMPI JUMPDEST DUP2 PUSH2 0x434 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xC5C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x445 JUMPI MLOAD SWAP2 PUSH1 0x20 PUSH2 0x3D5 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI DUP1 PUSH1 0x20 PUSH2 0x4FA PUSH2 0x472 CALLDATASIZE PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP4 SWAP10 SWAP6 SWAP8 SWAP5 SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP6 SWAP4 SWAP5 SWAP1 SWAP3 SWAP2 PUSH2 0x499 SWAP2 DUP7 SWAP2 AND DUP8 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0x4B4 DUP3 PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x4BF CALLDATASIZE DUP11 DUP13 PUSH2 0xD49 JUMP JUMPDEST DUP3 MSTORE CALLER DUP6 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE DUP11 PUSH1 0x60 DUP3 ADD MSTORE DUP5 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP10 DUP11 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1E518093 PUSH1 0xE3 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0xD7F JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x61C JUMPI DUP4 SWAP7 PUSH2 0x5E8 JUMPI JUMPDEST POP DUP6 LT PUSH2 0x54D JUMPI JUMPDEST POP POP PUSH1 0x20 SWAP4 PUSH32 0x61982354C6E19EAEBBE0C4376BDE59016AAD8D6D049A71EC6CDBB157C4D63BF3 SWAP2 PUSH2 0x40D DUP6 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 CALLER SWAP8 DUP6 PUSH2 0xDDE JUMP JUMPDEST PUSH1 0x20 DUP3 SWAP2 PUSH1 0x44 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP2 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x451 JUMPI POP SWAP2 PUSH1 0x20 SWAP6 SWAP2 PUSH32 0x61982354C6E19EAEBBE0C4376BDE59016AAD8D6D049A71EC6CDBB157C4D63BF3 SWAP4 PUSH2 0x5BB JUMPI JUMPDEST POP SWAP2 DUP2 SWAP6 POP PUSH2 0x514 JUMP JUMPDEST PUSH2 0x5DA SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x5E1 JUMPI JUMPDEST PUSH2 0x5D2 DUP2 DUP4 PUSH2 0xC5C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xCDE JUMP JUMPDEST POP PUSH0 PUSH2 0x5B1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5C8 JUMP JUMPDEST SWAP1 SWAP6 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x614 JUMPI JUMPDEST DUP2 PUSH2 0x604 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xC5C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x445 JUMPI MLOAD SWAP5 PUSH0 PUSH2 0x50C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE7 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE7 JUMPI PUSH2 0x667 PUSH2 0xEBD JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE7 JUMPI PUSH2 0x6C2 PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x6CA PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DE DUP2 ISZERO ISZERO PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x5F85E7E522385144040F94BCB1EEAEB07DA5E11D6384C124C09F53986D0ED8BC DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI PUSH2 0x7C5 SWAP1 PUSH1 0x20 PUSH2 0x104 PUSH2 0x72F CALLDATASIZE PUSH2 0xB4B JUMP JUMPDEST SWAP7 SWAP3 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SWAP12 SWAP5 SWAP12 SWAP9 SWAP4 SWAP7 SWAP9 SHL SUB AND SWAP6 PUSH2 0x757 DUP11 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND DUP10 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x770 DUP4 PUSH2 0xC0F JUMP JUMPDEST DUP9 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP9 DUP10 DUP7 DUP5 ADD MSTORE PUSH3 0xFFFFFF DUP9 AND PUSH1 0x40 DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE DUP11 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE DUP9 PUSH1 0xE0 DUP3 ADD MSTORE DUP9 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD SWAP1 PUSH2 0xC7E JUMP JUMPDEST GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x451 JUMPI SWAP5 PUSH2 0x825 JUMPI JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP1 PUSH32 0xA0EAB23D718FD05CF523C2400B0A13D8681222F055452F738A5B50EF83E82956 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD JUMPDEST SUB SWAP1 LOG4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP5 SWAP4 POP PUSH1 0x20 DUP6 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x873 JUMPI JUMPDEST DUP2 PUSH2 0x841 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xC5C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x445 JUMPI SWAP4 MLOAD SWAP3 SWAP4 PUSH32 0xA0EAB23D718FD05CF523C2400B0A13D8681222F055452F738A5B50EF83E82956 PUSH2 0x7D4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x834 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE7 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x445 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 CALLVALUE SUB PUSH2 0x941 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x445 JUMPI PUSH0 DUP3 SWAP2 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x936 JUMPI PUSH2 0x921 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x4700C1726B4198077CD40320A32C45265A1910521EB0EF713DD1D8412413D7FC PUSH1 0x20 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x92E SWAP2 SWAP3 POP PUSH0 SWAP1 PUSH2 0xC5C JUMP JUMPDEST PUSH0 SWAP1 PUSH0 PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x42616456616C7565 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x445 JUMPI PUSH2 0x97F CALLDATASIZE PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP3 SWAP6 SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP1 SWAP3 SWAP2 PUSH2 0x9A2 SWAP2 DUP4 SWAP2 AND DUP6 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x20 PUSH2 0xA19 PUSH2 0x104 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SWAP8 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x9C3 DUP3 PUSH2 0xC0F JUMP JUMPDEST DUP8 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP8 DUP9 DUP6 DUP4 ADD MSTORE PUSH3 0xFFFFFF DUP8 AND PUSH1 0x40 DUP4 ADD MSTORE CALLER PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE DUP10 PUSH1 0xA0 DUP3 ADD MSTORE DUP5 PUSH1 0xC0 DUP3 ADD MSTORE PUSH0 PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP5 DUP6 SWAP4 PUSH4 0x1B67C433 PUSH1 0xE3 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD SWAP1 PUSH2 0xC7E JUMP JUMPDEST GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x936 JUMPI PUSH0 SWAP6 PUSH2 0xB01 JUMPI JUMPDEST POP DUP5 LT PUSH2 0xA7A JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP1 PUSH32 0x72E4E8885B9B7BF72254C4F959B634E6F85ED5C2B83A39BD986CFCA591850450 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD PUSH2 0x81A JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH0 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x936 JUMPI PUSH1 0x20 SWAP7 PUSH32 0x72E4E8885B9B7BF72254C4F959B634E6F85ED5C2B83A39BD986CFCA591850450 SWAP3 DUP8 SWAP3 PUSH2 0xAE4 JUMPI JUMPDEST POP SWAP7 POP POP POP PUSH2 0xA31 JUMP JUMPDEST PUSH2 0xAFA SWAP1 DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x5E1 JUMPI PUSH2 0x5D2 DUP2 DUP4 PUSH2 0xC5C JUMP JUMPDEST POP DUP9 PUSH2 0xADA JUMP JUMPDEST SWAP1 SWAP5 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB2D JUMPI JUMPDEST DUP2 PUSH2 0xB1D PUSH1 0x20 SWAP4 DUP4 PUSH2 0xC5C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x445 JUMPI MLOAD SWAP4 DUP7 PUSH2 0xA29 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x445 JUMPI JUMP JUMPDEST PUSH1 0xC0 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x445 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x445 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x445 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 SUB PUSH2 0x445 JUMPI SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xA0 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x445 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x445 JUMPI DUP3 PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x445 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x445 JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x445 JUMPI PUSH1 0x24 SWAP1 DUP2 ADD SWAP3 SWAP2 SWAP1 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x445 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC2C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC2C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC2C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH3 0xFFFFFF AND SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xE0 SWAP2 DUP3 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x445 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x445 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xCFD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2D32B937A0B23239 PUSH1 0xC1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC2C JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xD55 DUP3 PUSH2 0xD2D JUMP JUMPDEST SWAP2 PUSH2 0xD63 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xC5C JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x445 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x80 PUSH1 0xC0 SWAP4 DUP1 MLOAD PUSH1 0xA0 DUP6 MSTORE DUP1 MLOAD SWAP4 DUP5 SWAP2 DUP3 PUSH1 0xA0 DUP9 ADD MSTORE ADD DUP7 DUP7 ADD MCOPY PUSH0 DUP5 DUP5 ADD DUP7 ADD MSTORE PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP6 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP6 ADD MSTORE ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x40 SWAP4 PUSH1 0x80 SWAP3 SWAP8 SWAP7 SWAP6 SWAP8 PUSH1 0x60 DUP6 MSTORE DUP2 PUSH1 0x60 DUP7 ADD MSTORE DUP4 DUP6 ADD CALLDATACOPY PUSH0 DUP3 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP3 ADD ADD SWAP5 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH1 0x4 DUP5 ADD MSTORE PUSH0 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x20 DUP4 PUSH1 0x44 DUP2 PUSH0 DUP9 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x936 JUMPI PUSH1 0x20 SWAP4 PUSH1 0x44 SWAP3 PUSH2 0xEA2 JUMPI JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x936 JUMPI PUSH2 0xE87 JUMPI POP JUMP JUMPDEST PUSH2 0xE9F SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5E1 JUMPI PUSH2 0x5D2 DUP2 DUP4 PUSH2 0xC5C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xEB8 SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x5E1 JUMPI PUSH2 0x5D2 DUP2 DUP4 PUSH2 0xC5C JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xED0 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0x2A 0xE4 STATICCALL CALLDATALOAD 0xCC 0x23 LOG4 PUSH30 0x24BF57A4B044FC583E23071FF06F0DC1DA0C1C226E94DE64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "2841:8275:8:-:0;;;;;;;;;;;;;-1:-1:-1;;2841:8275:8;;;;-1:-1:-1;;;;;2841:8275:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;4194:10;1273:26:0;1269:95;;-1:-1:-1;2841:8275:8;;4194:10;-1:-1:-1;;;;;;2841:8275:8;;;;;;;;;;4194:10;;-1:-1:-1;;;;;2841:8275:8;;3052:40:0;;-1:-1:-1;3052:40:0;-1:-1:-1;;;;;2841:8275:8;;4224:21;;;;:44;;-1:-1:-1;2841:8275:8;;;-1:-1:-1;2841:8275:8;;;-1:-1:-1;;;;;;2841:8275:8;;;;;;;;4339:20;2841:8275;;;;;-1:-1:-1;;;;;2841:8275:8;;;;;;;;;;;;4374:22;-1:-1:-1;;4374:22:8;4411:18;-1:-1:-1;4411:18:8;;2841:8275;;;;;;;;-1:-1:-1;;;2841:8275:8;;;;;;;;;;;;-1:-1:-1;;;2841:8275:8;;;;;;;4224:44;-1:-1:-1;;;;;;2841:8275:8;;4249:19;;4224:44;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;2841:8275:8;;-1:-1:-1;1322:31:0;2841:8275:8;-1:-1:-1;2841:8275:8;;;;;;-1:-1:-1;2841:8275:8;;;;;-1:-1:-1;2841:8275:8;;;;-1:-1:-1;;;;;2841:8275:8;;;;;;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 2869,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_addresst_addresst_uint24t_uint256t_uint256t_uint256": {
									"entryPoint": 2891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 6
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 3401,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 3294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes_calldatat_uint256t_uint256t_uint256t_address": {
									"entryPoint": 2973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 6
								},
								"abi_encode_bytes_calldata_uint256_uint256": {
									"entryPoint": 3550,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_struct_ExactOutputParams": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_ExactOutputSingleParams": {
									"entryPoint": 3198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_uint24_uint256_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 3373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_6551": {
									"entryPoint": 3087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_6557": {
									"entryPoint": 3136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkOwner": {
									"entryPoint": 3773,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_safeApprove": {
									"entryPoint": 3603,
									"id": 1146,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"require_helper_stringliteral_49e8": {
									"entryPoint": 3318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436101561001a575b3615610018575f80fd5b005b5f803560e01c8063023884b7146109715780631c58db4f146108a45780633fc8cef31461087b57806351e820e7146107175780635b769f3c146106a8578063715018a61461064e5780638da5cb5b146106275780638e2fdfa41461045d5780639eaa19831461032b578063c0d78655146102bc578063ed2f21f514610281578063f018a8c114610170578063f2fde38b146100ea5763f887ea40146100bf575061000e565b346100e757806003193601126100e7576001546040516001600160a01b039091168152602090f35b80fd5b50346100e75760203660031901126100e757610104610b35565b61010c610ebd565b6001600160a01b0316801561015c5781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b50346100e75760203660031901126100e7576002546004359082906001600160a01b0316803b1561027257818091602460405180948193632e1a7d4d60e01b83528860048401525af180156102765761025d575b5080808084335af13d15610258573d6101dc81610d2d565b906101ea6040519283610c5c565b81528360203d92013e5b15610228576040519081527f95ae649bfaaef9def56a52f4fb2d9e8fa5496bb7082930e442c74cc76b03dcb360203392a280f35b60405162461bcd60e51b815260206004820152600860248201526714d95b9911985a5b60c21b6044820152606490fd5b6101f4565b8161026791610c5c565b61027257815f6101c4565b5080fd5b6040513d84823e3d90fd5b50346100e757806003193601126100e75760206040517fc4e0f79f70db4b2ce509cf1e4adb5fb99d03350de03fafd915b46124a7b5dd288152f35b50346100e75760203660031901126100e7576102d6610b35565b6102de610ebd565b6001600160a01b03166102f2811515610cf6565b600180546001600160a01b031916821790557f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc808280a280f35b50346100e757806103c461036660209361034436610b9d565b600154939a9598949792939192918b916001600160a01b039182169116610e13565b60018060a01b0360015416916040519161037f83610c40565b61038a36898b610d49565b835233868401526040830152896060830152608082015260405194858094819363c04b8d5960e01b83528760048401526024830190610d7f565b03925af19384156104515793610418575b506020937f459322b794f649891286454db465d0eed0ee1c64f4e314f184014f24028d40779161040d85604051938493339785610dde565b0390a2604051908152f35b9092506020813d602011610449575b8161043460209383610c5c565b8101031261044557519160206103d5565b5f80fd5b3d9150610427565b604051903d90823e3d90fd5b50346100e7578060206104fa61047236610b9d565b6001549399959794966001600160a01b039182169593949092916104999186911687610e13565b6001546040516001600160a01b03909116916104b482610c40565b6104bf368a8c610d49565b8252338583015260408201528a6060820152846080820152604051998a80948193631e51809360e31b83528760048401526024830190610d7f565b03925af195861561061c5783966105e8575b50851061054d575b50506020937f61982354c6e19eaebbe0c4376bde59016aad8d6d049a71ec6cdbb157c4d63bf39161040d85604051938493339785610dde565b60208291604460018060a01b0360015416604051958693849263095ea7b360e01b845260048401528160248401525af1908115610451575091602095917f61982354c6e19eaebbe0c4376bde59016aad8d6d049a71ec6cdbb157c4d63bf3936105bb575b5091819550610514565b6105da90873d89116105e1575b6105d28183610c5c565b810190610cde565b505f6105b1565b503d6105c8565b9095506020813d602011610614575b8161060460209383610c5c565b810103126104455751945f61050c565b3d91506105f7565b6040513d85823e3d90fd5b50346100e757806003193601126100e757546040516001600160a01b039091168152602090f35b50346100e757806003193601126100e757610667610ebd565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346100e75760203660031901126100e7576106c2610b35565b6106ca610ebd565b6001600160a01b03166106de811515610cf6565b600280546001600160a01b031916821790557f5f85e7e522385144040f94bcb1eeaeb07da5e11d6384c124c09f53986d0ed8bc8280a280f35b50346100e7576107c590602061010461072f36610b4b565b96929460018060a09b949b989396981b0316956107578a60018060a01b036001541689610e13565b60018060a01b0360015416946040519161077083610c0f565b88835260018060a01b031698898684015262ffffff8816604084015233606084015260808301528a60a083015260c08201528860e082015288604051958694859363414bf38960e01b85526004850190610c7e565b5af19485156104515794610825575b506040805162ffffff9092168252602082810196909652810184905233907fa0eab23d718fd05cf523c2400b0a13d8681222f055452f738a5b50ef83e829569080606081015b0390a4604051908152f35b9493506020853d602011610873575b8161084160209383610c5c565b8101031261044557935192937fa0eab23d718fd05cf523c2400b0a13d8681222f055452f738a5b50ef83e829566107d4565b3d9150610834565b50346100e757806003193601126100e7576002546040516001600160a01b039091168152602090f35b50602036600319011261044557600435803403610941576002546001600160a01b0316803b15610445575f8291600460405180948193630d0e30db60e41b83525af1801561093657610921575b506040519081527f4700c1726b4198077cd40320a32c45265a1910521eb0ef713dd1d8412413d7fc60203392a280f35b61092e9192505f90610c5c565b5f905f6108f1565b6040513d5f823e3d90fd5b60405162461bcd60e51b815260206004820152600860248201526742616456616c756560c01b6044820152606490fd5b346104455761097f36610b4b565b600154929590936001600160a01b03918216939092916109a29183911685610e13565b6020610a1961010460018060a01b036001541697604051906109c382610c0f565b87825260018060a01b031697888583015262ffffff8716604083015233606083015260808201528960a08201528460c08201525f60e08201525f604051998a948593631b67c43360e31b85526004850190610c7e565b5af1948515610936575f95610b01575b508410610a7a575b6040805162ffffff9092168252602082810196909652810184905233907f72e4e8885b9b7bf72254c4f959b634e6f85ed5c2b83a39bd986cfca59185045090806060810161081a565b60018060a01b03600154166040519063095ea7b360e01b825260048201525f60248201526020816044815f875af18015610936576020967f72e4e8885b9b7bf72254c4f959b634e6f85ed5c2b83a39bd986cfca591850450928792610ae4575b5096505050610a31565b610afa90893d8b116105e1576105d28183610c5c565b5088610ada565b9094506020813d602011610b2d575b81610b1d60209383610c5c565b8101031261044557519386610a29565b3d9150610b10565b600435906001600160a01b038216820361044557565b60c0906003190112610445576004356001600160a01b038116810361044557906024356001600160a01b0381168103610445579060443562ffffff811681036104455790606435906084359060a43590565b9060a06003198301126104455760043567ffffffffffffffff811161044557826023820112156104455780600401359267ffffffffffffffff84116104455760248483010111610445576024908101929190359060443590606435906084356001600160a01b03811681036104455790565b610100810190811067ffffffffffffffff821117610c2c57604052565b634e487b7160e01b5f52604160045260245ffd5b60a0810190811067ffffffffffffffff821117610c2c57604052565b90601f8019910116810190811067ffffffffffffffff821117610c2c57604052565b80516001600160a01b03908116835260208083015182169084015260408083015162ffffff16908401526060808301518216908401526080808301519084015260a0808301519084015260c0808301519084015260e09182015116910152565b90816020910312610445575180151581036104455790565b15610cfd57565b60405162461bcd60e51b81526020600482015260086024820152672d32b937a0b2323960c11b6044820152606490fd5b67ffffffffffffffff8111610c2c57601f01601f191660200190565b929192610d5582610d2d565b91610d636040519384610c5c565b829481845281830111610445578281602093845f960137010152565b906020608060c093805160a0855280519384918260a0880152018686015e5f8484018601526020818101516001600160a01b031690850152604080820151908501526060808201519085015201516080830152601f01601f1916010190565b90826040936080929796959760608552816060860152838501375f828285010152601f80199101168201019460208201520152565b60018060a01b0316916040519163095ea7b360e01b835260018060a01b03168060048401525f60248401526020836044815f885af190811561093657602093604492610ea2575b505f604051958694859363095ea7b360e01b8552600485015260248401525af1801561093657610e875750565b610e9f9060203d6020116105e1576105d28183610c5c565b50565b610eb890853d87116105e1576105d28183610c5c565b610e5a565b5f546001600160a01b03163303610ed057565b63118cdaa760e01b5f523360045260245ffdfea2646970667358221220452ae4fa35cc23a47d24bf57a4b044fc583e23071ff06f0dc1da0c1c226e94de64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1A JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x18 JUMPI PUSH0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x23884B7 EQ PUSH2 0x971 JUMPI DUP1 PUSH4 0x1C58DB4F EQ PUSH2 0x8A4 JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x87B JUMPI DUP1 PUSH4 0x51E820E7 EQ PUSH2 0x717 JUMPI DUP1 PUSH4 0x5B769F3C EQ PUSH2 0x6A8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x627 JUMPI DUP1 PUSH4 0x8E2FDFA4 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x9EAA1983 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xED2F21F5 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xF018A8C1 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xEA JUMPI PUSH4 0xF887EA40 EQ PUSH2 0xBF JUMPI POP PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0xE7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE7 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE7 JUMPI PUSH2 0x104 PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x10C PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x15C JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE7 JUMPI PUSH1 0x2 SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x272 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x276 JUMPI PUSH2 0x25D JUMPI JUMPDEST POP DUP1 DUP1 DUP1 DUP5 CALLER GAS CALL RETURNDATASIZE ISZERO PUSH2 0x258 JUMPI RETURNDATASIZE PUSH2 0x1DC DUP2 PUSH2 0xD2D JUMP JUMPDEST SWAP1 PUSH2 0x1EA PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0xC5C JUMP JUMPDEST DUP2 MSTORE DUP4 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x228 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x95AE649BFAAEF9DEF56A52F4FB2D9E8FA5496BB7082930E442C74CC76B03DCB3 PUSH1 0x20 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x14D95B9911985A5B PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1F4 JUMP JUMPDEST DUP2 PUSH2 0x267 SWAP2 PUSH2 0xC5C JUMP JUMPDEST PUSH2 0x272 JUMPI DUP2 PUSH0 PUSH2 0x1C4 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE7 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xC4E0F79F70DB4B2CE509CF1E4ADB5FB99D03350DE03FAFD915B46124A7B5DD28 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE7 JUMPI PUSH2 0x2D6 PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x2DE PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F2 DUP2 ISZERO ISZERO PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x7AED1D3E8155A07CCF395E44EA3109A0E2D6C9B29BBBE9F142D9790596F4DC80 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI DUP1 PUSH2 0x3C4 PUSH2 0x366 PUSH1 0x20 SWAP4 PUSH2 0x344 CALLDATASIZE PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP4 SWAP11 SWAP6 SWAP9 SWAP5 SWAP8 SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP12 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x37F DUP4 PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x38A CALLDATASIZE DUP10 DUP12 PUSH2 0xD49 JUMP JUMPDEST DUP4 MSTORE CALLER DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE DUP10 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xC04B8D59 PUSH1 0xE0 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0xD7F JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x451 JUMPI SWAP4 PUSH2 0x418 JUMPI JUMPDEST POP PUSH1 0x20 SWAP4 PUSH32 0x459322B794F649891286454DB465D0EED0EE1C64F4E314F184014F24028D4077 SWAP2 PUSH2 0x40D DUP6 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 CALLER SWAP8 DUP6 PUSH2 0xDDE JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x449 JUMPI JUMPDEST DUP2 PUSH2 0x434 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xC5C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x445 JUMPI MLOAD SWAP2 PUSH1 0x20 PUSH2 0x3D5 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI DUP1 PUSH1 0x20 PUSH2 0x4FA PUSH2 0x472 CALLDATASIZE PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP4 SWAP10 SWAP6 SWAP8 SWAP5 SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP6 SWAP4 SWAP5 SWAP1 SWAP3 SWAP2 PUSH2 0x499 SWAP2 DUP7 SWAP2 AND DUP8 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0x4B4 DUP3 PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x4BF CALLDATASIZE DUP11 DUP13 PUSH2 0xD49 JUMP JUMPDEST DUP3 MSTORE CALLER DUP6 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE DUP11 PUSH1 0x60 DUP3 ADD MSTORE DUP5 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP10 DUP11 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1E518093 PUSH1 0xE3 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0xD7F JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x61C JUMPI DUP4 SWAP7 PUSH2 0x5E8 JUMPI JUMPDEST POP DUP6 LT PUSH2 0x54D JUMPI JUMPDEST POP POP PUSH1 0x20 SWAP4 PUSH32 0x61982354C6E19EAEBBE0C4376BDE59016AAD8D6D049A71EC6CDBB157C4D63BF3 SWAP2 PUSH2 0x40D DUP6 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 CALLER SWAP8 DUP6 PUSH2 0xDDE JUMP JUMPDEST PUSH1 0x20 DUP3 SWAP2 PUSH1 0x44 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP2 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x451 JUMPI POP SWAP2 PUSH1 0x20 SWAP6 SWAP2 PUSH32 0x61982354C6E19EAEBBE0C4376BDE59016AAD8D6D049A71EC6CDBB157C4D63BF3 SWAP4 PUSH2 0x5BB JUMPI JUMPDEST POP SWAP2 DUP2 SWAP6 POP PUSH2 0x514 JUMP JUMPDEST PUSH2 0x5DA SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x5E1 JUMPI JUMPDEST PUSH2 0x5D2 DUP2 DUP4 PUSH2 0xC5C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xCDE JUMP JUMPDEST POP PUSH0 PUSH2 0x5B1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5C8 JUMP JUMPDEST SWAP1 SWAP6 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x614 JUMPI JUMPDEST DUP2 PUSH2 0x604 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xC5C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x445 JUMPI MLOAD SWAP5 PUSH0 PUSH2 0x50C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE7 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE7 JUMPI PUSH2 0x667 PUSH2 0xEBD JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE7 JUMPI PUSH2 0x6C2 PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x6CA PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DE DUP2 ISZERO ISZERO PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x5F85E7E522385144040F94BCB1EEAEB07DA5E11D6384C124C09F53986D0ED8BC DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI PUSH2 0x7C5 SWAP1 PUSH1 0x20 PUSH2 0x104 PUSH2 0x72F CALLDATASIZE PUSH2 0xB4B JUMP JUMPDEST SWAP7 SWAP3 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SWAP12 SWAP5 SWAP12 SWAP9 SWAP4 SWAP7 SWAP9 SHL SUB AND SWAP6 PUSH2 0x757 DUP11 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND DUP10 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x770 DUP4 PUSH2 0xC0F JUMP JUMPDEST DUP9 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP9 DUP10 DUP7 DUP5 ADD MSTORE PUSH3 0xFFFFFF DUP9 AND PUSH1 0x40 DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE DUP11 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE DUP9 PUSH1 0xE0 DUP3 ADD MSTORE DUP9 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD SWAP1 PUSH2 0xC7E JUMP JUMPDEST GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x451 JUMPI SWAP5 PUSH2 0x825 JUMPI JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP1 PUSH32 0xA0EAB23D718FD05CF523C2400B0A13D8681222F055452F738A5B50EF83E82956 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD JUMPDEST SUB SWAP1 LOG4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP5 SWAP4 POP PUSH1 0x20 DUP6 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x873 JUMPI JUMPDEST DUP2 PUSH2 0x841 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xC5C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x445 JUMPI SWAP4 MLOAD SWAP3 SWAP4 PUSH32 0xA0EAB23D718FD05CF523C2400B0A13D8681222F055452F738A5B50EF83E82956 PUSH2 0x7D4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x834 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE7 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x445 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 CALLVALUE SUB PUSH2 0x941 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x445 JUMPI PUSH0 DUP3 SWAP2 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x936 JUMPI PUSH2 0x921 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x4700C1726B4198077CD40320A32C45265A1910521EB0EF713DD1D8412413D7FC PUSH1 0x20 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x92E SWAP2 SWAP3 POP PUSH0 SWAP1 PUSH2 0xC5C JUMP JUMPDEST PUSH0 SWAP1 PUSH0 PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x42616456616C7565 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x445 JUMPI PUSH2 0x97F CALLDATASIZE PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP3 SWAP6 SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP1 SWAP3 SWAP2 PUSH2 0x9A2 SWAP2 DUP4 SWAP2 AND DUP6 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x20 PUSH2 0xA19 PUSH2 0x104 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SWAP8 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x9C3 DUP3 PUSH2 0xC0F JUMP JUMPDEST DUP8 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP8 DUP9 DUP6 DUP4 ADD MSTORE PUSH3 0xFFFFFF DUP8 AND PUSH1 0x40 DUP4 ADD MSTORE CALLER PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE DUP10 PUSH1 0xA0 DUP3 ADD MSTORE DUP5 PUSH1 0xC0 DUP3 ADD MSTORE PUSH0 PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP5 DUP6 SWAP4 PUSH4 0x1B67C433 PUSH1 0xE3 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD SWAP1 PUSH2 0xC7E JUMP JUMPDEST GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x936 JUMPI PUSH0 SWAP6 PUSH2 0xB01 JUMPI JUMPDEST POP DUP5 LT PUSH2 0xA7A JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP1 PUSH32 0x72E4E8885B9B7BF72254C4F959B634E6F85ED5C2B83A39BD986CFCA591850450 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD PUSH2 0x81A JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH0 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x936 JUMPI PUSH1 0x20 SWAP7 PUSH32 0x72E4E8885B9B7BF72254C4F959B634E6F85ED5C2B83A39BD986CFCA591850450 SWAP3 DUP8 SWAP3 PUSH2 0xAE4 JUMPI JUMPDEST POP SWAP7 POP POP POP PUSH2 0xA31 JUMP JUMPDEST PUSH2 0xAFA SWAP1 DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x5E1 JUMPI PUSH2 0x5D2 DUP2 DUP4 PUSH2 0xC5C JUMP JUMPDEST POP DUP9 PUSH2 0xADA JUMP JUMPDEST SWAP1 SWAP5 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB2D JUMPI JUMPDEST DUP2 PUSH2 0xB1D PUSH1 0x20 SWAP4 DUP4 PUSH2 0xC5C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x445 JUMPI MLOAD SWAP4 DUP7 PUSH2 0xA29 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x445 JUMPI JUMP JUMPDEST PUSH1 0xC0 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x445 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x445 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x445 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 SUB PUSH2 0x445 JUMPI SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xA0 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x445 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x445 JUMPI DUP3 PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x445 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x445 JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x445 JUMPI PUSH1 0x24 SWAP1 DUP2 ADD SWAP3 SWAP2 SWAP1 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x445 JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC2C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC2C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xC2C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH3 0xFFFFFF AND SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0xE0 SWAP2 DUP3 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x445 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x445 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xCFD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2D32B937A0B23239 PUSH1 0xC1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC2C JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xD55 DUP3 PUSH2 0xD2D JUMP JUMPDEST SWAP2 PUSH2 0xD63 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xC5C JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x445 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x80 PUSH1 0xC0 SWAP4 DUP1 MLOAD PUSH1 0xA0 DUP6 MSTORE DUP1 MLOAD SWAP4 DUP5 SWAP2 DUP3 PUSH1 0xA0 DUP9 ADD MSTORE ADD DUP7 DUP7 ADD MCOPY PUSH0 DUP5 DUP5 ADD DUP7 ADD MSTORE PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP6 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP6 ADD MSTORE ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x40 SWAP4 PUSH1 0x80 SWAP3 SWAP8 SWAP7 SWAP6 SWAP8 PUSH1 0x60 DUP6 MSTORE DUP2 PUSH1 0x60 DUP7 ADD MSTORE DUP4 DUP6 ADD CALLDATACOPY PUSH0 DUP3 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP3 ADD ADD SWAP5 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH1 0x4 DUP5 ADD MSTORE PUSH0 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x20 DUP4 PUSH1 0x44 DUP2 PUSH0 DUP9 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x936 JUMPI PUSH1 0x20 SWAP4 PUSH1 0x44 SWAP3 PUSH2 0xEA2 JUMPI JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x936 JUMPI PUSH2 0xE87 JUMPI POP JUMP JUMPDEST PUSH2 0xE9F SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5E1 JUMPI PUSH2 0x5D2 DUP2 DUP4 PUSH2 0xC5C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xEB8 SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x5E1 JUMPI PUSH2 0x5D2 DUP2 DUP4 PUSH2 0xC5C JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xED0 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0x2A 0xE4 STATICCALL CALLDATALOAD 0xCC 0x23 LOG4 PUSH30 0x24BF57A4B044FC583E23071FF06F0DC1DA0C1C226E94DE64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "2841:8275:8:-:0;;;;;;;;;-1:-1:-1;2841:8275:8;;;;;;;;;;;;;;;;;;;;8314:353;2841:8275;8314:353;;;2841:8275;;;;;;;;;;6101:377;2841:8275;6101:377;;;2841:8275;;;;;;;;;;;;;;;9648:241;2841:8275;9648:241;;;7244:240;2841:8275;7244:240;;;2841:8275;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2841:8275:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;2841:8275:8;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;2841:8275:8;2627:22:0;;2623:91;;2841:8275:8;;-1:-1:-1;;;;;;2841:8275:8;;;;;;-1:-1:-1;;;;;2841:8275:8;3052:40:0;2841:8275:8;;3052:40:0;2841:8275:8;;2623:91:0;-1:-1:-1;;;2672:31:0;;2841:8275:8;;;;;2672:31:0;;2841:8275:8;;;;;;;-1:-1:-1;;2841:8275:8;;;;10732:4;2841:8275;;;;;;-1:-1:-1;;;;;2841:8275:8;10732:21;;;;;2841:8275;;;10732:21;2841:8275;;;;;;;;;10732:21;;;2841:8275;10732:21;;2841:8275;10732:21;;;;;;;;2841:8275;10960:10;;;;;;10952:43;;2841:8275;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;11043:29;2841:8275;10960:10;11043:29;;2841:8275;;;;;-1:-1:-1;;;2841:8275:8;;;;;;;;10732:21;2841:8275;;;-1:-1:-1;;;2841:8275:8;;;;;;;;;;10732:21;;;;;:::i;:::-;2841:8275;;10732:21;;;;2841:8275;;;;10732:21;2841:8275;;;;;;;;;;;;;;;;;;;;;;;;;3023:27;2841:8275;;;;;;;;;;-1:-1:-1;;2841:8275:8;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;2841:8275:8;4541:42;4549:21;;;4541:42;:::i;:::-;4593:38;2841:8275;;-1:-1:-1;;;;;;2841:8275:8;;;;;4646:22;;;;2841:8275;;;;;;;;;7181:8;7244:240;2841:8275;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2841:8275:8;;;;;7181:8;:::i;:::-;2841:8275;;;;;7172:6;2841:8275;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;7339:10;7244:240;;;2841:8275;;7244:240;;2841:8275;7244:240;;;;2841:8275;7244:240;;;2841:8275;;;;;;;;;;;;7213:281;;;2841:8275;7213:281;;2841:8275;;;;;;:::i;:::-;7213:281;;;;;;;;;;;;2841:8275;;7244:240;2841:8275;7510:57;2841:8275;7510:57;2841:8275;;;7339:10;;;;7510:57;;;:::i;:::-;;;;2841:8275;;;;;;7213:281;;;;7244:240;7213:281;;7244:240;7213:281;;;;;;2841:8275;7213:281;;;:::i;:::-;;;2841:8275;;;;;;7244:240;7213:281;;2841:8275;-1:-1:-1;2841:8275:8;;7213:281;;;-1:-1:-1;7213:281:8;;;2841:8275;;;;;;;;;;;;;;;;9648:241;2841:8275;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2841:8275:8;;;;;;;;;9577:11;;2841:8275;;;;9577:11;:::i;:::-;2841:8275;;;;-1:-1:-1;;;;;2841:8275:8;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;9744:10;9648:241;;;2841:8275;;9648:241;;2841:8275;9648:241;;;;2841:8275;9648:241;;;;2841:8275;;;;;;;;;;;;9616:283;;;2841:8275;9616:283;;2841:8275;;;;;;:::i;:::-;9616:283;;;;;;;;;;;;;2841:8275;9914:27;;;9910:101;;2841:8275;;;9648:241;2841:8275;10026:63;2841:8275;10026:63;2841:8275;;;9744:10;;;;10026:63;;;:::i;9910:101::-;9648:241;2841:8275;;9957:43;2841:8275;;;;;9568:6;2841:8275;;;;;;;;;;;;9957:43;;2841:8275;9957:43;;2841:8275;;;;;;9957:43;;;;;;;;;9648:241;9957:43;;10026:63;9957:43;;;9910:101;;;;;;;;9957:43;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;9616:283;;;;9648:241;9616:283;;9648:241;9616:283;;;;;;2841:8275;9616:283;;;:::i;:::-;;;2841:8275;;;;;9616:283;;;;;;;-1:-1:-1;9616:283:8;;;2841:8275;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2841:8275:8;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;2841:8275:8;;-1:-1:-1;;;;;;2841:8275:8;;;;;;-1:-1:-1;;;;;2841:8275:8;3052:40:0;2841:8275:8;;3052:40:0;2841:8275:8;;;;;;;;;-1:-1:-1;;2841:8275:8;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;2841:8275:8;4742:40;4750:19;;;4742:40;:::i;:::-;4792:20;2841:8275;;-1:-1:-1;;;;;;2841:8275:8;;;;;4827:18;;;;2841:8275;;;;;;;;;6101:377;6064:424;2841:8275;;;:::i;:::-;;;;;;;;;;;;;;;;;;6032:8;2841:8275;;;;;;6023:6;2841:8275;;6032:8;;:::i;:::-;2841:8275;;;;;6023:6;2841:8275;;;;;;;;;:::i;:::-;;;;;;;;;;6101:377;;;;;2841:8275;;;;;6101:377;;2841:8275;6270:10;6101:377;;;2841:8275;6101:377;;;2841:8275;6101:377;;;;2841:8275;6101:377;;;2841:8275;6101:377;2841:8275;6101:377;;2841:8275;;;;;;;;;;;;6064:424;;2841:8275;6064:424;;2841:8275;;:::i;:::-;6064:424;;;;;;;;;;2841:8275;-1:-1:-1;2841:8275:8;;;;;;;;;6101:377;2841:8275;;;;;;;;;;;;6270:10;;6504:77;;2841:8275;;;;6504:77;;;;2841:8275;;;;;;6064:424;;;;6101:377;6064:424;;6101:377;6064:424;;;;;;2841:8275;6064:424;;;:::i;:::-;;;2841:8275;;;;;;6064:424;;6504:77;6064:424;;;;;-1:-1:-1;6064:424:8;;2841:8275;;;;;;;;;;;;;3183:18;2841:8275;;;-1:-1:-1;;;;;2841:8275:8;;;;;;;;;-1:-1:-1;2841:8275:8;;-1:-1:-1;;2841:8275:8;;;;;;10444:9;;:19;2841:8275;;10486:4;2841:8275;-1:-1:-1;;;;;2841:8275:8;10486:29;;;;;2841:8275;;;;;;;;;;;;;10486:29;;;;;;;;;;2841:8275;;;;;;;10571:27;2841:8275;10579:10;10571:27;;2841:8275;;10486:29;;;;;2841:8275;10486:29;;:::i;:::-;2841:8275;10486:29;;;;;2841:8275;;;;;;;;;;;;-1:-1:-1;;;2841:8275:8;;;;;;;;;;;;-1:-1:-1;;;2841:8275:8;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2841:8275:8;;;;;;;8237:11;;2841:8275;;;;8237:11;:::i;:::-;8314:353;2841:8275;8276:401;2841:8275;;;;;8228:6;2841:8275;;;;;;;;;:::i;:::-;;;;;;;;;;8314:353;;;;;2841:8275;;;;;8314:353;;2841:8275;8484:10;8314:353;;;2841:8275;8314:353;;;2841:8275;8314:353;;;;2841:8275;8314:353;;;;2841:8275;;;8314:353;;2841:8275;;;;;;;;;;;;8276:401;;2841:8275;8276:401;;2841:8275;;:::i;:::-;8276:401;;;;;;;2841:8275;8276:401;;;2841:8275;8739:27;;;8735:101;;2841:8275;;;;;;;;;;8314:353;2841:8275;;;;;;;;;;;;8484:10;;8851:83;;2841:8275;;;;8851:83;2841:8275;8735:101;2841:8275;;;;;8228:6;2841:8275;;;;;;;;8782:43;;2841:8275;8782:43;;2841:8275;;;;;;8314:353;8782:43;;;2841:8275;8782:43;;;;;;;8314:353;8782:43;8851:83;8782:43;;;;;8735:101;;;;;;;;8782:43;;;;;;;;;;;;;:::i;:::-;;;;;8276:401;;;;8314:353;8276:401;;8314:353;8276:401;;;;;;2841:8275;8276:401;;;:::i;:::-;;;2841:8275;;;;;8276:401;;;;;;;-1:-1:-1;8276:401:8;;2841:8275;;;;-1:-1:-1;;;;;2841:8275:8;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;2841:8275:8;;;;;;;;;-1:-1:-1;;;;;2841:8275:8;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;2841:8275:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2841:8275:8;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;2841:8275:8;;;;;-1:-1:-1;2841:8275:8;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;2841:8275:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;2841:8275:8;;;;;;;;;;;;-1:-1:-1;;;2841:8275:8;;;;;;;;;;;;;;;-1:-1:-1;;2841:8275:8;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;2841:8275:8;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2841:8275:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2841:8275:8;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4911:247::-;2841:8275;;;;;;;;;;;;;5086:25;;2841:8275;;;;;;5086:25;;;;2841:8275;5109:1;2841:8275;;;;;5086:25;;;5109:1;5086:25;;;;;;;;2841:8275;5086:25;;;;;4911:247;2841:8275;5109:1;2841:8275;;;;;;;;;;5121:30;;5086:25;5121:30;;2841:8275;;;;;5121:30;;;;;;;;4911:247;:::o;5121:30::-;;;2841:8275;5121:30;2841:8275;5121:30;;;;;;;:::i;:::-;;4911:247::o;5086:25::-;;;;;;;;;;;;;:::i;:::-;;;1796:162:0;1710:6;2841:8275:8;-1:-1:-1;;;;;2841:8275:8;735:10:6;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:6;1901:40:0;2841:8275:8;;1710:6:0;1901:40"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "773000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MODULE_ID()": "371",
								"owner()": "2407",
								"renounceOwnership()": "28165",
								"router()": "2559",
								"setRouter(address)": "28000",
								"setWETH(address)": "27890",
								"swapExactInputPath(bytes,uint256,uint256,uint256,address)": "infinite",
								"swapExactInputSingle(address,address,uint24,uint256,uint256,uint256)": "infinite",
								"swapExactOutputPath(bytes,uint256,uint256,uint256,address)": "infinite",
								"swapExactOutputSingle(address,address,uint24,uint256,uint256,uint256)": "infinite",
								"transferOwnership(address)": "28429",
								"unwrapWETH(uint256)": "infinite",
								"weth()": "2322",
								"wrapETH(uint256)": "infinite"
							},
							"internal": {
								"_safeApprove(contract IERC20,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2841,
									"end": 11116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2841,
									"end": 11116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4194,
									"end": 4204,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 4194,
									"end": 4204,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4194,
									"end": 4204,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4194,
									"end": 4204,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4224,
									"end": 4245,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4224,
									"end": 4245,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4224,
									"end": 4245,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4224,
									"end": 4245,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4224,
									"end": 4268,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 4224,
									"end": 4268,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "13"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4359,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4374,
									"end": 4396,
									"name": "PUSH",
									"source": 8,
									"value": "7AED1D3E8155A07CCF395E44EA3109A0E2D6C9B29BBBE9F142D9790596F4DC80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 4374,
									"end": 4396,
									"name": "LOG2",
									"source": 8
								},
								{
									"begin": 4411,
									"end": 4429,
									"name": "PUSH",
									"source": 8,
									"value": "5F85E7E522385144040F94BCB1EEAEB07DA5E11D6384C124C09F53986D0ED8BC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 4411,
									"end": 4429,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4411,
									"end": 4429,
									"name": "LOG2",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "RETURN",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2D32B937A0B23239"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 4224,
									"end": 4268,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 4224,
									"end": 4268,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4249,
									"end": 4268,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4249,
									"end": 4268,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4224,
									"end": 4268,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 4224,
									"end": 4268,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "tag",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 2841,
									"end": 11116,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 11116,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220452ae4fa35cc23a47d24bf57a4b044fc583e23071ff06f0dc1da0c1c226e94de64736f6c634300081a0033",
									".code": [
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "18"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "23884B7"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1C58DB4F"
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "3FC8CEF3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "51E820E7"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "5B769F3C"
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "8E2FDFA4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "9EAA1983"
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "C0D78655"
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "ED2F21F5"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "F018A8C1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "F887EA40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "2E1A7D4D"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10960,
											"end": 10970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10960,
											"end": 10970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10960,
											"end": 10970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10960,
											"end": 10970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10960,
											"end": 10970,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10960,
											"end": 10970,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 10952,
											"end": 10995,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 10952,
											"end": 10995,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11043,
											"end": 11072,
											"name": "PUSH",
											"source": 8,
											"value": "95AE649BFAAEF9DEF56A52F4FB2D9E8FA5496BB7082930E442C74CC76B03DCB3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10960,
											"end": 10970,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 11043,
											"end": 11072,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11043,
											"end": 11072,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14D95B9911985A5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 10732,
											"end": 10753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 10732,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3023,
											"end": 3050,
											"name": "PUSH",
											"source": 8,
											"value": "C4E0F79F70DB4B2CE509CF1E4ADB5FB99D03350DE03FAFD915B46124A7B5DD28"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4541,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4541,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 4541,
											"end": 4583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4541,
											"end": 4583,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 4541,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4631,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH",
											"source": 8,
											"value": "7AED1D3E8155A07CCF395E44EA3109A0E2D6C9B29BBBE9F142D9790596F4DC80"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 7181,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP11",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 7181,
											"end": 7189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7189,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 7181,
											"end": 7189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7172,
											"end": 7178,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7349,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "C04B8D59"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7510,
											"end": 7567,
											"name": "PUSH",
											"source": 8,
											"value": "459322B794F649891286454DB465D0EED0EE1C64F4E314F184014F24028D4077"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7510,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7349,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7349,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7349,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7349,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 7510,
											"end": 7567,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 7510,
											"end": 7567,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7510,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 7510,
											"end": 7567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7510,
											"end": 7567,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 7510,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7510,
											"end": 7567,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7510,
											"end": 7567,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7510,
											"end": 7567,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 7213,
											"end": 7494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7244,
											"end": 7484,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 7213,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9577,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 9577,
											"end": 9588,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9577,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 9577,
											"end": 9588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9577,
											"end": 9588,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 9577,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9754,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1E518093"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "E3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9914,
											"end": 9941,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9914,
											"end": 9941,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9914,
											"end": 9941,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 9910,
											"end": 10011,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10026,
											"end": 10089,
											"name": "PUSH",
											"source": 8,
											"value": "61982354C6E19EAEBBE0C4376BDE59016AAD8D6D049A71EC6CDBB157C4D63BF3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10026,
											"end": 10089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9754,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9754,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9754,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9754,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 10026,
											"end": 10089,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 10026,
											"end": 10089,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10026,
											"end": 10089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 10026,
											"end": 10089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10011,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 9910,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9568,
											"end": 9574,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10026,
											"end": 10089,
											"name": "PUSH",
											"source": 8,
											"value": "61982354C6E19EAEBBE0C4376BDE59016AAD8D6D049A71EC6CDBB157C4D63BF3"
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10011,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 9910,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10011,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10011,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10011,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 9910,
											"end": 10011,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 9957,
											"end": 10000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 9957,
											"end": 10000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 9957,
											"end": 10000,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9889,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 9616,
											"end": 9899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 9616,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 4750,
											"end": 4769,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4750,
											"end": 4769,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4750,
											"end": 4769,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 4742,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4782,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 4742,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4792,
											"end": 4812,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4845,
											"name": "PUSH",
											"source": 8,
											"value": "5F85E7E522385144040F94BCB1EEAEB07DA5E11D6384C124C09F53986D0ED8BC"
										},
										{
											"begin": 4827,
											"end": 4845,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4845,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4845,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "PUSH",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP12",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP12",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 6032,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6023,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6032,
											"end": 6040,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6032,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 6032,
											"end": 6040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6032,
											"end": 6040,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 6032,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6023,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6270,
											"end": 6280,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "414BF389"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6270,
											"end": 6280,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6270,
											"end": 6280,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6581,
											"name": "PUSH",
											"source": 8,
											"value": "A0EAB23D718FD05CF523C2400B0A13D8681222F055452F738A5B50EF83E82956"
										},
										{
											"begin": 6504,
											"end": 6581,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6581,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 6504,
											"end": 6581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6581,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6581,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6581,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6478,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6064,
											"end": 6488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6581,
											"name": "PUSH",
											"source": 8,
											"value": "A0EAB23D718FD05CF523C2400B0A13D8681222F055452F738A5B50EF83E82956"
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 6064,
											"end": 6488,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3201,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 10444,
											"end": 10453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10444,
											"end": 10453,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 10444,
											"end": 10463,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10490,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "D0E30DB"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "E4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10571,
											"end": 10598,
											"name": "PUSH",
											"source": 8,
											"value": "4700C1726B4198077CD40320A32C45265A1910521EB0EF713DD1D8412413D7FC"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10579,
											"end": 10589,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 10571,
											"end": 10598,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10571,
											"end": 10598,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 10486,
											"end": 10515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 10486,
											"end": 10515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42616456616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8237,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 8237,
											"end": 8248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8237,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 8237,
											"end": 8248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8237,
											"end": 8248,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 8237,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "PUSH",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8228,
											"end": 8234,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8484,
											"end": 8494,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1B67C433"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "E3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8766,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8766,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8735,
											"end": 8836,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 8735,
											"end": 8836,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8484,
											"end": 8494,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 8484,
											"end": 8494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8851,
											"end": 8934,
											"name": "PUSH",
											"source": 8,
											"value": "72E4E8885B9B7BF72254C4F959B634E6F85ED5C2B83A39BD986CFCA591850450"
										},
										{
											"begin": 8851,
											"end": 8934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8851,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8735,
											"end": 8836,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 8735,
											"end": 8836,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8228,
											"end": 8234,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 8851,
											"end": 8934,
											"name": "PUSH",
											"source": 8,
											"value": "72E4E8885B9B7BF72254C4F959B634E6F85ED5C2B83A39BD986CFCA591850450"
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8735,
											"end": 8836,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 8735,
											"end": 8836,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8735,
											"end": 8836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8735,
											"end": 8836,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 8735,
											"end": 8836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8735,
											"end": 8836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8735,
											"end": 8836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8735,
											"end": 8836,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 8735,
											"end": 8836,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 8782,
											"end": 8825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 8782,
											"end": 8825,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8667,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 8276,
											"end": 8677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 8276,
											"end": 8677,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2D32B937A0B23239"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4911,
											"end": 5158,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 4911,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4911,
											"end": 5158,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 4911,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4911,
											"end": 5158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4911,
											"end": 5158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5121,
											"end": 5151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4911,
											"end": 5158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5086,
											"end": 5111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 5086,
											"end": 5111,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA7"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 11116,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MODULE_ID()": "ed2f21f5",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"router()": "f887ea40",
							"setRouter(address)": "c0d78655",
							"setWETH(address)": "5b769f3c",
							"swapExactInputPath(bytes,uint256,uint256,uint256,address)": "9eaa1983",
							"swapExactInputSingle(address,address,uint24,uint256,uint256,uint256)": "51e820e7",
							"swapExactOutputPath(bytes,uint256,uint256,uint256,address)": "8e2fdfa4",
							"swapExactOutputSingle(address,address,uint24,uint256,uint256,uint256)": "023884b7",
							"transferOwnership(address)": "f2fde38b",
							"unwrapWETH(uint256)": "f018a8c1",
							"weth()": "3fc8cef3",
							"wrapETH(uint256)": "1c58db4f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRouter\",\"type\":\"address\"}],\"name\":\"RouterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"SwapExactInputPath\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"SwapExactInputSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountInSpent\",\"type\":\"uint256\"}],\"name\":\"SwapExactOutputPath\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountInSpent\",\"type\":\"uint256\"}],\"name\":\"SwapExactOutputSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unwrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWETH\",\"type\":\"address\"}],\"name\":\"WETHUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Wrapped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MODULE_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IUniswapV3RouterLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"name\":\"setWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"}],\"name\":\"swapExactInputPath\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"}],\"name\":\"swapExactOutputPath\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInSpent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInSpent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unwrapWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IWETH9\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrapETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"swapExactInputPath(bytes,uint256,uint256,uint256,address)\":{\"params\":{\"amountIn\":\"Amount of input token to spend\",\"amountOutMin\":\"Minimum acceptable output (slippage)\",\"deadline\":\"Expiry\",\"path\":\"Uniswap V3 path (tokenIn,fee,tokenMid,fee,tokenOut...)\"}},\"swapExactInputSingle(address,address,uint24,uint256,uint256,uint256)\":{\"details\":\"Caller must be the vault (i.e., invoked via UserVault.executeCall).\",\"params\":{\"amountIn\":\"Amount of tokenIn to swap\",\"amountOutMin\":\"Minimum acceptable tokenOut (slippage control)\",\"deadline\":\"Unix timestamp after which the tx reverts\",\"fee\":\"Uniswap V3 pool fee (e.g., 500/3000/10000)\",\"tokenIn\":\"Input token address\",\"tokenOut\":\"Output token address\"}},\"swapExactOutputPath(bytes,uint256,uint256,uint256,address)\":{\"params\":{\"amountInMax\":\"Max input willing to spend\",\"amountOut\":\"Desired exact output\",\"deadline\":\"Expiry\",\"path\":\"Reversed path (tokenOut,fee,tokenMid,fee,tokenIn)\",\"tokenIn\":\"Token to draw from vault & approve\"}},\"swapExactOutputSingle(address,address,uint24,uint256,uint256,uint256)\":{\"params\":{\"amountInMax\":\"Max input you're willing to spend (slippage)\",\"amountOut\":\"Desired exact output\",\"deadline\":\"Expiry\",\"fee\":\"Pool fee\",\"tokenIn\":\"Input token address\",\"tokenOut\":\"Output token address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"MODULE_ID()\":{\"notice\":\"Module identifier to use when registering in ActionExecutor\"},\"router()\":{\"notice\":\"Uniswap V3 router (ISwapRouter)\"},\"swapExactInputPath(bytes,uint256,uint256,uint256,address)\":{\"notice\":\"Exact-input multihop swap using an encoded path.\"},\"swapExactInputSingle(address,address,uint24,uint256,uint256,uint256)\":{\"notice\":\"Exact-input single-pool swap (tokenIn -> tokenOut).\"},\"swapExactOutputPath(bytes,uint256,uint256,uint256,address)\":{\"notice\":\"Exact-output multihop swap using reversed path (per Uniswap V3 convention).\"},\"swapExactOutputSingle(address,address,uint24,uint256,uint256,uint256)\":{\"notice\":\"Exact-output single-pool swap (spend up to amountInMax to receive amountOut).\"},\"unwrapWETH(uint256)\":{\"notice\":\"Unwrap WETH held by the vault back to native ETH.\"},\"weth()\":{\"notice\":\"Wrapped native token\"},\"wrapETH(uint256)\":{\"notice\":\"Wrap native ETH held by the vault into WETH.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":\"SwapModule\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol\":{\"keccak256\":\"0x18d988fc061a7254fbfe572fd11192a677d9d8d8fdee0756f6debf5f9c27aa14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12a17ece331646c757cf5aafc5c7cbb38b36dba65fa01c33c0a037503f953be5\",\"dweb:/ipfs/QmahbJwksQQRHq9PnbNiA7CzFQ2jb7BTNYVupUVkzv2xGH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol:SwapModule",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 944,
								"contract": "src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol:SwapModule",
								"label": "router",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IUniswapV3RouterLike)928"
							},
							{
								"astId": 948,
								"contract": "src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol:SwapModule",
								"label": "weth",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IWETH9)838"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV3RouterLike)928": {
								"encoding": "inplace",
								"label": "contract IUniswapV3RouterLike",
								"numberOfBytes": "20"
							},
							"t_contract(IWETH9)838": {
								"encoding": "inplace",
								"label": "contract IWETH9",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"MODULE_ID()": {
								"notice": "Module identifier to use when registering in ActionExecutor"
							},
							"router()": {
								"notice": "Uniswap V3 router (ISwapRouter)"
							},
							"swapExactInputPath(bytes,uint256,uint256,uint256,address)": {
								"notice": "Exact-input multihop swap using an encoded path."
							},
							"swapExactInputSingle(address,address,uint24,uint256,uint256,uint256)": {
								"notice": "Exact-input single-pool swap (tokenIn -> tokenOut)."
							},
							"swapExactOutputPath(bytes,uint256,uint256,uint256,address)": {
								"notice": "Exact-output multihop swap using reversed path (per Uniswap V3 convention)."
							},
							"swapExactOutputSingle(address,address,uint24,uint256,uint256,uint256)": {
								"notice": "Exact-output single-pool swap (spend up to amountInMax to receive amountOut)."
							},
							"unwrapWETH(uint256)": {
								"notice": "Unwrap WETH held by the vault back to native ETH."
							},
							"weth()": {
								"notice": "Wrapped native token"
							},
							"wrapETH(uint256)": {
								"notice": "Wrap native ETH held by the vault into WETH."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 810,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 809,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 809,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								809
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							821
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 821,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 821,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								821,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							821
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 822,
							"src": "133:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 821,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "132:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "140:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 315,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 315,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 315,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 315,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 315,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 315,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							779
						]
					},
					"id": 780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 316,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 230,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 779,
							"linearizedBaseContracts": [
								779
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 327,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 336,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 351,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 353,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 355,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 349,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 347,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 779,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 377,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 379,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 380,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 375,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 362,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 779,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 404,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 406,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 402,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 400,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 411,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 390,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 389,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 779,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 432,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 434,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 435,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 428,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 440,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 416,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 415,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 779,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 459,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 455,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 466,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 468,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 444,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 779,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 514,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															485
														],
														"declarations": [
															{
																"constant": false,
																"id": 485,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 514,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 484,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 494,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 490,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 488,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 492,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 496,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 505,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 504,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 499,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 500,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 501,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 481,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 498,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 503,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 508,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 509,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 510,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 506,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 513,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 475,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 779,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 531,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 533,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 535,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 529,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 539,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 540,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 538,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 547,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 520,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 549,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 522,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 550,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 551,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 545,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 543,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 557,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 555,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 518,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 315,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 779,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 576,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 590,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 592,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 588,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 603,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 602,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 598,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 567,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 596,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 595,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 601,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 583,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 581,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 586,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 565,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 779,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 621,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 636,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 637,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 638,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 639,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 650,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 649,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 645,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 643,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 642,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 648,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 627,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 629,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 630,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 626,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 779,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 666,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 682,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 678,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 693,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 692,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 688,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 657,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 686,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 685,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 691,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 672,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 673,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 674,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 671,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 676,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 655,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 779,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 706,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 709,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 700,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 711,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 723,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 717,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 715,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 730,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 728,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 727,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 733,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 698,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 779,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 748,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 752,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 741,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 759,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 770,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 764,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 741,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 763,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 762,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 774,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 747,
												"id": 776,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 739,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 315,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 779,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 780,
							"src": "698:9376:5",
							"usedErrors": [
								327,
								336
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							809
						]
					},
					"id": 810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 809,
							"linearizedBaseContracts": [
								809
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 787,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 786,
												"id": 789,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 809,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 796,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 795,
												"id": 798,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 809,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 804,
												"id": 806,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 809,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 810,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							821
						]
					},
					"id": 822,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 811,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 812,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:7",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 821,
							"linearizedBaseContracts": [
								821
							],
							"name": "IERC165",
							"nameLocation": "433:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "819:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 814,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:7"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "862:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:7"
									},
									"scope": 821,
									"src": "792:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 822,
							"src": "423:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:7"
				},
				"id": 7
			},
			"src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol": {
				"ast": {
					"absolutePath": "src/Contract Architecture/Trading & Portfolio Management/SwapModule.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						],
						"IUniswapV3RouterLike": [
							928
						],
						"IWETH9": [
							838
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							779
						],
						"SwapModule": [
							1466
						]
					},
					"id": 1467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 823,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 825,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 148,
							"src": "957:67:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 824,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "965:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 316,
							"src": "1025:70:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 826,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "1033:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 829,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 780,
							"src": "1096:82:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 828,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 779,
										"src": "1104:9:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWETH9",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 838,
							"linearizedBaseContracts": [
								838
							],
							"name": "IWETH9",
							"nameLocation": "1190:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1212:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:8"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1238:0:8"
									},
									"scope": 838,
									"src": "1203:36:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1253:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "1262:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:9:8"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1279:0:8"
									},
									"scope": 838,
									"src": "1244:36:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1467,
							"src": "1180:102:8",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3RouterLike",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 928,
							"linearizedBaseContracts": [
								928
							],
							"name": "IUniswapV3RouterLike",
							"nameLocation": "1294:20:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IUniswapV3RouterLike.ExactInputSingleParams",
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "1321:47:8",
										"text": "@dev Minimal subset of ISwapRouter we need"
									},
									"id": 856,
									"members": [
										{
											"constant": false,
											"id": 841,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1421:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 856,
											"src": "1413:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 840,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1413:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 843,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1446:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 856,
											"src": "1438:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 842,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1438:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 845,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1472:3:8",
											"nodeType": "VariableDeclaration",
											"scope": 856,
											"src": "1464:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 844,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1464:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 847,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1493:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 856,
											"src": "1485:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 846,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1485:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 849,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1520:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 856,
											"src": "1512:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 848,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1512:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 851,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1546:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 856,
											"src": "1538:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 850,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 853,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1572:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 856,
											"src": "1564:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 852,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1564:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 855,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1606:17:8",
											"nodeType": "VariableDeclaration",
											"scope": 856,
											"src": "1598:25:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 854,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1598:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "1380:22:8",
									"nodeType": "StructDefinition",
									"scope": 928,
									"src": "1373:276:8",
									"visibility": "public"
								},
								{
									"canonicalName": "IUniswapV3RouterLike.ExactInputParams",
									"id": 867,
									"members": [
										{
											"constant": false,
											"id": 858,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1697:4:8",
											"nodeType": "VariableDeclaration",
											"scope": 867,
											"src": "1689:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 857,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1689:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 860,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1783:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 867,
											"src": "1775:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 859,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1775:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 862,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1810:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 867,
											"src": "1802:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 861,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1802:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 864,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1836:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 867,
											"src": "1828:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 863,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1828:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 866,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1862:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 867,
											"src": "1854:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 865,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1854:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "1662:16:8",
									"nodeType": "StructDefinition",
									"scope": 928,
									"src": "1655:230:8",
									"visibility": "public"
								},
								{
									"canonicalName": "IUniswapV3RouterLike.ExactOutputSingleParams",
									"id": 884,
									"members": [
										{
											"constant": false,
											"id": 869,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1940:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 884,
											"src": "1932:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 868,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1932:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 871,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1965:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 884,
											"src": "1957:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 870,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1957:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 873,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1991:3:8",
											"nodeType": "VariableDeclaration",
											"scope": 884,
											"src": "1983:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 872,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1983:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 875,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2012:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 884,
											"src": "2004:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 874,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2004:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 877,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2039:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 884,
											"src": "2031:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 876,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2031:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 879,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2065:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 884,
											"src": "2057:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 878,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2057:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 881,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2092:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 884,
											"src": "2084:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 880,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2084:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 883,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "2125:17:8",
											"nodeType": "VariableDeclaration",
											"scope": 884,
											"src": "2117:25:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 882,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "2117:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1898:23:8",
									"nodeType": "StructDefinition",
									"scope": 928,
									"src": "1891:277:8",
									"visibility": "public"
								},
								{
									"canonicalName": "IUniswapV3RouterLike.ExactOutputParams",
									"id": 895,
									"members": [
										{
											"constant": false,
											"id": 886,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2217:4:8",
											"nodeType": "VariableDeclaration",
											"scope": 895,
											"src": "2209:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 885,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2209:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 888,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2292:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 895,
											"src": "2284:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 887,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2284:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 890,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2319:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 895,
											"src": "2311:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 889,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2311:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 892,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2345:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 895,
											"src": "2337:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 891,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2337:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 894,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2372:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 895,
											"src": "2364:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 893,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2364:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2181:17:8",
									"nodeType": "StructDefinition",
									"scope": 928,
									"src": "2174:220:8",
									"visibility": "public"
								},
								{
									"functionSelector": "414bf389",
									"id": 903,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "2409:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2458:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "2426:38:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$856_calldata_ptr",
													"typeString": "struct IUniswapV3RouterLike.ExactInputSingleParams"
												},
												"typeName": {
													"id": 897,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 896,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"2426:22:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 856,
														"src": "2426:22:8"
													},
													"referencedDeclaration": 856,
													"src": "2426:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$856_storage_ptr",
														"typeString": "struct IUniswapV3RouterLike.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2425:40:8"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2500:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "2492:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2491:19:8"
									},
									"scope": 928,
									"src": "2400:111:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c04b8d59",
									"id": 911,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "2525:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2562:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "2536:32:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$867_calldata_ptr",
													"typeString": "struct IUniswapV3RouterLike.ExactInputParams"
												},
												"typeName": {
													"id": 905,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 904,
														"name": "ExactInputParams",
														"nameLocations": [
															"2536:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 867,
														"src": "2536:16:8"
													},
													"referencedDeclaration": 867,
													"src": "2536:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$867_storage_ptr",
														"typeString": "struct IUniswapV3RouterLike.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2535:34:8"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2604:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "2596:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2596:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2595:19:8"
									},
									"scope": 928,
									"src": "2516:99:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "db3e2198",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2629:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2680:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "2647:39:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$884_calldata_ptr",
													"typeString": "struct IUniswapV3RouterLike.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 913,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 912,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2647:23:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 884,
														"src": "2647:23:8"
													},
													"referencedDeclaration": 884,
													"src": "2647:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$884_storage_ptr",
														"typeString": "struct IUniswapV3RouterLike.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2646:41:8"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2722:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "2714:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2713:18:8"
									},
									"scope": 928,
									"src": "2620:112:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f28c0498",
									"id": 927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2746:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2785:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "2758:33:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$895_calldata_ptr",
													"typeString": "struct IUniswapV3RouterLike.ExactOutputParams"
												},
												"typeName": {
													"id": 921,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 920,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2758:17:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 895,
														"src": "2758:17:8"
													},
													"referencedDeclaration": 895,
													"src": "2758:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$895_storage_ptr",
														"typeString": "struct IUniswapV3RouterLike.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:35:8"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2827:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "2819:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2819:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2818:18:8"
									},
									"scope": 928,
									"src": "2737:100:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1467,
							"src": "1284:1555:8",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "Ownable",
										"nameLocations": [
											"2864:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "2864:7:8"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "2864:7:8"
								}
							],
							"canonicalName": "SwapModule",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1466,
							"linearizedBaseContracts": [
								1466,
								147,
								809
							],
							"name": "SwapModule",
							"nameLocation": "2850:10:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 934,
									"libraryName": {
										"id": 931,
										"name": "SafeERC20",
										"nameLocations": [
											"2884:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 779,
										"src": "2884:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "2878:27:8",
									"typeName": {
										"id": 933,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 932,
											"name": "IERC20",
											"nameLocations": [
												"2898:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "2898:6:8"
										},
										"referencedDeclaration": 315,
										"src": "2898:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "2911:71:8",
										"text": "@notice Module identifier to use when registering in ActionExecutor"
									},
									"functionSelector": "ed2f21f5",
									"id": 940,
									"mutability": "constant",
									"name": "MODULE_ID",
									"nameLocation": "3011:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1466,
									"src": "2987:63:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 936,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2987:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "535741505f4d4f44554c455f5631",
												"id": 938,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3033:16:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_c4e0f79f70db4b2ce509cf1e4adb5fb99d03350de03fafd915b46124a7b5dd28",
													"typeString": "literal_string \"SWAP_MODULE_V1\""
												},
												"value": "SWAP_MODULE_V1"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_c4e0f79f70db4b2ce509cf1e4adb5fb99d03350de03fafd915b46124a7b5dd28",
													"typeString": "literal_string \"SWAP_MODULE_V1\""
												}
											],
											"id": 937,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "3023:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 939,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3023:27:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "3057:43:8",
										"text": "@notice Uniswap V3 router (ISwapRouter)"
									},
									"functionSelector": "f887ea40",
									"id": 944,
									"mutability": "mutable",
									"name": "router",
									"nameLocation": "3133:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1466,
									"src": "3105:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
										"typeString": "contract IUniswapV3RouterLike"
									},
									"typeName": {
										"id": 943,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 942,
											"name": "IUniswapV3RouterLike",
											"nameLocations": [
												"3105:20:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 928,
											"src": "3105:20:8"
										},
										"referencedDeclaration": 928,
										"src": "3105:20:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
											"typeString": "contract IUniswapV3RouterLike"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "3146:32:8",
										"text": "@notice Wrapped native token"
									},
									"functionSelector": "3fc8cef3",
									"id": 948,
									"mutability": "mutable",
									"name": "weth",
									"nameLocation": "3197:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 1466,
									"src": "3183:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWETH9_$838",
										"typeString": "contract IWETH9"
									},
									"typeName": {
										"id": 947,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 946,
											"name": "IWETH9",
											"nameLocations": [
												"3183:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 838,
											"src": "3183:6:8"
										},
										"referencedDeclaration": 838,
										"src": "3183:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWETH9_$838",
											"typeString": "contract IWETH9"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc80",
									"id": 952,
									"name": "RouterUpdated",
									"nameLocation": "3214:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"indexed": true,
												"mutability": "mutable",
												"name": "newRouter",
												"nameLocation": "3244:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3228:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3228:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3227:27:8"
									},
									"src": "3208:47:8"
								},
								{
									"anonymous": false,
									"eventSelector": "5f85e7e522385144040f94bcb1eeaeb07da5e11d6384c124c09f53986d0ed8bc",
									"id": 956,
									"name": "WETHUpdated",
									"nameLocation": "3266:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"indexed": true,
												"mutability": "mutable",
												"name": "newWETH",
												"nameLocation": "3294:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "3278:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3278:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3277:25:8"
									},
									"src": "3260:43:8"
								},
								{
									"anonymous": false,
									"eventSelector": "a0eab23d718fd05cf523c2400b0a13d8681222f055452f738a5b50ef83e82956",
									"id": 970,
									"name": "SwapExactInputSingle",
									"nameLocation": "3315:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "3361:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3345:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "3392:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3376:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3376:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "3425:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3409:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3409:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3450:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3443:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 963,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3443:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3471:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3463:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3497:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3489:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3335:177:8"
									},
									"src": "3309:204:8"
								},
								{
									"anonymous": false,
									"eventSelector": "459322b794f649891286454db465d0eed0ee1c64f4e314f184014f24028d4077",
									"id": 980,
									"name": "SwapExactInputPath",
									"nameLocation": "3525:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "3569:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "3553:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3553:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"indexed": false,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3590:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "3584:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 973,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3584:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3612:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "3604:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3604:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3638:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "3630:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3630:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3543:110:8"
									},
									"src": "3519:135:8"
								},
								{
									"anonymous": false,
									"eventSelector": "72e4e8885b9b7bf72254c4f959b634e6f85ed5c2b83a39bd986cfca591850450",
									"id": 994,
									"name": "SwapExactOutputSingle",
									"nameLocation": "3666:21:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "3713:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "3697:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3697:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "3744:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "3728:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3728:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "3777:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "3761:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3761:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3802:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "3795:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 987,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3795:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3823:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "3815:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountInSpent",
												"nameLocation": "3850:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "3842:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3842:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3687:182:8"
									},
									"src": "3660:210:8"
								},
								{
									"anonymous": false,
									"eventSelector": "61982354c6e19eaebbe0c4376bde59016aad8d6d049a71ec6cdbb157c4d63bf3",
									"id": 1004,
									"name": "SwapExactOutputPath",
									"nameLocation": "3882:19:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "3927:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "3911:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3911:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"indexed": false,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3948:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "3942:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 997,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3942:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3970:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "3962:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3962:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountInSpent",
												"nameLocation": "3997:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "3989:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3989:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3901:115:8"
									},
									"src": "3876:141:8"
								},
								{
									"anonymous": false,
									"eventSelector": "4700c1726b4198077cd40320a32c45265a1910521eb0ef713dd1d8412413d7fc",
									"id": 1010,
									"name": "Wrapped",
									"nameLocation": "4029:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "4053:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "4037:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4037:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4068:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "4060:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4060:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4036:39:8"
									},
									"src": "4023:53:8"
								},
								{
									"anonymous": false,
									"eventSelector": "95ae649bfaaef9def56a52f4fb2d9e8fa5496bb7082930e442c74cc76b03dcb3",
									"id": 1016,
									"name": "Unwrapped",
									"nameLocation": "4087:9:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "4113:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "4097:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4097:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4128:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "4120:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4120:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4096:39:8"
									},
									"src": "4081:55:8"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "4206:230:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1028,
																	"name": "_router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "4224:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4243:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4235:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1029,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4235:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4235:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4224:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1034,
																	"name": "_weth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "4249:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4266:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4258:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1035,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4258:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4258:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4249:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4224:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f41646472",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4270:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49e81a6fe971dad03b446f582356616052ed91cdddc6583595465ce35763eb08",
																"typeString": "literal_string \"ZeroAddr\""
															},
															"value": "ZeroAddr"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49e81a6fe971dad03b446f582356616052ed91cdddc6583595465ce35763eb08",
																"typeString": "literal_string \"ZeroAddr\""
															}
														],
														"id": 1027,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4216:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4216:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "4216:65:8"
											},
											{
												"expression": {
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1044,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "4291:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
															"typeString": "contract IUniswapV3RouterLike"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1046,
																"name": "_router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "4321:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1045,
															"name": "IUniswapV3RouterLike",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "4300:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV3RouterLike_$928_$",
																"typeString": "type(contract IUniswapV3RouterLike)"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4300:29:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
															"typeString": "contract IUniswapV3RouterLike"
														}
													},
													"src": "4291:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
														"typeString": "contract IUniswapV3RouterLike"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "4291:38:8"
											},
											{
												"expression": {
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1050,
														"name": "weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "4339:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWETH9_$838",
															"typeString": "contract IWETH9"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1052,
																"name": "_weth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "4353:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1051,
															"name": "IWETH9",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "4346:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWETH9_$838_$",
																"typeString": "type(contract IWETH9)"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4346:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWETH9_$838",
															"typeString": "contract IWETH9"
														}
													},
													"src": "4339:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWETH9_$838",
														"typeString": "contract IWETH9"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "4339:20:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1057,
															"name": "_router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "4388:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1056,
														"name": "RouterUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "4374:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4374:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "EmitStatement",
												"src": "4369:27:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1061,
															"name": "_weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "4423:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1060,
														"name": "WETHUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "4411:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4411:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "EmitStatement",
												"src": "4406:23:8"
											}
										]
									},
									"id": 1065,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1023,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4194:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4198:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4194:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1025,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1022,
												"name": "Ownable",
												"nameLocations": [
													"4186:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "4186:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4186:19:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "_router",
												"nameLocation": "4162:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "4154:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4154:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "_weth",
												"nameLocation": "4179:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "4171:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4153:32:8"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4206:0:8"
									},
									"scope": 1466,
									"src": "4142:294:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "4531:144:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1073,
																"name": "_router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "4549:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4568:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4560:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1074,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4560:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4560:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4549:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f41646472",
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49e81a6fe971dad03b446f582356616052ed91cdddc6583595465ce35763eb08",
																"typeString": "literal_string \"ZeroAddr\""
															},
															"value": "ZeroAddr"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49e81a6fe971dad03b446f582356616052ed91cdddc6583595465ce35763eb08",
																"typeString": "literal_string \"ZeroAddr\""
															}
														],
														"id": 1072,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4541:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4541:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "4541:42:8"
											},
											{
												"expression": {
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1082,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "4593:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
															"typeString": "contract IUniswapV3RouterLike"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1084,
																"name": "_router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "4623:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1083,
															"name": "IUniswapV3RouterLike",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "4602:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV3RouterLike_$928_$",
																"typeString": "type(contract IUniswapV3RouterLike)"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4602:29:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
															"typeString": "contract IUniswapV3RouterLike"
														}
													},
													"src": "4593:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
														"typeString": "contract IUniswapV3RouterLike"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "4593:38:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1089,
															"name": "_router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "4660:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1088,
														"name": "RouterUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "4646:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4646:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "EmitStatement",
												"src": "4641:27:8"
											}
										]
									},
									"functionSelector": "c0d78655",
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1070,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1069,
												"name": "onlyOwner",
												"nameLocations": [
													"4521:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4521:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4521:9:8"
										}
									],
									"name": "setRouter",
									"nameLocation": "4485:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "_router",
												"nameLocation": "4503:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "4495:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4495:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4494:17:8"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4531:0:8"
									},
									"scope": 1466,
									"src": "4476:199:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "4732:120:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1101,
																"name": "_weth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "4750:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4767:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4759:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1102,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4759:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4759:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4750:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f41646472",
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4771:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49e81a6fe971dad03b446f582356616052ed91cdddc6583595465ce35763eb08",
																"typeString": "literal_string \"ZeroAddr\""
															},
															"value": "ZeroAddr"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49e81a6fe971dad03b446f582356616052ed91cdddc6583595465ce35763eb08",
																"typeString": "literal_string \"ZeroAddr\""
															}
														],
														"id": 1100,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4742:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4742:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "4742:40:8"
											},
											{
												"expression": {
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1110,
														"name": "weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "4792:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWETH9_$838",
															"typeString": "contract IWETH9"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1112,
																"name": "_weth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "4806:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1111,
															"name": "IWETH9",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "4799:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWETH9_$838_$",
																"typeString": "type(contract IWETH9)"
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4799:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWETH9_$838",
															"typeString": "contract IWETH9"
														}
													},
													"src": "4792:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWETH9_$838",
														"typeString": "contract IWETH9"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "4792:20:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1117,
															"name": "_weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "4839:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1116,
														"name": "WETHUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "4827:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4827:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "EmitStatement",
												"src": "4822:23:8"
											}
										]
									},
									"functionSelector": "5b769f3c",
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1098,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1097,
												"name": "onlyOwner",
												"nameLocations": [
													"4722:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4722:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4722:9:8"
										}
									],
									"name": "setWETH",
									"nameLocation": "4690:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "_weth",
												"nameLocation": "4706:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "4698:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4697:15:8"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4732:0:8"
									},
									"scope": 1466,
									"src": "4681:171:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "4989:169:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1134,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "5100:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5109:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 1131,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "5086:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5092:7:8",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 302,
														"src": "5086:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5086:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "5086:25:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1141,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "5135:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1142,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "5144:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1138,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "5121:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5127:7:8",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 302,
														"src": "5121:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5121:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "5121:30:8"
											}
										]
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeApprove",
									"nameLocation": "4920:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4940:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "4933:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1123,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1122,
														"name": "IERC20",
														"nameLocations": [
															"4933:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4933:6:8"
													},
													"referencedDeclaration": 315,
													"src": "4933:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4955:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "4947:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4947:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4972:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "4964:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4964:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4932:47:8"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4989:0:8"
									},
									"scope": 1466,
									"src": "4911:247:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "5975:613:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1166,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "6005:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1165,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "5998:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5998:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"id": 1170,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "6023:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
																		"typeString": "contract IUniswapV3RouterLike"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
																		"typeString": "contract IUniswapV3RouterLike"
																	}
																],
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6015:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1168,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6015:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6015:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1172,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "6032:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1164,
														"name": "_safeApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "5985:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5985:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "5985:56:8"
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1175,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "6052:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1180,
																		"name": "tokenIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "6172:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1181,
																		"name": "tokenOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "6207:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1182,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1153,
																		"src": "6238:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	},
																	{
																		"expression": {
																			"id": 1183,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6270:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6274:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6270:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1185,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "6333:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1186,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1155,
																		"src": "6369:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1187,
																		"name": "amountOutMin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "6413:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6462:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 1178,
																		"name": "IUniswapV3RouterLike",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "6101:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IUniswapV3RouterLike_$928_$",
																			"typeString": "type(contract IUniswapV3RouterLike)"
																		}
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6122:22:8",
																	"memberName": "ExactInputSingleParams",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 856,
																	"src": "6101:43:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$856_storage_ptr_$",
																		"typeString": "type(struct IUniswapV3RouterLike.ExactInputSingleParams storage pointer)"
																	}
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"nameLocations": [
																	"6163:7:8",
																	"6197:8:8",
																	"6233:3:8",
																	"6259:9:8",
																	"6323:8:8",
																	"6359:8:8",
																	"6395:16:8",
																	"6443:17:8"
																],
																"names": [
																	"tokenIn",
																	"tokenOut",
																	"fee",
																	"recipient",
																	"deadline",
																	"amountIn",
																	"amountOutMinimum",
																	"sqrtPriceLimitX96"
																],
																"nodeType": "FunctionCall",
																"src": "6101:377:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$856_memory_ptr",
																	"typeString": "struct IUniswapV3RouterLike.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$856_memory_ptr",
																	"typeString": "struct IUniswapV3RouterLike.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 1176,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "6064:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
																	"typeString": "contract IUniswapV3RouterLike"
																}
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6071:16:8",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 903,
															"src": "6064:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$856_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct IUniswapV3RouterLike.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6064:424:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6052:436:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "6052:436:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1194,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6525:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6529:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6525:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1196,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "6537:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1197,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "6546:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1198,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "6556:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"id": 1199,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "6561:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1200,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "6571:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1193,
														"name": "SwapExactInputSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "6504:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint24,uint256,uint256)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6504:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "EmitStatement",
												"src": "6499:82:8"
											}
										]
									},
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "5250:493:8",
										"text": " @notice Exact-input single-pool swap (tokenIn -> tokenOut).\n @dev Caller must be the vault (i.e., invoked via UserVault.executeCall).\n @param tokenIn Input token address\n @param tokenOut Output token address\n @param fee Uniswap V3 pool fee (e.g., 500/3000/10000)\n @param amountIn Amount of tokenIn to swap\n @param amountOutMin Minimum acceptable tokenOut (slippage control)\n @param deadline Unix timestamp after which the tx reverts"
									},
									"functionSelector": "51e820e7",
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingle",
									"nameLocation": "5757:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "5795:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5787:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "5820:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5812:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5812:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "5846:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5838:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1152,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5838:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "5867:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5859:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5859:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "5893:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5885:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5885:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "5923:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5915:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5915:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5777:160:8"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "5964:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5956:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5956:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5955:19:8"
									},
									"scope": 1466,
									"src": "5748:840:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "7124:450:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1222,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "7154:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1221,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "7147:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7147:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"id": 1226,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "7172:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
																		"typeString": "contract IUniswapV3RouterLike"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
																		"typeString": "contract IUniswapV3RouterLike"
																	}
																],
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7164:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1224,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7164:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7164:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1228,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "7181:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1220,
														"name": "_safeApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "7134:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7134:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "7134:56:8"
											},
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1231,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "7201:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1236,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1207,
																		"src": "7306:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	},
																	{
																		"expression": {
																			"id": 1237,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7339:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7343:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7339:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1239,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1213,
																		"src": "7377:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1240,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1209,
																		"src": "7413:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1241,
																		"name": "amountOutMin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "7457:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1234,
																		"name": "IUniswapV3RouterLike",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "7244:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IUniswapV3RouterLike_$928_$",
																			"typeString": "type(contract IUniswapV3RouterLike)"
																		}
																	},
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7265:16:8",
																	"memberName": "ExactInputParams",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 867,
																	"src": "7244:37:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_ExactInputParams_$867_storage_ptr_$",
																		"typeString": "type(struct IUniswapV3RouterLike.ExactInputParams storage pointer)"
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"nameLocations": [
																	"7300:4:8",
																	"7328:9:8",
																	"7367:8:8",
																	"7403:8:8",
																	"7439:16:8"
																],
																"names": [
																	"path",
																	"recipient",
																	"deadline",
																	"amountIn",
																	"amountOutMinimum"
																],
																"nodeType": "FunctionCall",
																"src": "7244:240:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputParams_$867_memory_ptr",
																	"typeString": "struct IUniswapV3RouterLike.ExactInputParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputParams_$867_memory_ptr",
																	"typeString": "struct IUniswapV3RouterLike.ExactInputParams memory"
																}
															],
															"expression": {
																"id": 1232,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "7213:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
																	"typeString": "contract IUniswapV3RouterLike"
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7220:10:8",
															"memberName": "exactInput",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 911,
															"src": "7213:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputParams_$867_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct IUniswapV3RouterLike.ExactInputParams memory) payable external returns (uint256)"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7213:281:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7201:293:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "7201:293:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1247,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7529:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7533:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7529:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1249,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "7541:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 1250,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "7547:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1251,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "7557:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1246,
														"name": "SwapExactInputPath",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "7510:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,bytes memory,uint256,uint256)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7510:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "EmitStatement",
												"src": "7505:62:8"
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "6594:297:8",
										"text": " @notice Exact-input multihop swap using an encoded path.\n @param path Uniswap V3 path (tokenIn,fee,tokenMid,fee,tokenOut...)\n @param amountIn Amount of input token to spend\n @param amountOutMin Minimum acceptable output (slippage)\n @param deadline Expiry"
									},
									"functionSelector": "9eaa1983",
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputPath",
									"nameLocation": "6905:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "6948:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "6933:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1206,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6933:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "6970:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "6962:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6962:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "6996:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "6988:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6988:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "7026:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "7018:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7018:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "7052:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "7044:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7044:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6923:163:8"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "7113:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "7105:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7105:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7104:19:8"
									},
									"scope": 1466,
									"src": "6896:678:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "8180:761:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1275,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "8210:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1274,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "8203:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8203:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"id": 1279,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "8228:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
																		"typeString": "contract IUniswapV3RouterLike"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
																		"typeString": "contract IUniswapV3RouterLike"
																	}
																],
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8220:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1277,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8220:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8220:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1281,
															"name": "amountInMax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "8237:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1273,
														"name": "_safeApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "8190:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8190:59:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "8190:59:8"
											},
											{
												"expression": {
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1284,
														"name": "amountInSpent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "8260:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1289,
																		"name": "tokenIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "8386:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1290,
																		"name": "tokenOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1260,
																		"src": "8421:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1291,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1262,
																		"src": "8452:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	},
																	{
																		"expression": {
																			"id": 1292,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8484:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8488:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8484:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1294,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1268,
																		"src": "8522:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1295,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1264,
																		"src": "8559:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1296,
																		"name": "amountInMax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1266,
																		"src": "8603:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8651:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 1287,
																		"name": "IUniswapV3RouterLike",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "8314:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IUniswapV3RouterLike_$928_$",
																			"typeString": "type(contract IUniswapV3RouterLike)"
																		}
																	},
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8335:23:8",
																	"memberName": "ExactOutputSingleParams",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 884,
																	"src": "8314:44:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$884_storage_ptr_$",
																		"typeString": "type(struct IUniswapV3RouterLike.ExactOutputSingleParams storage pointer)"
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"nameLocations": [
																	"8377:7:8",
																	"8411:8:8",
																	"8447:3:8",
																	"8473:9:8",
																	"8512:8:8",
																	"8548:9:8",
																	"8586:15:8",
																	"8632:17:8"
																],
																"names": [
																	"tokenIn",
																	"tokenOut",
																	"fee",
																	"recipient",
																	"deadline",
																	"amountOut",
																	"amountInMaximum",
																	"sqrtPriceLimitX96"
																],
																"nodeType": "FunctionCall",
																"src": "8314:353:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$884_memory_ptr",
																	"typeString": "struct IUniswapV3RouterLike.ExactOutputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$884_memory_ptr",
																	"typeString": "struct IUniswapV3RouterLike.ExactOutputSingleParams memory"
																}
															],
															"expression": {
																"id": 1285,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "8276:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
																	"typeString": "contract IUniswapV3RouterLike"
																}
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8283:17:8",
															"memberName": "exactOutputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 919,
															"src": "8276:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$884_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct IUniswapV3RouterLike.ExactOutputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8276:401:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8260:417:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "8260:417:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1302,
														"name": "amountInSpent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "8739:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1303,
														"name": "amountInMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "8755:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8739:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1317,
												"nodeType": "IfStatement",
												"src": "8735:101:8",
												"trueBody": {
													"id": 1316,
													"nodeType": "Block",
													"src": "8768:68:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1311,
																				"name": "router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "8814:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
																					"typeString": "contract IUniswapV3RouterLike"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
																					"typeString": "contract IUniswapV3RouterLike"
																				}
																			],
																			"id": 1310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8806:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1309,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8806:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8806:15:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8823:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1306,
																				"name": "tokenIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1258,
																				"src": "8789:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1305,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "8782:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8782:15:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8798:7:8",
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 302,
																	"src": "8782:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8782:43:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1315,
															"nodeType": "ExpressionStatement",
															"src": "8782:43:8"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1319,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8873:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8877:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8873:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1321,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "8885:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1322,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "8894:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1323,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "8904:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"id": 1324,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "8909:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1325,
															"name": "amountInSpent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "8920:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1318,
														"name": "SwapExactOutputSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "8851:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint24,uint256,uint256)"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8851:83:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1327,
												"nodeType": "EmitStatement",
												"src": "8846:88:8"
											}
										]
									},
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "7580:363:8",
										"text": " @notice Exact-output single-pool swap (spend up to amountInMax to receive amountOut).\n @param tokenIn Input token address\n @param tokenOut Output token address\n @param fee Pool fee\n @param amountOut Desired exact output\n @param amountInMax Max input you're willing to spend (slippage)\n @param deadline Expiry"
									},
									"functionSelector": "023884b7",
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactOutputSingle",
									"nameLocation": "7957:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "7996:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "7988:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7988:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "8021:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "8013:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8013:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "8047:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "8039:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1261,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "8039:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "8068:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "8060:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8060:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "8095:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "8087:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8087:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "8124:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "8116:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8116:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7978:160:8"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "amountInSpent",
												"nameLocation": "8165:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "8157:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8157:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8156:23:8"
									},
									"scope": 1466,
									"src": "7948:993:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "9520:576:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1347,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "9550:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1346,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "9543:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9543:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"id": 1351,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "9568:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
																		"typeString": "contract IUniswapV3RouterLike"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
																		"typeString": "contract IUniswapV3RouterLike"
																	}
																],
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9560:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1349,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9560:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9560:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1353,
															"name": "amountInMax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "9577:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1345,
														"name": "_safeApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "9530:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9530:59:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "9530:59:8"
											},
											{
												"expression": {
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1356,
														"name": "amountInSpent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "9600:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1361,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1332,
																		"src": "9711:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	},
																	{
																		"expression": {
																			"id": 1362,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9744:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9748:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9744:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1364,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1338,
																		"src": "9782:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1365,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "9819:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1366,
																		"name": "amountInMax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1336,
																		"src": "9863:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1359,
																		"name": "IUniswapV3RouterLike",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "9648:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IUniswapV3RouterLike_$928_$",
																			"typeString": "type(contract IUniswapV3RouterLike)"
																		}
																	},
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9669:17:8",
																	"memberName": "ExactOutputParams",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 895,
																	"src": "9648:38:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_ExactOutputParams_$895_storage_ptr_$",
																		"typeString": "type(struct IUniswapV3RouterLike.ExactOutputParams storage pointer)"
																	}
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"nameLocations": [
																	"9705:4:8",
																	"9733:9:8",
																	"9772:8:8",
																	"9808:9:8",
																	"9846:15:8"
																],
																"names": [
																	"path",
																	"recipient",
																	"deadline",
																	"amountOut",
																	"amountInMaximum"
																],
																"nodeType": "FunctionCall",
																"src": "9648:241:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactOutputParams_$895_memory_ptr",
																	"typeString": "struct IUniswapV3RouterLike.ExactOutputParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactOutputParams_$895_memory_ptr",
																	"typeString": "struct IUniswapV3RouterLike.ExactOutputParams memory"
																}
															],
															"expression": {
																"id": 1357,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "9616:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
																	"typeString": "contract IUniswapV3RouterLike"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9623:11:8",
															"memberName": "exactOutput",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 927,
															"src": "9616:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputParams_$895_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct IUniswapV3RouterLike.ExactOutputParams memory) payable external returns (uint256)"
															}
														},
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9616:283:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9600:299:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "9600:299:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1371,
														"name": "amountInSpent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "9914:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1372,
														"name": "amountInMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "9930:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9914:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1386,
												"nodeType": "IfStatement",
												"src": "9910:101:8",
												"trueBody": {
													"id": 1385,
													"nodeType": "Block",
													"src": "9943:68:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1380,
																				"name": "router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "9989:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
																					"typeString": "contract IUniswapV3RouterLike"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IUniswapV3RouterLike_$928",
																					"typeString": "contract IUniswapV3RouterLike"
																				}
																			],
																			"id": 1379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9981:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1378,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9981:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9981:15:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9998:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1375,
																				"name": "tokenIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1340,
																				"src": "9964:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1374,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "9957:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9957:15:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9973:7:8",
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 302,
																	"src": "9957:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9957:43:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1384,
															"nodeType": "ExpressionStatement",
															"src": "9957:43:8"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1388,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10046:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10050:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10046:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1390,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "10058:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 1391,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "10064:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1392,
															"name": "amountInSpent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "10075:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1387,
														"name": "SwapExactOutputPath",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "10026:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,bytes memory,uint256,uint256)"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10026:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1394,
												"nodeType": "EmitStatement",
												"src": "10021:68:8"
											}
										]
									},
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "8947:356:8",
										"text": " @notice Exact-output multihop swap using reversed path (per Uniswap V3 convention).\n @param path Reversed path (tokenOut,fee,tokenMid,fee,tokenIn)\n @param amountOut Desired exact output\n @param amountInMax Max input willing to spend\n @param deadline Expiry\n @param tokenIn Token to draw from vault & approve"
									},
									"functionSelector": "8e2fdfa4",
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactOutputPath",
									"nameLocation": "9317:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "9361:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "9346:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9346:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "9383:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "9375:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9375:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "9410:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "9402:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9402:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "9439:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "9431:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9431:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "9465:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "9457:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9457:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9336:142:8"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "amountInSpent",
												"nameLocation": "9505:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "9497:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9497:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9496:23:8"
									},
									"scope": 1466,
									"src": "9308:788:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "10267:338:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1403,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10444:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10448:5:8",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "10444:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1405,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "10457:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10444:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42616456616c7565",
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10465:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dce7c1c6f1f6ddecb245c62dde583daf87e0bf3e1db596052eda80396240ec51",
																"typeString": "literal_string \"BadValue\""
															},
															"value": "BadValue"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dce7c1c6f1f6ddecb245c62dde583daf87e0bf3e1db596052eda80396240ec51",
																"typeString": "literal_string \"BadValue\""
															}
														],
														"id": 1402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10436:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10436:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "10436:40:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1410,
																"name": "weth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "10486:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWETH9_$838",
																	"typeString": "contract IWETH9"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10491:7:8",
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 832,
															"src": "10486:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1413,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "10506:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10486:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10486:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "10486:29:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1418,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10579:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10583:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10579:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1420,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "10591:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1417,
														"name": "Wrapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "10571:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10571:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "EmitStatement",
												"src": "10566:32:8"
											}
										]
									},
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "10156:56:8",
										"text": "@notice Wrap native ETH held by the vault into WETH."
									},
									"functionSelector": "1c58db4f",
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wrapETH",
									"nameLocation": "10226:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10242:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "10234:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10234:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10233:16:8"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10267:0:8"
									},
									"scope": 1466,
									"src": "10217:388:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "10722:357:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1433,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "10746:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1430,
															"name": "weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "10732:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH9_$838",
																"typeString": "contract IWETH9"
															}
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10737:8:8",
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 837,
														"src": "10732:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10732:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "10732:21:8"
											},
											{
												"assignments": [
													1437,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1437,
														"mutability": "mutable",
														"name": "ok",
														"nameLocation": "10944:2:8",
														"nodeType": "VariableDeclaration",
														"scope": 1460,
														"src": "10939:7:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1436,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10939:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1448,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10992:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1440,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10960:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10964:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10960:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10952:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1438,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10952:8:8",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10952:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10972:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "10952:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1444,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "10984:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10952:39:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10952:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10938:57:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1450,
															"name": "ok",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "11013:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e644661696c",
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11017:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e3cf50875abd2200f6ad48eed8c48a698afd69d33d1ef15f5c57b2c71ab20fa",
																"typeString": "literal_string \"SendFail\""
															},
															"value": "SendFail"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e3cf50875abd2200f6ad48eed8c48a698afd69d33d1ef15f5c57b2c71ab20fa",
																"typeString": "literal_string \"SendFail\""
															}
														],
														"id": 1449,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11005:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11005:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "11005:23:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1455,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11053:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11057:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11053:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1457,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "11065:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1454,
														"name": "Unwrapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "11043:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11043:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1459,
												"nodeType": "EmitStatement",
												"src": "11038:34:8"
											}
										]
									},
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "10611:61:8",
										"text": "@notice Unwrap WETH held by the vault back to native ETH."
									},
									"functionSelector": "f018a8c1",
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapWETH",
									"nameLocation": "10686:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10705:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "10697:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10697:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10696:16:8"
									},
									"returnParameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10722:0:8"
									},
									"scope": 1466,
									"src": "10677:402:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "11112:2:8",
										"statements": []
									},
									"id": 1465,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11092:2:8"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11112:0:8"
									},
									"scope": 1466,
									"src": "11085:29:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1467,
							"src": "2841:8275:8",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								952,
								956,
								970,
								980,
								994,
								1004,
								1010,
								1016
							]
						}
					],
					"src": "32:11085:8"
				},
				"id": 8
			}
		}
	}
}