{
	"id": "6dc305bf8f0c8a6d6de3d2fd29a767d7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/**\n * @title TPSLModule\n * @notice Take-Profit / Stop-Loss automation for spot positions.\n *\n * Config (per vault + pair):\n *  - Sell `amountIn` of `base` into `quote` when:\n *      * TP: price >= takeProfitPrice1e18, OR\n *      * SL: price <= stopLossPrice1e18\n *  - Slippage guard via `minOutBips` against oracle-implied output\n *\n * Execution:\n *  - Anyone can call `execute(vault, base, quote, deadline)` when triggered.\n *  - Pull tokens from vault, swap exact-input (Uni V3), send proceeds to vault.\n *\n * Notes:\n *  - `amountIn=0` => sell entire base balance held by the vault.\n *  - Vault must approve this module to spend `base` (or integrate Permit2).\n */\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ninterface IOracleManager2 {\n    function getPrice1e18(address base, address quote) external view returns (uint256 price1e18, uint256 updatedAt);\n}\n\ninterface IUniswapV3Router2 {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24  fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n    function exactInputSingle(ExactInputSingleParams calldata) external payable returns (uint256 amountOut);\n}\n\ncontract TPSLModule is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    bytes32 public constant MODULE_ID = keccak256(\"TPSL_MODULE_V1\");\n\n    IOracleManager2 public oracle;\n    IUniswapV3Router2 public router;\n\n    struct Config {\n        bool    active;\n        address base;                // token to sell when triggered\n        address quote;               // token to receive\n        uint24  fee;                 // Uni V3 fee tier\n        uint256 amountIn;            // 0 => all base balance\n        uint256 takeProfitPrice1e18; // 0 => disabled\n        uint256 stopLossPrice1e18;   // 0 => disabled\n        uint16  minOutBips;          // slippage vs oracle (e.g., 9800)\n    }\n\n    // vault => base => quote => config\n    mapping(address => mapping(address => mapping(address => Config))) public configs;\n\n    event OracleUpdated(address indexed oracle);\n    event RouterUpdated(address indexed router);\n\n    event ConfigSet(\n        address indexed vault,\n        address indexed base,\n        address indexed quote,\n        uint24 fee,\n        uint256 amountIn,\n        uint256 takeProfitPrice1e18,\n        uint256 stopLossPrice1e18,\n        uint16  minOutBips,\n        bool    active\n    );\n\n    event Cleared(address indexed vault, address indexed base, address indexed quote);\n    event Executed(address indexed vault, address indexed base, address indexed quote, uint256 sold, uint256 received, bool tpTriggered, bool slTriggered);\n\n    constructor(address _oracle, address _router) Ownable(msg.sender) {\n        require(_oracle != address(0) && _router != address(0), \"ZeroAddr\");\n        oracle = IOracleManager2(_oracle);\n        router = IUniswapV3Router2(_router);\n        emit OracleUpdated(_oracle);\n        emit RouterUpdated(_router);\n    }\n\n    // ---------- Admin ----------\n    function setOracle(address _oracle) external onlyOwner {\n        require(_oracle != address(0), \"ZeroAddr\");\n        oracle = IOracleManager2(_oracle);\n        emit OracleUpdated(_oracle);\n    }\n\n    function setRouter(address _router) external onlyOwner {\n        require(_router != address(0), \"ZeroAddr\");\n        router = IUniswapV3Router2(_router);\n        emit RouterUpdated(_router);\n    }\n\n    // ---------- Vault configuration ----------\n    function setTPSL(\n        address base,\n        address quote,\n        uint24  fee,\n        uint256 amountIn,            // 0 => all\n        uint256 takeProfitPrice1e18, // 0 => disabled\n        uint256 stopLossPrice1e18,   // 0 => disabled\n        uint16  minOutBips           // 0 => disabled\n    ) external {\n        require(base != address(0) && quote != address(0), \"ZeroToken\");\n        require(takeProfitPrice1e18 > 0 || stopLossPrice1e18 > 0, \"NoTriggers\");\n        require(minOutBips <= 10000, \"BadBips\");\n\n        configs[msg.sender][base][quote] = Config({\n            active: true,\n            base: base,\n            quote: quote,\n            fee: fee,\n            amountIn: amountIn,\n            takeProfitPrice1e18: takeProfitPrice1e18,\n            stopLossPrice1e18: stopLossPrice1e18,\n            minOutBips: minOutBips\n        });\n\n        emit ConfigSet(msg.sender, base, quote, fee, amountIn, takeProfitPrice1e18, stopLossPrice1e18, minOutBips, true);\n    }\n\n    function clearTPSL(address base, address quote) external {\n        delete configs[msg.sender][base][quote];\n        emit Cleared(msg.sender, base, quote);\n    }\n\n    // ---------- Execution (keeper or anyone) ----------\n    function execute(address vault, address base, address quote, uint256 deadline)\n        external\n        nonReentrant\n        returns (uint256 amountSold, uint256 amountReceived)\n    {\n        Config memory c = configs[vault][base][quote];\n        require(c.active, \"Inactive\");\n\n        (uint256 px, ) = oracle.getPrice1e18(base, quote); // quote per 1 base\n        require(px > 0, \"NoPrice\");\n\n        bool tp = (c.takeProfitPrice1e18 != 0 && px >= c.takeProfitPrice1e18);\n        bool sl = (c.stopLossPrice1e18   != 0 && px <= c.stopLossPrice1e18);\n        require(tp || sl, \"NotTriggered\");\n\n        // Determine sell amount\n        amountSold = c.amountIn;\n        if (amountSold == 0) {\n            amountSold = IERC20(base).balanceOf(vault);\n            require(amountSold > 0, \"NoBalance\");\n        }\n\n        // Oracle-implied minOut with bips guard\n        uint256 minOut = (amountSold * px) / 1e18;\n        if (c.minOutBips != 0) {\n            minOut = (minOut * c.minOutBips) / 10000;\n        }\n\n        // Pull base from vault, approve router\n        IERC20(base).safeTransferFrom(vault, address(this), amountSold);\n        IERC20(base).approve(address(router), 0);\n        IERC20(base).approve(address(router), amountSold);\n\n        // Swap to quote, recipient is vault\n        amountReceived = router.exactInputSingle(\n            IUniswapV3Router2.ExactInputSingleParams({\n                tokenIn: base,\n                tokenOut: quote,\n                fee: c.fee,\n                recipient: vault,\n                deadline: deadline,\n                amountIn: amountSold,\n                amountOutMinimum: minOut,\n                sqrtPriceLimitX96: 0\n            })\n        );\n\n        // Clear config after execution (single-shot). If you want persistent, comment this out.\n        delete configs[vault][base][quote];\n\n        emit Executed(vault, base, quote, amountSold, amountReceived, tp, sl);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206bfdc9ac7dcde7d0d9e24a3daef55fe1e4d0511b16864fa15835cba9402bd75464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212206bfdc9ac7dcde7d0d9e24a3daef55fe1e4d0511b16864fa15835cba9402bd75464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xFDC9AC7DCDE7D0D9E24A3DAE CREATE2 PUSH0 0xE1 0xE4 0xD0 MLOAD SHL AND DUP7 0x4F LOG1 PC CALLDATALOAD 0xCB 0xA9 BLOCKHASH 0x2B 0xD7 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea26469706673582212206bfdc9ac7dcde7d0d9e24a3daef55fe1e4d0511b16864fa15835cba9402bd75464736f6c634300081a0033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xFDC9AC7DCDE7D0D9E24A3DAE CREATE2 PUSH0 0xE1 0xE4 0xD0 MLOAD SHL AND DUP7 0x4F LOG1 PC CALLDATALOAD 0xCB 0xA9 BLOCKHASH 0x2B 0xD7 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:6:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "library_deploy_address"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206bfdc9ac7dcde7d0d9e24a3daef55fe1e4d0511b16864fa15835cba9402bd75464736f6c634300081a0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol": {
				"IOracleManager2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "base",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "quote",
									"type": "address"
								}
							],
							"name": "getPrice1e18",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price1e18",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getPrice1e18(address,address)": "cc34929d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"}],\"name\":\"getPrice1e18\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price1e18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":\"IOracleManager2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":{\"keccak256\":\"0x9b5f3ccbce3d415c105fcede4f3ad0cd99e77cce00acf0a456eb4797db06e6de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d996d135a8875ee56e2adf6be04e7cf0bd2af282bd40ba0f43b6cdaa87a8d41\",\"dweb:/ipfs/QmfNZAvvrYCL42kygrRwwQ6y8ZNtYRu24WEh9bpxenDq6y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV3Router2": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IUniswapV3Router2.ExactInputSingleParams",
									"name": "",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IUniswapV3Router2.ExactInputSingleParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":\"IUniswapV3Router2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":{\"keccak256\":\"0x9b5f3ccbce3d415c105fcede4f3ad0cd99e77cce00acf0a456eb4797db06e6de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d996d135a8875ee56e2adf6be04e7cf0bd2af282bd40ba0f43b6cdaa87a8d41\",\"dweb:/ipfs/QmfNZAvvrYCL42kygrRwwQ6y8ZNtYRu24WEh9bpxenDq6y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TPSLModule": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_oracle",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_router",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "base",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "quote",
									"type": "address"
								}
							],
							"name": "Cleared",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "base",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "quote",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "takeProfitPrice1e18",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stopLossPrice1e18",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "minOutBips",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"name": "ConfigSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "base",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "quote",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sold",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "received",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "tpTriggered",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "slTriggered",
									"type": "bool"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								}
							],
							"name": "OracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "router",
									"type": "address"
								}
							],
							"name": "RouterUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MODULE_ID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "base",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "quote",
									"type": "address"
								}
							],
							"name": "clearTPSL",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "configs",
							"outputs": [
								{
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "base",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "quote",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "takeProfitPrice1e18",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stopLossPrice1e18",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "minOutBips",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "base",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "quote",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountSold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountReceived",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "oracle",
							"outputs": [
								{
									"internalType": "contract IOracleManager2",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "router",
							"outputs": [
								{
									"internalType": "contract IUniswapV3Router2",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_oracle",
									"type": "address"
								}
							],
							"name": "setOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_router",
									"type": "address"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "base",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "quote",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "takeProfitPrice1e18",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stopLossPrice1e18",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "minOutBips",
									"type": "uint16"
								}
							],
							"name": "setTPSL",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n  0x80\n  jumpi(tag_6, callvalue)\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_4\n  jumpi\n  dup1\n  dup5\n  swap3\n  0x40\n  swap5\n  dup6\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_6\n  jumpi\n  tag_8\n  0x20\n  tag_9\n  dup4\n  tag_1\n  jump\t// in\ntag_9:\n  swap3\n  add\n  tag_1\n  jump\t// in\ntag_8:\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3107:3117  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  iszero\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n  0x00\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n  dup1\n  sload\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3107:3117  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n  dup3\n  and\n  dup2\n  or\n  dup4\n  sstore\n  mload(0x40)\n  swap5\n  swap3\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3107:3117  msg.sender */\n  swap1\n  swap2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n  and\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  dup1\n  log3\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n  dup1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n  and\n  swap2\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3137:3158  _oracle != address(0) */\n  dup3\n  iszero\n  iszero\n  dup1\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3137:3183  _oracle != address(0) && _router != address(0) */\n  tag_12\n  jumpi\ntag_13:\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n  iszero\n  tag_14\n  jumpi\n  pop\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3206:3239  oracle = IOracleManager2(_oracle) */\n  0x02\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  dup5\n  or\n  swap1\n  swap2\n  sstore\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3249:3284  router = IUniswapV3Router2(_router) */\n  0x03\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  dup3\n  or\n  swap1\n  sstore\n  mload(0x40)\n  swap2\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3299:3321  OracleUpdated(_oracle) */\n  0x3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b8180940394\n  0x00\n  dup1\n  log2\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3336:3358  RouterUpdated(_router) */\n  0x7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc80\n  0x00\n  dup1\n  log2\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_14:\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x08\n  0x24\n  dup3\n  add\n  mstore\n  shl(0xc1, 0x2d32b937a0b23239)\n  0x44\n  dup3\n  add\n  mstore\n  0x64\n  swap1\n  revert\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3137:3183  _oracle != address(0) && _router != address(0) */\ntag_12:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n  dup3\n  and\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3162:3183  _router != address(0) */\n  iszero\n  iszero\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3137:3183  _oracle != address(0) && _router != address(0) */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mstore(0x00, shl(0xe0, 0x1e4fbdf7))\n  0x00\n  0x04\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n  mstore\n  0x24\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  revert\n    /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\ntag_6:\n  0x00\n  dup1\n  revert\ntag_4:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_1:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_6\n  jumpi\n  jump\t// out\nstop\n\nsub_0: assembly {\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_11, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_11:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x239aee06\n      eq\n      tag_13\n      jumpi\n      pop\n      dup1\n      0x35d0ed5f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7adbf973\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7d818f47\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7dc0d1d0\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xbcae5ef4\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xc0d78655\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xed2f21f5\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_33\n      jumpi\n      0xf887ea40\n      eq\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      jumpi(tag_39, callvalue)\n      jumpi(tag_39, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1779:1810  IUniswapV3Router2 public router */\n      0x03\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_39:\n      0x00\n      dup1\n      revert\n    tag_33:\n      jumpi(tag_39, callvalue)\n      jumpi(tag_39, slt(add(not(0x03), calldatasize), 0x20))\n      tag_45\n      tag_1\n      jump\t// in\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_46\n      tag_10\n      jump\t// in\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_47\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x00\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup4\n      or\n      dup3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      shl(0xe0, 0x1e4fbdf7)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      mstore(0x04, 0x00)\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      revert\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n    tag_31:\n      jumpi(tag_39, callvalue)\n      jumpi(tag_39, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1710:1737  keccak256(\"TPSL_MODULE_V1\") */\n      0x36366627dbd14ebf17bfe4ad54a261f54ee08412a2d76099708ba0c75fef2da8\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_29:\n      jumpi(tag_39, callvalue)\n      jumpi(tag_39, slt(add(not(0x03), calldatasize), 0x20))\n      tag_57\n      tag_1\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_58\n      tag_10\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3671:3713  require(_router != address(0), \"ZeroAddr\") */\n      tag_59\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3679:3700  _router != address(0) */\n      dup2\n      iszero\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3671:3713  require(_router != address(0), \"ZeroAddr\") */\n      tag_9\n      jump\t// in\n    tag_59:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3723:3758  router = IUniswapV3Router2(_router) */\n      0x03\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3773:3795  RouterUpdated(_router) */\n      0x7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc80\n      0x00\n      dup1\n      log2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      stop\n    tag_27:\n      jumpi(tag_39, callvalue)\n      jumpi(tag_39, slt(add(not(0x03), calldatasize), 0x40))\n      tag_64\n      tag_1\n      jump\t// in\n    tag_64:\n      tag_65\n      tag_2\n      jump\t// in\n    tag_65:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4922:4932  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x00\n      mstore\n      mstore(0x20, 0x04)\n      keccak256(0x00, 0x40)\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup4\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4907:4946  delete configs[msg.sender][base][quote] */\n      tag_66\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      keccak256(0x00, 0x40)\n      0x05\n      0x00\n      swap2\n      dup3\n      dup2\n      sstore\n      dup3\n      0x01\n      dup3\n      add\n      sstore\n      dup3\n      0x02\n      dup3\n      add\n      sstore\n      dup3\n      0x03\n      dup3\n      add\n      sstore\n      dup3\n      0x04\n      dup3\n      add\n      sstore\n      add\n      sstore\n      jump\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4907:4946  delete configs[msg.sender][base][quote] */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap1\n      dup2\n      and\n      swap2\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4922:4932  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4961:4993  Cleared(msg.sender, base, quote) */\n      0xc4a0f24a5a427f98d9bb378273a31dc61774f9aacf4071433c97d5041f08ac22\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x00\n      dup1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4961:4993  Cleared(msg.sender, base, quote) */\n      log4\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      stop\n    tag_25:\n      jumpi(tag_39, callvalue)\n      jumpi(tag_39, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x00)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_23:\n      jumpi(tag_39, callvalue)\n      jumpi(tag_39, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1744:1773  IOracleManager2 public oracle */\n      0x02\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_21:\n      jumpi(tag_39, callvalue)\n      jumpi(tag_39, slt(add(not(0x03), calldatasize), 0xe0))\n      tag_79\n      tag_1\n      jump\t// in\n    tag_79:\n      tag_80\n      tag_2\n      jump\t// in\n    tag_80:\n      swap1\n      calldataload(0x44)\n      swap2\n      0xffffff\n      dup4\n      and\n      dup1\n      swap4\n      sub\n      tag_39\n      jumpi\n      calldataload(0x64)\n      swap2\n      calldataload(0x84)\n      calldataload(0xa4)\n      swap1\n      calldataload(0xc4)\n      swap3\n      0xffff\n      dup5\n      and\n      dup1\n      swap5\n      sub\n      tag_39\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap5\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4185:4203  base != address(0) */\n      dup6\n      iszero\n      iszero\n      dup1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4185:4226  base != address(0) && quote != address(0) */\n      tag_85\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n    tag_86:\n      iszero\n      tag_87\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4258:4281  takeProfitPrice1e18 > 0 */\n      dup2\n      iszero\n      dup1\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4258:4306  takeProfitPrice1e18 > 0 || stopLossPrice1e18 > 0 */\n      swap1\n      tag_89\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n    tag_90:\n      iszero\n      tag_91\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4353:4358  10000 */\n      0x2710\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4339:4358  minOutBips <= 10000 */\n      dup5\n      gt\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      tag_93\n      jumpi\n      dup4\n      0xffff\n      0x05\n      dup10\n      swap8\n      dup7\n      dup11\n      mload(0x40)\n      swap3\n      tag_95\n      dup5\n      tag_4\n      jump\t// in\n    tag_95:\n      0x01\n      dup5\n      mstore\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4416:4704  Config({... */\n      dup5\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap1\n      dup3\n      dup3\n      mstore\n      0x40\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4416:4704  Config({... */\n      dup6\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap15\n      dup16\n      swap3\n      dup4\n      dup4\n      mstore\n      0x60\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4416:4704  Config({... */\n      dup8\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap2\n      dup3\n      mstore\n      0x80\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4416:4704  Config({... */\n      dup8\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap4\n      dup12\n      dup6\n      mstore\n      0xa0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4416:4704  Config({... */\n      dup9\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap6\n      dup14\n      dup8\n      mstore\n      0xc0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4416:4704  Config({... */\n      dup10\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap8\n      dup9\n      mstore\n      0xe0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4416:4704  Config({... */\n      dup10\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap12\n      dup13\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4389:4399  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x00\n      mstore\n      mstore(0x20, 0x04)\n      keccak256(0x00, 0x40)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4381:4406  configs[msg.sender][base] */\n      swap1\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4381:4413  configs[msg.sender][base][quote] */\n      swap1\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap7\n      mload\n      iszero\n      iszero\n      swap1\n      0xff\n      dup9\n      sload\n      swap2\n      sub(shl(0xa8, 0x01), 0x0100)\n      swap1\n      mload\n      0x08\n      shl\n      and\n      swap3\n      and\n      swap1\n      shl(0xa8, 0xffffffffffffffffffffff)\n      and\n      or\n      or\n      dup7\n      sstore\n      0x01\n      dup7\n      add\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      mload\n      and\n      shl(0xa0, 0xffffffffffffffffffffffff)\n      dup4\n      sload\n      and\n      or\n      dup3\n      sstore\n      mload\n      dup2\n      sload\n      swap1\n      shl(0xa0, 0xffffff)\n      swap1\n      0xa0\n      shl\n      and\n      swap1\n      not(shl(0xa0, 0xffffff))\n      and\n      or\n      swap1\n      sstore\n      mload\n      0x02\n      dup5\n      add\n      sstore\n      mload\n      0x03\n      dup4\n      add\n      sstore\n      mload\n      0x04\n      dup3\n      add\n      sstore\n      add\n      swap2\n      mload\n      and\n      not(0xffff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap5\n      dup6\n      mstore\n      0x20\n      dup6\n      add\n      mstore\n      0x40\n      dup5\n      add\n      mstore\n      0x60\n      dup4\n      add\n      mstore\n      0x80\n      dup3\n      add\n      mstore\n      0x01\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4720:4827  ConfigSet(msg.sender, base, quote, fee, amountIn, takeProfitPrice1e18, stopLossPrice1e18, minOutBips, true) */\n      0x746a2f823cf6f4474906bacc479001a4919e05edf924b3dbabf198d8d16bec43\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0xc0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4389:4399  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4720:4827  ConfigSet(msg.sender, base, quote, fee, amountIn, takeProfitPrice1e18, stopLossPrice1e18, minOutBips, true) */\n      swap3\n      log4\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      stop\n    tag_93:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x07\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xc8, 0x42616442697073)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_91:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb0, 0x4e6f5472696767657273)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4258:4306  takeProfitPrice1e18 > 0 || stopLossPrice1e18 > 0 */\n    tag_89:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4285:4306  stopLossPrice1e18 > 0 */\n      pop\n      dup3\n      iszero\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4258:4306  takeProfitPrice1e18 > 0 || stopLossPrice1e18 > 0 */\n      jump(tag_90)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n    tag_87:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x09\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb9, 0x2d32b937aa37b5b2b7)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4185:4226  base != address(0) && quote != address(0) */\n    tag_85:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      dup6\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4207:4226  quote != address(0) */\n      iszero\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":4185:4226  base != address(0) && quote != address(0) */\n      jump(tag_86)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n    tag_19:\n      jumpi(tag_39, callvalue)\n      jumpi(tag_39, slt(add(not(0x03), calldatasize), 0x20))\n      tag_100\n      tag_1\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_101\n      tag_10\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3471:3513  require(_oracle != address(0), \"ZeroAddr\") */\n      tag_102\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3479:3500  _oracle != address(0) */\n      dup2\n      iszero\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3471:3513  require(_oracle != address(0), \"ZeroAddr\") */\n      tag_9\n      jump\t// in\n    tag_102:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3523:3556  oracle = IOracleManager2(_oracle) */\n      0x02\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":3571:3593  OracleUpdated(_oracle) */\n      0x3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b8180940394\n      0x00\n      dup1\n      log2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      stop\n    tag_17:\n      jumpi(tag_39, callvalue)\n      jumpi(tag_39, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_107\n      tag_10\n      jump\t// in\n    tag_107:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x00\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      dup3\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      stop\n    tag_15:\n      jumpi(tag_39, callvalue)\n      jumpi(tag_39, slt(add(not(0x03), calldatasize), 0x60))\n      tag_112\n      tag_1\n      jump\t// in\n    tag_112:\n      tag_113\n      tag_2\n      jump\t// in\n    tag_113:\n      tag_114\n      tag_3\n      jump\t// in\n    tag_114:\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x04)\n      keccak256(0x00, 0x40)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":2332:2413  mapping(address => mapping(address => mapping(address => Config))) public configs */\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":2332:2413  mapping(address => mapping(address => mapping(address => Config))) public configs */\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x0100\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":2332:2413  mapping(address => mapping(address => mapping(address => Config))) public configs */\n      swap1\n      0x01\n      dup2\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      sload\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":2332:2413  mapping(address => mapping(address => mapping(address => Config))) public configs */\n      swap1\n      0x02\n      dup2\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      sload\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":2332:2413  mapping(address => mapping(address => mapping(address => Config))) public configs */\n      0x03\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      sload\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":2332:2413  mapping(address => mapping(address => mapping(address => Config))) public configs */\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0xffffff\n      0xffff\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":2332:2413  mapping(address => mapping(address => mapping(address => Config))) public configs */\n      0x05\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":2332:2413  mapping(address => mapping(address => mapping(address => Config))) public configs */\n      dup7\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      sload\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":2332:2413  mapping(address => mapping(address => mapping(address => Config))) public configs */\n      swap6\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      sload\n      and\n      swap5\n      mload(0x40)\n      swap7\n      0xff\n      dup2\n      and\n      iszero\n      iszero\n      dup9\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      0x08\n      shr\n      and\n      0x20\n      dup9\n      add\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      and\n      0x40\n      dup9\n      add\n      mstore\n      0xa0\n      shr\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      mstore\n      0xa0\n      dup5\n      add\n      mstore\n      0xc0\n      dup4\n      add\n      mstore\n      0xe0\n      dup3\n      add\n      mstore\n      return\n    tag_13:\n      jumpi(tag_39, callvalue)\n      jumpi(tag_39, slt(add(not(0x03), calldatasize), 0x80))\n      tag_119\n      tag_1\n      jump\t// in\n    tag_119:\n      tag_120\n      tag_2\n      jump\t// in\n    tag_120:\n      swap1\n      tag_121\n      tag_3\n      jump\t// in\n    tag_121:\n      swap3\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      tag_122\n      jumpi\n      pop\n      0x02\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x01\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n      0x04\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      dup7\n      dup7\n      and\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n      swap5\n      dup8\n      and\n      dup4\n      mstore\n      swap4\n      swap1\n      mstore\n      dup3\n      swap1\n      keccak256\n      swap2\n      mload\n      swap4\n      swap1\n      swap3\n      swap1\n      tag_124\n      dup6\n      tag_4\n      jump\t// in\n    tag_124:\n      dup3\n      sload\n      swap4\n      0xff\n      dup6\n      and\n      iszero\n      swap5\n      dup6\n      iszero\n      dup8\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      0x08\n      shr\n      and\n      0x20\n      dup8\n      add\n      mstore\n      0x01\n      dup5\n      add\n      sload\n      swap4\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup6\n      and\n      0x40\n      dup9\n      add\n      mstore\n      0xffffff\n      0x60\n      dup9\n      add\n      swap6\n      0xa0\n      shr\n      and\n      dup6\n      mstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      dup2\n      add\n      sload\n      swap7\n      0x80\n      dup2\n      add\n      swap8\n      dup9\n      mstore\n      0x03\n      dup3\n      add\n      sload\n      swap7\n      0xa0\n      dup3\n      add\n      swap8\n      dup9\n      mstore\n      0xe0\n      0xffff\n      0x05\n      0x04\n      dup7\n      add\n      sload\n      swap6\n      0xc0\n      dup7\n      add\n      swap7\n      dup8\n      mstore\n      add\n      sload\n      and\n      swap3\n      add\n      swap2\n      dup3\n      mstore\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      sload\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xcc34929d)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5368:5400  oracle.getPrice1e18(base, quote) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap8\n      dup9\n      and\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5368:5400  oracle.getPrice1e18(base, quote) */\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      dup2\n      swap1\n      mstore\n      swap7\n      dup9\n      and\n      0x24\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap1\n      swap10\n      swap1\n      swap8\n      swap1\n      swap3\n      dup11\n      swap2\n      0x44\n      swap2\n      dup4\n      swap2\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5368:5400  oracle.getPrice1e18(base, quote) */\n      gas\n      staticcall\n      swap8\n      dup9\n      iszero\n      tag_163\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5368:5400  oracle.getPrice1e18(base, quote) */\n      swap9\n      tag_129\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n    tag_130:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5438:5444  px > 0 */\n      pop\n      dup8\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      tag_131\n      jumpi\n      mload\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5478:5504  c.takeProfitPrice1e18 != 0 */\n      swap2\n      dup3\n      iszero\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5478:5535  c.takeProfitPrice1e18 != 0 && px >= c.takeProfitPrice1e18 */\n      swap3\n      dup4\n      tag_133\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n    tag_134:\n      pop\n      mload\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5557:5583  c.stopLossPrice1e18   != 0 */\n      swap8\n      dup9\n      iszero\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5557:5612  c.stopLossPrice1e18   != 0 && px <= c.stopLossPrice1e18 */\n      swap9\n      dup10\n      tag_135\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n    tag_136:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5631:5639  tp || sl */\n      pop\n      dup3\n      iszero\n      swap3\n      dup4\n      tag_137\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n    tag_138:\n      iszero\n      tag_139\n      jumpi\n      mload\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5737:5752  amountSold == 0 */\n      swap7\n      dup8\n      iszero\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5733:5871  if (amountSold == 0) {... */\n      tag_141\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n    tag_142:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5967:5971  1e18 */\n      0x0de0b6b3a7640000\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5948:5963  amountSold * px */\n      tag_143\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0xffff\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5948:5963  amountSold * px */\n      swap3\n      dup11\n      tag_6\n      jump\t// in\n    tag_143:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      div\n      swap2\n      mload\n      and\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5985:6002  c.minOutBips != 0 */\n      dup1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5981:6069  if (c.minOutBips != 0) {... */\n      tag_144\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n    tag_145:\n      pop\n      0x20\n      0x00\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup3\n      dup2\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup3\n      mstore\n      dup7\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x24\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6172:6176  this */\n      address\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x44\n      dup3\n      add\n      mstore\n      dup11\n      0x64\n      dup3\n      add\n      mstore\n      0x64\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup2\n      mstore\n      tag_146\n      0x84\n      dup3\n      tag_5\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      swap1\n      dup3\n      dup9\n      gas\n      call\n      iszero\n      tag_163\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      pop\n      dup4\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      tag_152\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(0x03)\n      and\n      mload(0x40)\n      swap1\n      shl(0xe0, 0x095ea7b3)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6200:6240  IERC20(base).approve(address(router), 0) */\n      dup3\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6200:6240  IERC20(base).approve(address(router), 0) */\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      mstore\n      0x00\n      0x24\n      dup3\n      add\n      mstore\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6200:6240  IERC20(base).approve(address(router), 0) */\n      dup2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x44\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6200:6240  IERC20(base).approve(address(router), 0) */\n      dup2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6200:6240  IERC20(base).approve(address(router), 0) */\n      dup10\n      gas\n      call\n      dup1\n      iszero\n      tag_163\n      jumpi\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_157:\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      sload(0x03)\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6250:6299  IERC20(base).approve(address(router), amountSold) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap1\n      swap2\n      and\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6250:6299  IERC20(base).approve(address(router), amountSold) */\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      mstore\n      0x24\n      dup2\n      add\n      dup9\n      swap1\n      mstore\n      0x20\n      dup2\n      0x44\n      dup2\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6250:6299  IERC20(base).approve(address(router), amountSold) */\n      dup10\n      gas\n      call\n      dup1\n      iszero\n      tag_163\n      jumpi\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_161:\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      sload(0x03)\n      swap6\n      mload\n      mload(0x40)\n      0xffffff\n      swap1\n      swap2\n      and\n      swap7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_162\n      dup3\n      tag_4\n      jump\t// in\n    tag_162:\n      dup6\n      dup3\n      mstore\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6409:6745  IUniswapV3Router2.ExactInputSingleParams({... */\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      dup8\n      dup2\n      mstore\n      0x40\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6409:6745  IUniswapV3Router2.ExactInputSingleParams({... */\n      dup1\n      dup5\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap10\n      dup11\n      mstore\n      0x60\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6409:6745  IUniswapV3Router2.ExactInputSingleParams({... */\n      dup5\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      dup8\n      dup2\n      mstore\n      0x64\n      dup1\n      calldataload\n      0x80\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6409:6745  IUniswapV3Router2.ExactInputSingleParams({... */\n      dup8\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap1\n      dup2\n      mstore\n      0xa0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6409:6745  IUniswapV3Router2.ExactInputSingleParams({... */\n      dup8\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      dup15\n      dup2\n      mstore\n      0xc0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6409:6745  IUniswapV3Router2.ExactInputSingleParams({... */\n      dup9\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap9\n      dup10\n      mstore\n      0x00\n      0xe0\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6409:6745  IUniswapV3Router2.ExactInputSingleParams({... */\n      dup10\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap1\n      dup2\n      mstore\n      swap5\n      mload\n      shl(0xe0, 0x414bf389)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6372:6755  router.exactInputSingle(... */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap8\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6372:6755  router.exactInputSingle(... */\n      dup11\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      mstore\n      swap6\n      mload\n      dup7\n      and\n      0x24\n      dup10\n      add\n      mstore\n      swap13\n      mload\n      0xffffff\n      and\n      0x44\n      dup9\n      add\n      mstore\n      swap2\n      mload\n      dup5\n      and\n      swap1\n      dup7\n      add\n      mstore\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x84\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      dup6\n      add\n      mstore\n      swap9\n      mload\n      0xa4\n      dup5\n      add\n      mstore\n      swap3\n      mload\n      0xc4\n      dup4\n      add\n      mstore\n      swap7\n      mload\n      swap1\n      swap2\n      and\n      0xe4\n      dup3\n      add\n      mstore\n      swap5\n      dup6\n      swap1\n      dup2\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6372:6755  router.exactInputSingle(... */\n      gas\n      swap3\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6372:6755  router.exactInputSingle(... */\n      0x0104\n      swap3\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6372:6755  router.exactInputSingle(... */\n      swap6\n      call\n      swap5\n      dup6\n      iszero\n      tag_163\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6372:6755  router.exactInputSingle(... */\n      swap6\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_166:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      pop\n      0x80\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6913:6977  Executed(vault, base, quote, amountSold, amountReceived, tp, sl) */\n      0xfa280417fe858ee402a8c4bec666f5c036232a751cba9074e347742b260a68f3\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      swap2\n      0x40\n      swap9\n      dup5\n      0x00\n      mstore\n      mstore(0x20, 0x04)\n      dup10\n      0x00\n      keccak256\n      dup7\n      0x00\n      mstore\n      0x20\n      mstore\n      dup10\n      0x00\n      keccak256\n      dup8\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6863:6897  delete configs[vault][base][quote] */\n      tag_167\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      dup11\n      0x00\n      keccak256\n      0x05\n      0x00\n      swap2\n      dup3\n      dup2\n      sstore\n      dup3\n      0x01\n      dup3\n      add\n      sstore\n      dup3\n      0x02\n      dup3\n      add\n      sstore\n      dup3\n      0x03\n      dup3\n      add\n      sstore\n      dup3\n      0x04\n      dup3\n      add\n      sstore\n      add\n      sstore\n      jump\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6863:6897  delete configs[vault][base][quote] */\n    tag_167:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      dup10\n      mload\n      swap2\n      dup10\n      dup4\n      mstore\n      dup9\n      0x20\n      dup5\n      add\n      mstore\n      iszero\n      dup11\n      dup4\n      add\n      mstore\n      iszero\n      iszero\n      0x60\n      dup3\n      add\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6913:6977  Executed(vault, base, quote, amountSold, amountReceived, tp, sl) */\n      log4\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x01\n      dup1\n      sstore\n      dup3\n      mload\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      return\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6372:6755  router.exactInputSingle(... */\n    tag_165:\n      swap7\n      swap5\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6372:6755  router.exactInputSingle(... */\n      dup8\n      returndatasize\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6372:6755  router.exactInputSingle(... */\n      gt\n      tag_168\n      jumpi\n    tag_169:\n      dup2\n      tag_170\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6372:6755  router.exactInputSingle(... */\n      swap4\n      dup4\n      tag_5\n      jump\t// in\n    tag_170:\n      dup2\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      sub\n      slt\n      tag_39\n      jumpi\n      swap6\n      mload\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6372:6755  router.exactInputSingle(... */\n      swap4\n      swap6\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x80\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6372:6755  router.exactInputSingle(... */\n      jump(tag_166)\n    tag_168:\n      returndatasize\n      swap2\n      pop\n      jump(tag_169)\n    tag_163:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6250:6299  IERC20(base).approve(address(router), amountSold) */\n    tag_160:\n      tag_173\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6250:6299  IERC20(base).approve(address(router), amountSold) */\n      returndatasize\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6250:6299  IERC20(base).approve(address(router), amountSold) */\n      gt\n      tag_174\n      jumpi\n    tag_175:\n      tag_176\n      dup2\n      dup4\n      tag_5\n      jump\t// in\n    tag_176:\n      dup2\n      add\n      swap1\n      tag_7\n      jump\t// in\n    tag_173:\n      jump(tag_161)\n    tag_174:\n      pop\n      returndatasize\n      jump(tag_175)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6200:6240  IERC20(base).approve(address(router), 0) */\n    tag_156:\n      tag_177\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6200:6240  IERC20(base).approve(address(router), 0) */\n      returndatasize\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6200:6240  IERC20(base).approve(address(router), 0) */\n      gt\n      tag_174\n      jumpi\n      tag_176\n      dup2\n      dup4\n      tag_5\n      jump\t// in\n    tag_177:\n      jump(tag_157)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      dup4\n      shl(0xe0, 0x5274afe7)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x04\n      mstore\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_149:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_151)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5981:6069  if (c.minOutBips != 0) {... */\n    tag_144:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6028:6049  minOut * c.minOutBips */\n      tag_181\n      swap1\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6053:6058  10000 */\n      0x2710\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":6028:6049  minOut * c.minOutBips */\n      swap3\n      tag_6\n      jump\t// in\n    tag_181:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      div\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5981:6069  if (c.minOutBips != 0) {... */\n      dup9\n      jump(tag_145)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5733:5871  if (amountSold == 0) {... */\n    tag_141:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5781:5810  IERC20(base).balanceOf(vault) */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5781:5810  IERC20(base).balanceOf(vault) */\n      dup2\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      dup6\n      swap1\n      mstore\n      swap8\n      pop\n      0x20\n      dup9\n      0x24\n      dup2\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5781:5810  IERC20(base).balanceOf(vault) */\n      dup9\n      gas\n      staticcall\n      swap8\n      dup9\n      iszero\n      tag_163\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5781:5810  IERC20(base).balanceOf(vault) */\n      swap9\n      tag_184\n      jumpi\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5733:5871  if (amountSold == 0) {... */\n    tag_185:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5768:5810  amountSold = IERC20(base).balanceOf(vault) */\n      pop\n      dup8\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5733:5871  if (amountSold == 0) {... */\n      tag_142\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x09\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb8, 0x4e6f42616c616e6365)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5781:5810  IERC20(base).balanceOf(vault) */\n    tag_184:\n      swap1\n      swap8\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5781:5810  IERC20(base).balanceOf(vault) */\n      dup2\n      returndatasize\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5781:5810  IERC20(base).balanceOf(vault) */\n      gt\n      tag_188\n      jumpi\n    tag_189:\n      dup2\n      tag_190\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5781:5810  IERC20(base).balanceOf(vault) */\n      swap4\n      dup4\n      tag_5\n      jump\t// in\n    tag_190:\n      dup2\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      sub\n      slt\n      tag_39\n      jumpi\n      mload\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5781:5810  IERC20(base).balanceOf(vault) */\n      swap7\n      dup10\n      jump(tag_185)\n    tag_188:\n      returndatasize\n      swap2\n      pop\n      jump(tag_189)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n    tag_139:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa2, 0x139bdd151c9a59d9d95c9959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5631:5639  tp || sl */\n    tag_137:\n      pop\n      dup9\n      jump(tag_138)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5557:5612  c.stopLossPrice1e18   != 0 && px <= c.stopLossPrice1e18 */\n    tag_135:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5587:5612  px <= c.stopLossPrice1e18 */\n      dup9\n      gt\n      iszero\n      swap9\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5557:5612  c.stopLossPrice1e18   != 0 && px <= c.stopLossPrice1e18 */\n      dup10\n      jump(tag_136)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5478:5535  c.takeProfitPrice1e18 != 0 && px >= c.takeProfitPrice1e18 */\n    tag_133:\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5508:5535  px >= c.takeProfitPrice1e18 */\n      dup9\n      lt\n      iszero\n      swap3\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5478:5535  c.takeProfitPrice1e18 != 0 && px >= c.takeProfitPrice1e18 */\n      dup10\n      jump(tag_134)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n    tag_131:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x07\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xc8, 0x4e6f5072696365)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5368:5400  oracle.getPrice1e18(base, quote) */\n    tag_129:\n      swap1\n      swap8\n      pop\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x40\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5368:5400  oracle.getPrice1e18(base, quote) */\n      dup2\n      returndatasize\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x40\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5368:5400  oracle.getPrice1e18(base, quote) */\n      gt\n      tag_193\n      jumpi\n    tag_194:\n      dup2\n      tag_195\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x40\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5368:5400  oracle.getPrice1e18(base, quote) */\n      swap4\n      dup4\n      tag_5\n      jump\t// in\n    tag_195:\n      dup2\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      sub\n      slt\n      tag_39\n      jumpi\n      mload\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":5368:5400  oracle.getPrice1e18(base, quote) */\n      swap7\n      dup10\n      jump(tag_130)\n    tag_193:\n      returndatasize\n      swap2\n      pop\n      jump(tag_194)\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n    tag_125:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x08\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xc0, 0x496e616374697665)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n    tag_122:\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x20\n      0x04\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup3\n      add\n      mstore\n      0x1f\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x24\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup3\n      add\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x44\n      dup3\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      mstore\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      0x64\n      swap1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      revert\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_39\n      jumpi\n      jump\t// out\n    tag_2:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_39\n      jumpi\n      jump\t// out\n    tag_3:\n      calldataload(0x44)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_39\n      jumpi\n      jump\t// out\n    tag_4:\n      0x0100\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_204\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_204:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_5:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_204\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_6:\n      dup2\n      dup2\n      mul\n      swap3\n      swap2\n      dup2\n      iszero\n      swap2\n      dup5\n      div\n      eq\n      or\n      iszero\n      tag_208\n      jumpi\n      jump\t// out\n    tag_208:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_7:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_39\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_39\n      jumpi\n      swap1\n      jump\t// out\n    tag_9:\n      iszero\n      tag_214\n      jumpi\n      jump\t// out\n    tag_214:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x08\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xc1, 0x2d32b937a0b23239)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      shl(0xe0, 0x118cdaa7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n        /* \"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":1587:6986  contract TPSLModule is Ownable, ReentrancyGuard {... */\n      mstore\n      0x24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      revert\n\n    auxdata: 0xa264697066735822122026013fa6904a016af465e38f57ab04ba232be7468a0d4f7353bb9d0c1007f77a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x194 JUMPI PUSH1 0x1F PUSH2 0x1075 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x198 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x194 JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x1AC JUMP JUMPDEST SWAP3 ADD PUSH2 0x1AC JUMP JUMPDEST CALLER ISZERO PUSH2 0x181 JUMPI PUSH0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP5 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO ISZERO DUP1 PUSH2 0x16F JUMPI JUMPDEST ISZERO PUSH2 0x142 JUMPI POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH32 0x3DF77BEB5DB05FCDD70A30FC8ADF3F83F9501B68579455ADBD100B8180940394 PUSH0 DUP1 LOG2 PUSH32 0x7AED1D3E8155A07CCF395E44EA3109A0E2D6C9B29BBBE9F142D9790596F4DC80 PUSH0 DUP1 LOG2 PUSH2 0xEB4 SWAP1 DUP2 PUSH2 0x1C1 DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2D32B937A0B23239 PUSH1 0xC1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO PUSH2 0xB7 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x194 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x239AEE06 EQ PUSH2 0x70C JUMPI POP DUP1 PUSH4 0x35D0ED5F EQ PUSH2 0x637 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0x7ADBF973 EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x7D818F47 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xBCAE5EF4 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xED2F21F5 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xCC JUMPI PUSH4 0xF887EA40 EQ PUSH2 0xA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH2 0xE5 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0xED PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x13E JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x36366627DBD14EBF17BFE4AD54A261F54EE08412A2D76099708BA0C75FEF2DA8 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH2 0x1A4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x1AC PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C0 DUP2 ISZERO ISZERO PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x7AED1D3E8155A07CCF395E44EA3109A0E2D6C9B29BBBE9F142D9790596F4DC80 PUSH0 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH2 0x211 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x219 PUSH2 0xD63 JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x26F PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x5 PUSH0 SWAP2 DUP3 DUP2 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND CALLER PUSH32 0xC4A0F24A5A427F98D9BB378273A31DC61774F9AACF4071433C97D5041F08AC22 PUSH0 DUP1 LOG4 STOP JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH2 0x30B PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x313 PUSH2 0xD63 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH3 0xFFFFFF DUP4 AND DUP1 SWAP4 SUB PUSH2 0xC8 JUMPI PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0xC4 CALLDATALOAD SWAP3 PUSH2 0xFFFF DUP5 AND DUP1 SWAP5 SUB PUSH2 0xC8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP6 ISZERO ISZERO DUP1 PUSH2 0x561 JUMPI JUMPDEST ISZERO PUSH2 0x530 JUMPI DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x527 JUMPI JUMPDEST ISZERO PUSH2 0x4F5 JUMPI PUSH2 0x2710 DUP5 GT PUSH2 0x4C6 JUMPI DUP4 PUSH2 0xFFFF PUSH1 0x5 DUP10 SWAP8 DUP7 DUP11 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x387 DUP5 PUSH2 0xD8F JUMP JUMPDEST PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP1 DUP3 DUP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP15 DUP16 SWAP3 DUP4 DUP4 MSTORE PUSH1 0x60 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP8 ADD SWAP4 DUP12 DUP6 MSTORE PUSH1 0xA0 DUP9 ADD SWAP6 DUP14 DUP8 MSTORE PUSH1 0xC0 DUP10 ADD SWAP8 DUP9 MSTORE PUSH1 0xE0 DUP10 ADD SWAP12 DUP13 MSTORE CALLER PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP7 MLOAD ISZERO ISZERO SWAP1 PUSH1 0xFF DUP9 SLOAD SWAP2 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 MLOAD PUSH1 0x8 SHL AND SWAP3 AND SWAP1 PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA8 SHL AND OR OR DUP7 SSTORE PUSH1 0x1 DUP7 ADD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP4 SLOAD AND OR DUP3 SSTORE MLOAD DUP2 SLOAD SWAP1 PUSH3 0xFFFFFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND SWAP1 PUSH3 0xFFFFFF PUSH1 0xA0 SHL NOT AND OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP2 MLOAD AND PUSH2 0xFFFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH32 0x746A2F823CF6F4474906BACC479001A4919E05EDF924B3DBABF198D8D16BEC43 PUSH1 0xC0 CALLER SWAP3 LOG4 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x42616442697073 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4E6F5472696767657273 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP3 ISZERO ISZERO PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2D32B937AA37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO PUSH2 0x353 JUMP JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH2 0x58C PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x594 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5A8 DUP2 ISZERO ISZERO PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x3DF77BEB5DB05FCDD70A30FC8ADF3F83F9501B68579455ADBD100B8180940394 PUSH0 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH2 0x5F8 PUSH2 0xE58 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH2 0x650 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x658 PUSH2 0xD63 JUMP JUMPDEST PUSH2 0x660 PUSH2 0xD79 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x100 PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH3 0xFFFFFF PUSH2 0xFFFF PUSH1 0x5 PUSH1 0x4 DUP7 ADD SLOAD SWAP6 ADD SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP7 PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP9 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x8 SHR AND PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xA0 SHR AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH2 0x725 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x72D PUSH2 0xD63 JUMP JUMPDEST SWAP1 PUSH2 0x736 PUSH2 0xD79 JUMP JUMPDEST SWAP3 PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0xD0B JUMPI POP PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP4 MSTORE SWAP4 SWAP1 MSTORE DUP3 SWAP1 KECCAK256 SWAP2 MLOAD SWAP4 SWAP1 SWAP3 SWAP1 PUSH2 0x786 DUP6 PUSH2 0xD8F JUMP JUMPDEST DUP3 SLOAD SWAP4 PUSH1 0xFF DUP6 AND ISZERO SWAP5 DUP6 ISZERO DUP8 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x8 SHR AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x1 DUP5 ADD SLOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x40 DUP9 ADD MSTORE PUSH3 0xFFFFFF PUSH1 0x60 DUP9 ADD SWAP6 PUSH1 0xA0 SHR AND DUP6 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP7 PUSH1 0x80 DUP2 ADD SWAP8 DUP9 MSTORE PUSH1 0x3 DUP3 ADD SLOAD SWAP7 PUSH1 0xA0 DUP3 ADD SWAP8 DUP9 MSTORE PUSH1 0xE0 PUSH2 0xFFFF PUSH1 0x5 PUSH1 0x4 DUP7 ADD SLOAD SWAP6 PUSH1 0xC0 DUP7 ADD SWAP7 DUP8 MSTORE ADD SLOAD AND SWAP3 ADD SWAP2 DUP3 MSTORE PUSH2 0xCDB JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xCC34929D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP7 DUP9 AND PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP10 SWAP1 SWAP8 SWAP1 SWAP3 DUP11 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0xB0A JUMPI PUSH0 SWAP9 PUSH2 0xCA7 JUMPI JUMPDEST POP DUP8 ISZERO PUSH2 0xC78 JUMPI MLOAD SWAP2 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0xC6D JUMPI JUMPDEST POP MLOAD SWAP8 DUP9 ISZERO ISZERO SWAP9 DUP10 PUSH2 0xC62 JUMPI JUMPDEST POP DUP3 ISZERO SWAP3 DUP4 PUSH2 0xC5B JUMPI JUMPDEST ISZERO PUSH2 0xC27 JUMPI MLOAD SWAP7 DUP8 ISZERO PUSH2 0xB8F JUMPI JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x89A PUSH2 0xFFFF SWAP3 DUP11 PUSH2 0xDE2 JUMP JUMPDEST DIV SWAP2 MLOAD AND DUP1 PUSH2 0xB7B JUMPI JUMPDEST POP PUSH1 0x20 PUSH0 PUSH1 0x40 MLOAD DUP3 DUP2 ADD SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP7 PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE DUP11 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH2 0x8DA PUSH1 0x84 DUP3 PUSH2 0xDC0 JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP9 GAS CALL ISZERO PUSH2 0xB0A JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0xB72 JUMPI POP DUP4 EXTCODESIZE ISZERO JUMPDEST PUSH2 0xB5F JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH0 DUP10 GAS CALL DUP1 ISZERO PUSH2 0xB0A JUMPI PUSH2 0xB42 JUMPI JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH0 DUP10 GAS CALL DUP1 ISZERO PUSH2 0xB0A JUMPI PUSH2 0xB15 JUMPI JUMPDEST POP PUSH1 0x3 SLOAD SWAP6 MLOAD PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x98E DUP3 PUSH2 0xD8F JUMP JUMPDEST DUP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 ADD SWAP10 DUP11 MSTORE PUSH1 0x60 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x64 DUP1 CALLDATALOAD PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD DUP15 DUP2 MSTORE PUSH1 0xC0 DUP9 ADD SWAP9 DUP10 MSTORE PUSH0 PUSH1 0xE0 DUP10 ADD SWAP1 DUP2 MSTORE SWAP5 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE SWAP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP11 ADD MSTORE SWAP6 MLOAD DUP7 AND PUSH1 0x24 DUP10 ADD MSTORE SWAP13 MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP9 ADD MSTORE SWAP2 MLOAD DUP5 AND SWAP1 DUP7 ADD MSTORE MLOAD PUSH1 0x84 DUP6 ADD MSTORE SWAP9 MLOAD PUSH1 0xA4 DUP5 ADD MSTORE SWAP3 MLOAD PUSH1 0xC4 DUP4 ADD MSTORE SWAP7 MLOAD SWAP1 SWAP2 AND PUSH1 0xE4 DUP3 ADD MSTORE SWAP5 DUP6 SWAP1 DUP2 SWAP1 GAS SWAP3 PUSH0 PUSH2 0x104 SWAP3 PUSH1 0x20 SWAP6 CALL SWAP5 DUP6 ISZERO PUSH2 0xB0A JUMPI PUSH0 SWAP6 PUSH2 0xAD3 JUMPI JUMPDEST POP PUSH1 0x80 PUSH32 0xFA280417FE858EE402A8C4BEC666F5C036232A751CBA9074E347742B260A68F3 SWAP2 PUSH1 0x40 SWAP9 DUP5 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE DUP10 PUSH0 KECCAK256 DUP7 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP10 PUSH0 KECCAK256 DUP8 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0xAAA DUP11 PUSH0 KECCAK256 PUSH1 0x5 PUSH0 SWAP2 DUP3 DUP2 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE JUMP JUMPDEST DUP10 MLOAD SWAP2 DUP10 DUP4 MSTORE DUP9 PUSH1 0x20 DUP5 ADD MSTORE ISZERO DUP11 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE LOG4 PUSH1 0x1 DUP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP7 SWAP5 POP PUSH1 0x20 DUP8 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB02 JUMPI JUMPDEST DUP2 PUSH2 0xAEF PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDC0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC8 JUMPI SWAP6 MLOAD SWAP4 SWAP6 PUSH1 0x80 PUSH2 0xA3F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xB36 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB3B JUMPI JUMPDEST PUSH2 0xB2E DUP2 DUP4 PUSH2 0xDC0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB24 JUMP JUMPDEST PUSH2 0xB5A SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB3B JUMPI PUSH2 0xB2E DUP2 DUP4 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST DUP4 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0xB88 SWAP1 PUSH2 0x2710 SWAP3 PUSH2 0xDE2 JUMP JUMPDEST DIV DUP9 PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP8 POP PUSH1 0x20 DUP9 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0xB0A JUMPI PUSH0 SWAP9 PUSH2 0xBF3 JUMPI JUMPDEST POP DUP8 PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x4E6F42616C616E6365 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP8 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC1F JUMPI JUMPDEST DUP2 PUSH2 0xC0F PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDC0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC8 JUMPI MLOAD SWAP7 DUP10 PUSH2 0xBBC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x139BDD151C9A59D9D95C9959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x876 JUMP JUMPDEST DUP9 GT ISZERO SWAP9 POP DUP10 PUSH2 0x86C JUMP JUMPDEST DUP9 LT ISZERO SWAP3 POP DUP10 PUSH2 0x85F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x4E6F5072696365 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP8 POP PUSH1 0x40 DUP2 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0xCD3 JUMPI JUMPDEST DUP2 PUSH2 0xCC3 PUSH1 0x40 SWAP4 DUP4 PUSH2 0xDC0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC8 JUMPI MLOAD SWAP7 DUP10 PUSH2 0x84C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x496E616374697665 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC8 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC8 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC8 JUMPI JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDAC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDAC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xDF5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xC8 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xC8 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xE28 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2D32B937A0B23239 PUSH1 0xC1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE6B JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 ADD EXTCODEHASH 0xA6 SWAP1 BLOBBASEFEE ADD PUSH11 0xF465E38F57AB04BA232BE7 CHAINID DUP11 0xD 0x4F PUSH20 0x53BB9D0C1007F77A64736F6C634300081A003300 ",
							"sourceMap": "1587:5399:9:-:0;;;;;;;;;;;;;-1:-1:-1;;1587:5399:9;;;;-1:-1:-1;;;;;1587:5399:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;3107:10;1273:26:0;1269:95;;-1:-1:-1;1587:5399:9;;3107:10;-1:-1:-1;;;;;;1587:5399:9;;;;;;;;;;3107:10;;-1:-1:-1;;;;;1587:5399:9;;3052:40:0;;-1:-1:-1;3052:40:0;1716:1:4;;;-1:-1:-1;;;;;1587:5399:9;;3137:21;;;;:46;;-1:-1:-1;1587:5399:9;;;-1:-1:-1;3206:33:9;1587:5399;;-1:-1:-1;;;;;;1587:5399:9;;;;;;;;3249:35;1587:5399;;;;;-1:-1:-1;;;;;1587:5399:9;;;;;;;;;;;;3299:22;-1:-1:-1;;3299:22:9;3336;-1:-1:-1;3336:22:9;;1587:5399;;;;;;;;-1:-1:-1;;;1587:5399:9;;;;;;;;;;;;-1:-1:-1;;;1587:5399:9;;;;;;;3137:46;-1:-1:-1;;;;;;1587:5399:9;;3162:21;;3137:46;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;1587:5399:9;;-1:-1:-1;1322:31:0;1587:5399:9;-1:-1:-1;1587:5399:9;;;;;;-1:-1:-1;1587:5399:9;;;;;-1:-1:-1;1587:5399:9;;;;-1:-1:-1;;;;;1587:5399:9;;;;;;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 3449,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_15076": {
									"entryPoint": 3405,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_15077": {
									"entryPoint": 3427,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 3593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_uint256": {
									"entryPoint": 3554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_15079": {
									"entryPoint": 3471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkOwner": {
									"entryPoint": 3672,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"require_helper_stringliteral_49e8": {
									"entryPoint": 3617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"storage_set_to_zero_struct_Config": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c908163239aee061461070c5750806335d0ed5f14610637578063715018a6146105e05780637adbf973146105735780637d818f47146102f25780637dc0d1d0146102ca5780638da5cb5b146102a3578063bcae5ef4146101f8578063c0d786551461018b578063ed2f21f514610151578063f2fde38b146100cc5763f887ea40146100a0575f80fd5b346100c8575f3660031901126100c8576003546040516001600160a01b039091168152602090f35b5f80fd5b346100c85760203660031901126100c8576100e5610d4d565b6100ed610e58565b6001600160a01b0316801561013e575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b346100c8575f3660031901126100c85760206040517f36366627dbd14ebf17bfe4ad54a261f54ee08412a2d76099708ba0c75fef2da88152f35b346100c85760203660031901126100c8576101a4610d4d565b6101ac610e58565b6001600160a01b03166101c0811515610e21565b600380546001600160a01b031916821790557f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc805f80a2005b346100c85760403660031901126100c857610211610d4d565b610219610d63565b335f52600460205260405f2060018060a01b0383165f5260205260405f2060018060a01b0382165f5260205261026f60405f2060055f918281558260018201558260028201558260038201558260048201550155565b6001600160a01b039081169116337fc4a0f24a5a427f98d9bb378273a31dc61774f9aacf4071433c97d5041f08ac225f80a4005b346100c8575f3660031901126100c8575f546040516001600160a01b039091168152602090f35b346100c8575f3660031901126100c8576002546040516001600160a01b039091168152602090f35b346100c85760e03660031901126100c85761030b610d4d565b610313610d63565b906044359162ffffff83168093036100c8576064359160843560a4359060c4359261ffff84168094036100c8576001600160a01b03169485151580610561575b15610530578115801590610527575b156104f55761271084116104c6578361ffff60058997868a6040519261038784610d8f565b600184526020840190828252604085019060018060a01b03169e8f928383526060870191825260808701938b855260a08801958d875260c0890197885260e089019b8c52335f52600460205260405f20905f5260205260405f20905f5260205260405f20965115159060ff885491610100600160a81b03905160081b169216906affffffffffffffffffffff60a81b1617178655600186019160018060a01b039051166bffffffffffffffffffffffff60a01b8354161782555181549062ffffff60a01b9060a01b169062ffffff60a01b19161790555160028401555160038301555160048201550191511661ffff198254161790556040519485526020850152604084015260608301526080820152600160a08201527f746a2f823cf6f4474906bacc479001a4919e05edf924b3dbabf198d8d16bec4360c03392a4005b60405162461bcd60e51b81526020600482015260076024820152664261644269707360c81b6044820152606490fd5b60405162461bcd60e51b815260206004820152600a6024820152694e6f547269676765727360b01b6044820152606490fd5b50821515610362565b60405162461bcd60e51b81526020600482015260096024820152682d32b937aa37b5b2b760b91b6044820152606490fd5b506001600160a01b0385161515610353565b346100c85760203660031901126100c85761058c610d4d565b610594610e58565b6001600160a01b03166105a8811515610e21565b600280546001600160a01b031916821790557f3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b81809403945f80a2005b346100c8575f3660031901126100c8576105f8610e58565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100c85760603660031901126100c857610650610d4d565b610658610d63565b610660610d79565b9160018060a01b03165f52600460205260405f209060018060a01b03165f5260205260405f209060018060a01b03165f5260205261010060405f20805490600181015490600281015460038201549062ffffff61ffff6005600486015495015416946040519660ff81161515885260018060a01b039060081c16602088015260018060a01b038116604088015260a01c166060860152608085015260a084015260c083015260e0820152f35b346100c85760803660031901126100c857610725610d4d565b61072d610d63565b90610736610d79565b92600260015414610d0b575060026001556001600160a01b039081165f81815260046020908152604080832086861684528252808320948716835293905282902091519390929061078685610d8f565b82549360ff851615948515875260018060a01b039060081c16602087015260018401549360018060a01b038516604088015262ffffff606088019560a01c1685526002810154966080810197885260038201549660a0820197885260e061ffff600560048601549560c086019687520154169201918252610cdb576002546040805163cc34929d60e01b81526001600160a01b0397881660048201819052968816602482018190529099909790928a916044918391165afa978815610b0a575f98610ca7575b508715610c785751918215159283610c6d575b5051978815159889610c62575b5082159283610c5b575b15610c275751968715610b8f575b670de0b6b3a764000061089a61ffff928a610de2565b0491511680610b7b575b5060205f604051828101906323b872dd60e01b82528660248201523060448201528a6064820152606481526108da608482610dc0565b519082885af115610b0a575f513d610b725750833b155b610b5f5760018060a01b03600354166040519063095ea7b360e01b825260048201525f60248201526020816044815f895af18015610b0a57610b42575b5060035460405163095ea7b360e01b81526001600160a01b039091166004820152602481018890526020816044815f895af18015610b0a57610b15575b50600354955160405162ffffff909116966001600160a01b031661098e82610d8f565b858252602082018781526040808401998a5260608401878152606480356080870190815260a087018e815260c088019889525f60e08901908152945163414bf38960e01b815297516001600160a01b0390811660048a01529551861660248901529c5162ffffff1660448801529151841690860152516084850152985160a4840152925160c4830152965190911660e482015294859081905a925f61010492602095f1948515610b0a575f95610ad3575b5060807ffa280417fe858ee402a8c4bec666f5c036232a751cba9074e347742b260a68f391604098845f526004602052895f20865f52602052895f20875f52602052610aaa8a5f2060055f918281558260018201558260028201558260038201558260048201550155565b895191898352886020840152158a83015215156060820152a46001805582519182526020820152f35b9694506020873d602011610b02575b81610aef60209383610dc0565b810103126100c857955193956080610a3f565b3d9150610ae2565b6040513d5f823e3d90fd5b610b369060203d602011610b3b575b610b2e8183610dc0565b810190610e09565b61096b565b503d610b24565b610b5a9060203d602011610b3b57610b2e8183610dc0565b61092e565b83635274afe760e01b5f5260045260245ffd5b600114156108f1565b610b889061271092610de2565b04886108a4565b6040516370a0823160e01b8152600481018590529750602088602481885afa978815610b0a575f98610bf3575b50876108845760405162461bcd60e51b81526020600482015260096024820152684e6f42616c616e636560b81b6044820152606490fd5b9097506020813d602011610c1f575b81610c0f60209383610dc0565b810103126100c857519689610bbc565b3d9150610c02565b60405162461bcd60e51b815260206004820152600c60248201526b139bdd151c9a59d9d95c995960a21b6044820152606490fd5b5088610876565b88111598508961086c565b88101592508961085f565b60405162461bcd60e51b81526020600482015260076024820152664e6f507269636560c81b6044820152606490fd5b9097506040813d604011610cd3575b81610cc360409383610dc0565b810103126100c85751968961084c565b3d9150610cb6565b60405162461bcd60e51b8152602060048201526008602482015267496e61637469766560c01b6044820152606490fd5b62461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b600435906001600160a01b03821682036100c857565b602435906001600160a01b03821682036100c857565b604435906001600160a01b03821682036100c857565b610100810190811067ffffffffffffffff821117610dac57604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff821117610dac57604052565b81810292918115918404141715610df557565b634e487b7160e01b5f52601160045260245ffd5b908160209103126100c8575180151581036100c85790565b15610e2857565b60405162461bcd60e51b81526020600482015260086024820152672d32b937a0b2323960c11b6044820152606490fd5b5f546001600160a01b03163303610e6b57565b63118cdaa760e01b5f523360045260245ffdfea264697066735822122026013fa6904a016af465e38f57ab04ba232be7468a0d4f7353bb9d0c1007f77a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x239AEE06 EQ PUSH2 0x70C JUMPI POP DUP1 PUSH4 0x35D0ED5F EQ PUSH2 0x637 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0x7ADBF973 EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x7D818F47 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xBCAE5EF4 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xED2F21F5 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xCC JUMPI PUSH4 0xF887EA40 EQ PUSH2 0xA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH2 0xE5 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0xED PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x13E JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x36366627DBD14EBF17BFE4AD54A261F54EE08412A2D76099708BA0C75FEF2DA8 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH2 0x1A4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x1AC PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C0 DUP2 ISZERO ISZERO PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x7AED1D3E8155A07CCF395E44EA3109A0E2D6C9B29BBBE9F142D9790596F4DC80 PUSH0 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH2 0x211 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x219 PUSH2 0xD63 JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x26F PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x5 PUSH0 SWAP2 DUP3 DUP2 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND CALLER PUSH32 0xC4A0F24A5A427F98D9BB378273A31DC61774F9AACF4071433C97D5041F08AC22 PUSH0 DUP1 LOG4 STOP JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH2 0x30B PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x313 PUSH2 0xD63 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH3 0xFFFFFF DUP4 AND DUP1 SWAP4 SUB PUSH2 0xC8 JUMPI PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0xC4 CALLDATALOAD SWAP3 PUSH2 0xFFFF DUP5 AND DUP1 SWAP5 SUB PUSH2 0xC8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP6 ISZERO ISZERO DUP1 PUSH2 0x561 JUMPI JUMPDEST ISZERO PUSH2 0x530 JUMPI DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x527 JUMPI JUMPDEST ISZERO PUSH2 0x4F5 JUMPI PUSH2 0x2710 DUP5 GT PUSH2 0x4C6 JUMPI DUP4 PUSH2 0xFFFF PUSH1 0x5 DUP10 SWAP8 DUP7 DUP11 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x387 DUP5 PUSH2 0xD8F JUMP JUMPDEST PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP1 DUP3 DUP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP15 DUP16 SWAP3 DUP4 DUP4 MSTORE PUSH1 0x60 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP8 ADD SWAP4 DUP12 DUP6 MSTORE PUSH1 0xA0 DUP9 ADD SWAP6 DUP14 DUP8 MSTORE PUSH1 0xC0 DUP10 ADD SWAP8 DUP9 MSTORE PUSH1 0xE0 DUP10 ADD SWAP12 DUP13 MSTORE CALLER PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP7 MLOAD ISZERO ISZERO SWAP1 PUSH1 0xFF DUP9 SLOAD SWAP2 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 MLOAD PUSH1 0x8 SHL AND SWAP3 AND SWAP1 PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA8 SHL AND OR OR DUP7 SSTORE PUSH1 0x1 DUP7 ADD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP4 SLOAD AND OR DUP3 SSTORE MLOAD DUP2 SLOAD SWAP1 PUSH3 0xFFFFFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND SWAP1 PUSH3 0xFFFFFF PUSH1 0xA0 SHL NOT AND OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP2 MLOAD AND PUSH2 0xFFFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH32 0x746A2F823CF6F4474906BACC479001A4919E05EDF924B3DBABF198D8D16BEC43 PUSH1 0xC0 CALLER SWAP3 LOG4 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x42616442697073 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4E6F5472696767657273 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP3 ISZERO ISZERO PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2D32B937AA37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO PUSH2 0x353 JUMP JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH2 0x58C PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x594 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5A8 DUP2 ISZERO ISZERO PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x3DF77BEB5DB05FCDD70A30FC8ADF3F83F9501B68579455ADBD100B8180940394 PUSH0 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH2 0x5F8 PUSH2 0xE58 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH2 0x650 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x658 PUSH2 0xD63 JUMP JUMPDEST PUSH2 0x660 PUSH2 0xD79 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x100 PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH3 0xFFFFFF PUSH2 0xFFFF PUSH1 0x5 PUSH1 0x4 DUP7 ADD SLOAD SWAP6 ADD SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP7 PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP9 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x8 SHR AND PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xA0 SHR AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xC8 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC8 JUMPI PUSH2 0x725 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x72D PUSH2 0xD63 JUMP JUMPDEST SWAP1 PUSH2 0x736 PUSH2 0xD79 JUMP JUMPDEST SWAP3 PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0xD0B JUMPI POP PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP4 MSTORE SWAP4 SWAP1 MSTORE DUP3 SWAP1 KECCAK256 SWAP2 MLOAD SWAP4 SWAP1 SWAP3 SWAP1 PUSH2 0x786 DUP6 PUSH2 0xD8F JUMP JUMPDEST DUP3 SLOAD SWAP4 PUSH1 0xFF DUP6 AND ISZERO SWAP5 DUP6 ISZERO DUP8 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x8 SHR AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x1 DUP5 ADD SLOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x40 DUP9 ADD MSTORE PUSH3 0xFFFFFF PUSH1 0x60 DUP9 ADD SWAP6 PUSH1 0xA0 SHR AND DUP6 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP7 PUSH1 0x80 DUP2 ADD SWAP8 DUP9 MSTORE PUSH1 0x3 DUP3 ADD SLOAD SWAP7 PUSH1 0xA0 DUP3 ADD SWAP8 DUP9 MSTORE PUSH1 0xE0 PUSH2 0xFFFF PUSH1 0x5 PUSH1 0x4 DUP7 ADD SLOAD SWAP6 PUSH1 0xC0 DUP7 ADD SWAP7 DUP8 MSTORE ADD SLOAD AND SWAP3 ADD SWAP2 DUP3 MSTORE PUSH2 0xCDB JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xCC34929D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP7 DUP9 AND PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP10 SWAP1 SWAP8 SWAP1 SWAP3 DUP11 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0xB0A JUMPI PUSH0 SWAP9 PUSH2 0xCA7 JUMPI JUMPDEST POP DUP8 ISZERO PUSH2 0xC78 JUMPI MLOAD SWAP2 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0xC6D JUMPI JUMPDEST POP MLOAD SWAP8 DUP9 ISZERO ISZERO SWAP9 DUP10 PUSH2 0xC62 JUMPI JUMPDEST POP DUP3 ISZERO SWAP3 DUP4 PUSH2 0xC5B JUMPI JUMPDEST ISZERO PUSH2 0xC27 JUMPI MLOAD SWAP7 DUP8 ISZERO PUSH2 0xB8F JUMPI JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x89A PUSH2 0xFFFF SWAP3 DUP11 PUSH2 0xDE2 JUMP JUMPDEST DIV SWAP2 MLOAD AND DUP1 PUSH2 0xB7B JUMPI JUMPDEST POP PUSH1 0x20 PUSH0 PUSH1 0x40 MLOAD DUP3 DUP2 ADD SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP7 PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE DUP11 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH2 0x8DA PUSH1 0x84 DUP3 PUSH2 0xDC0 JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP9 GAS CALL ISZERO PUSH2 0xB0A JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0xB72 JUMPI POP DUP4 EXTCODESIZE ISZERO JUMPDEST PUSH2 0xB5F JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH0 DUP10 GAS CALL DUP1 ISZERO PUSH2 0xB0A JUMPI PUSH2 0xB42 JUMPI JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH0 DUP10 GAS CALL DUP1 ISZERO PUSH2 0xB0A JUMPI PUSH2 0xB15 JUMPI JUMPDEST POP PUSH1 0x3 SLOAD SWAP6 MLOAD PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x98E DUP3 PUSH2 0xD8F JUMP JUMPDEST DUP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 ADD SWAP10 DUP11 MSTORE PUSH1 0x60 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x64 DUP1 CALLDATALOAD PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD DUP15 DUP2 MSTORE PUSH1 0xC0 DUP9 ADD SWAP9 DUP10 MSTORE PUSH0 PUSH1 0xE0 DUP10 ADD SWAP1 DUP2 MSTORE SWAP5 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE SWAP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP11 ADD MSTORE SWAP6 MLOAD DUP7 AND PUSH1 0x24 DUP10 ADD MSTORE SWAP13 MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP9 ADD MSTORE SWAP2 MLOAD DUP5 AND SWAP1 DUP7 ADD MSTORE MLOAD PUSH1 0x84 DUP6 ADD MSTORE SWAP9 MLOAD PUSH1 0xA4 DUP5 ADD MSTORE SWAP3 MLOAD PUSH1 0xC4 DUP4 ADD MSTORE SWAP7 MLOAD SWAP1 SWAP2 AND PUSH1 0xE4 DUP3 ADD MSTORE SWAP5 DUP6 SWAP1 DUP2 SWAP1 GAS SWAP3 PUSH0 PUSH2 0x104 SWAP3 PUSH1 0x20 SWAP6 CALL SWAP5 DUP6 ISZERO PUSH2 0xB0A JUMPI PUSH0 SWAP6 PUSH2 0xAD3 JUMPI JUMPDEST POP PUSH1 0x80 PUSH32 0xFA280417FE858EE402A8C4BEC666F5C036232A751CBA9074E347742B260A68F3 SWAP2 PUSH1 0x40 SWAP9 DUP5 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE DUP10 PUSH0 KECCAK256 DUP7 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP10 PUSH0 KECCAK256 DUP8 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0xAAA DUP11 PUSH0 KECCAK256 PUSH1 0x5 PUSH0 SWAP2 DUP3 DUP2 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE JUMP JUMPDEST DUP10 MLOAD SWAP2 DUP10 DUP4 MSTORE DUP9 PUSH1 0x20 DUP5 ADD MSTORE ISZERO DUP11 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE LOG4 PUSH1 0x1 DUP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP7 SWAP5 POP PUSH1 0x20 DUP8 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB02 JUMPI JUMPDEST DUP2 PUSH2 0xAEF PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDC0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC8 JUMPI SWAP6 MLOAD SWAP4 SWAP6 PUSH1 0x80 PUSH2 0xA3F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xB36 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB3B JUMPI JUMPDEST PUSH2 0xB2E DUP2 DUP4 PUSH2 0xDC0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB24 JUMP JUMPDEST PUSH2 0xB5A SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB3B JUMPI PUSH2 0xB2E DUP2 DUP4 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST DUP4 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0xB88 SWAP1 PUSH2 0x2710 SWAP3 PUSH2 0xDE2 JUMP JUMPDEST DIV DUP9 PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP8 POP PUSH1 0x20 DUP9 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0xB0A JUMPI PUSH0 SWAP9 PUSH2 0xBF3 JUMPI JUMPDEST POP DUP8 PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x4E6F42616C616E6365 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP8 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC1F JUMPI JUMPDEST DUP2 PUSH2 0xC0F PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDC0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC8 JUMPI MLOAD SWAP7 DUP10 PUSH2 0xBBC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x139BDD151C9A59D9D95C9959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x876 JUMP JUMPDEST DUP9 GT ISZERO SWAP9 POP DUP10 PUSH2 0x86C JUMP JUMPDEST DUP9 LT ISZERO SWAP3 POP DUP10 PUSH2 0x85F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x4E6F5072696365 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP8 POP PUSH1 0x40 DUP2 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0xCD3 JUMPI JUMPDEST DUP2 PUSH2 0xCC3 PUSH1 0x40 SWAP4 DUP4 PUSH2 0xDC0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC8 JUMPI MLOAD SWAP7 DUP10 PUSH2 0x84C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x496E616374697665 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC8 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC8 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC8 JUMPI JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDAC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDAC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xDF5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xC8 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xC8 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xE28 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2D32B937A0B23239 PUSH1 0xC1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE6B JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 ADD EXTCODEHASH 0xA6 SWAP1 BLOBBASEFEE ADD PUSH11 0xF465E38F57AB04BA232BE7 CHAINID DUP11 0xD 0x4F PUSH20 0x53BB9D0C1007F77A64736F6C634300081A003300 ",
							"sourceMap": "1587:5399:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1587:5399:9;;;;1779:31;1587:5399;;;-1:-1:-1;;;;;1587:5399:9;;;;;;;;;;;;;;;;;;-1:-1:-1;;1587:5399:9;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;1587:5399:9;2627:22:0;;2623:91;;1587:5399:9;;;-1:-1:-1;;;;;;1587:5399:9;;;;;;-1:-1:-1;;;;;1587:5399:9;;3052:40:0;;1587:5399:9;3052:40:0;1587:5399:9;2623:91:0;2672:31;;;1587:5399:9;2672:31:0;1587:5399:9;;;;;2672:31:0;1587:5399:9;;;;;;-1:-1:-1;;1587:5399:9;;;;;;;1710:27;1587:5399;;;;;;;;;-1:-1:-1;;1587:5399:9;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;1587:5399:9;3671:42;3679:21;;;3671:42;:::i;:::-;3723:35;1587:5399;;-1:-1:-1;;;;;;1587:5399:9;;;;;3773:22;-1:-1:-1;;3773:22:9;1587:5399;;;;;;;-1:-1:-1;;1587:5399:9;;;;;;:::i;:::-;;;:::i;:::-;4922:10;1587:5399;;;;;;;;;;;;;;;-1:-1:-1;1587:5399:9;;;;-1:-1:-1;1587:5399:9;;;;;;;;-1:-1:-1;1587:5399:9;;;4907:39;1587:5399;-1:-1:-1;1587:5399:9;;-1:-1:-1;1587:5399:9;;;;;;;;;;;;;;;;;;;;;;;;;;;4907:39;-1:-1:-1;;;;;1587:5399:9;;;;;4922:10;4961:32;1587:5399;;4961:32;1587:5399;;;;;;;-1:-1:-1;;1587:5399:9;;;;;;;;-1:-1:-1;;;;;1587:5399:9;;;;;;;;;;;;;;-1:-1:-1;;1587:5399:9;;;;1744:29;1587:5399;;;-1:-1:-1;;;;;1587:5399:9;;;;;;;;;;;;;;-1:-1:-1;;1587:5399:9;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1587:5399:9;;4185:18;;;;:41;;1587:5399;;;;4258:23;;;;:48;;;1587:5399;;;;4353:5;4339:19;;1587:5399;;;;;;;;;;;;;;;:::i;:::-;;;;;4416:288;;1587:5399;;;;;4416:288;;1587:5399;;;;;;;;;;;;;;4416:288;;1587:5399;;;;4416:288;;1587:5399;;;;;4416:288;;1587:5399;;;;;4416:288;;1587:5399;;;;4416:288;;1587:5399;;;4389:10;1587:5399;;;;;;;;4381:25;-1:-1:-1;1587:5399:9;;;;-1:-1:-1;1587:5399:9;4381:32;-1:-1:-1;1587:5399:9;;;;-1:-1:-1;1587:5399:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4720:107;1587:5399;4389:10;4720:107;;1587:5399;;;;-1:-1:-1;;;1587:5399:9;;;;;;;;;;;;-1:-1:-1;;;1587:5399:9;;;;;;;;;;-1:-1:-1;;;1587:5399:9;;;;;;;;;;;;-1:-1:-1;;;1587:5399:9;;;;;;;4258:48;4285:21;;;;4258:48;;1587:5399;;;-1:-1:-1;;;1587:5399:9;;;;;;;;;;;;-1:-1:-1;;;1587:5399:9;;;;;;;4185:41;-1:-1:-1;;;;;;1587:5399:9;;4207:19;;4185:41;;1587:5399;;;;;;-1:-1:-1;;1587:5399:9;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;1587:5399:9;3471:42;3479:21;;;3471:42;:::i;:::-;3523:33;1587:5399;;-1:-1:-1;;;;;;1587:5399:9;;;;;3571:22;-1:-1:-1;;3571:22:9;1587:5399;;;;;;;-1:-1:-1;;1587:5399:9;;;;1500:62:0;;:::i;:::-;1587:5399:9;;;-1:-1:-1;;;;;;1587:5399:9;;;;-1:-1:-1;;;;;1587:5399:9;3052:40:0;1587:5399:9;;3052:40:0;1587:5399:9;;;;;;;-1:-1:-1;;1587:5399:9;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;2332:81;1587:5399;;;;;;-1:-1:-1;1587:5399:9;;;;-1:-1:-1;1587:5399:9;2332:81;1587:5399;;;;;;-1:-1:-1;1587:5399:9;;;;;-1:-1:-1;1587:5399:9;;;2332:81;;;;1587:5399;2332:81;;;;1587:5399;2332:81;;;1587:5399;2332:81;1587:5399;;2332:81;1587:5399;2332:81;;1587:5399;2332:81;;1587:5399;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1587:5399:9;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;1759:1:4;1587:5399:9;;2468:19:4;1759:1;;-1:-1:-1;1759:1:4;1587:5399:9;;-1:-1:-1;;;;;1587:5399:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1759:1:4;1587:5399:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1759:1:4;1587:5399:9;;;;-1:-1:-1;;;5368:32:9;;-1:-1:-1;;;;;1587:5399:9;;;;5368:32;;1587:5399;;;;;;;;;;;;;;;;;;;;;;;;;5368:32;;;;;;;1587:5399;5368:32;;;1587:5399;5438:6;;;1587:5399;;;5478:26;;;;:57;;;;1587:5399;;;5557:26;;;;:55;;;;1587:5399;5631:8;;;;;;;1587:5399;;;;;5737:15;;;5733:138;;1587:5399;5967:4;5948:15;1587:5399;5948:15;;;:::i;:::-;1587:5399;;;;5985:17;5981:88;;1587:5399;;;;;;1745:53:6;;;1587:5399:9;;;;1745:53:6;;;1587:5399:9;1745:53:6;;1587:5399:9;6172:4;1587:5399;;;;;;;;;;1745:53:6;;;;;;:::i;:::-;8507:421;;;;;;;;;1587:5399:9;8507:421:6;;8942:15;;8960:26;;;:31;8942:68;8938:146;;1587:5399:9;;;;;;;;;;;;;;6200:40;;1587:5399;6200:40;;1587:5399;;;;;;;6200:40;1587:5399;6200:40;1587:5399;6200:40;;;;;;;;;8942:68:6;-1:-1:-1;1587:5399:9;;;;-1:-1:-1;;;6250:49:9;;-1:-1:-1;;;;;1587:5399:9;;;;6250:49;;1587:5399;;;;;;;;;;;-1:-1:-1;6250:49:9;;;;;;;;;8942:68:6;-1:-1:-1;1587:5399:9;;;;;;;;;;;-1:-1:-1;;;;;1587:5399:9;;;;:::i;:::-;;;;;6409:336;;1587:5399;;;;6409:336;;;1587:5399;;;;6409:336;;1587:5399;;;;;;;6409:336;;1587:5399;;;;6409:336;;1587:5399;;;;6409:336;;1587:5399;;;-1:-1:-1;1587:5399:9;6409:336;;1587:5399;;;;;-1:-1:-1;;;6372:383:9;;1587:5399;;-1:-1:-1;;;;;1587:5399:9;;;;6372:383;;1587:5399;;;;;;;;;;;;;;;;;;;;;;;;;;1745:53:6;1587:5399:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6372:383;;1587:5399;6372:383;;1587:5399;6372:383;;;;;;;1587:5399;6372:383;;;8942:68:6;1587:5399:9;;6913:64;1587:5399;;;;;;;;;;;;;-1:-1:-1;1587:5399:9;;;;-1:-1:-1;1587:5399:9;;-1:-1:-1;1587:5399:9;;;6863:34;1587:5399;-1:-1:-1;1587:5399:9;;-1:-1:-1;1587:5399:9;;;;;;;;;;;;;;;;;;;;;;;;;;;6863:34;1587:5399;;;;;;;;;;;;;;;;;;;;;;6913:64;1587:5399;;;;;;;;;;;;;6372:383;;;;1587:5399;6372:383;;1587:5399;6372:383;;;;;;1587:5399;6372:383;;;:::i;:::-;;;1587:5399;;;;;;6372:383;;1587:5399;6372:383;;;;;-1:-1:-1;6372:383:9;;;1587:5399;;;;;;;;;6250:49;;;1587:5399;6250:49;1587:5399;6250:49;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;6200:40;;;1587:5399;6200:40;1587:5399;6200:40;;;;;;;:::i;:::-;;;8938:146:6;9033:40;;;;1587:5399:9;9033:40:6;1587:5399:9;;;;9033:40:6;8942:68;1587:5399:9;8994:16:6;;8942:68;;5981:88:9;6028:21;;6053:5;6028:21;;:::i;:::-;1587:5399;5981:88;;;5733:138;1587:5399;;-1:-1:-1;;;5781:29:9;;1587:5399;5781:29;;1587:5399;;;;-1:-1:-1;1587:5399:9;;;;5781:29;;;;;;;;1587:5399;5781:29;;;5733:138;5768:42;;5733:138;1587:5399;;;-1:-1:-1;;;1587:5399:9;;;;;;;;;;;;-1:-1:-1;;;1587:5399:9;;;;;;;5781:29;;;;1587:5399;5781:29;;1587:5399;5781:29;;;;;;1587:5399;5781:29;;;:::i;:::-;;;1587:5399;;;;;5781:29;;;;;;;-1:-1:-1;5781:29:9;;1587:5399;;;-1:-1:-1;;;1587:5399:9;;;;;;;;;;;;-1:-1:-1;;;1587:5399:9;;;;;;;5631:8;;;;;5557:55;5587:25;;;;-1:-1:-1;5557:55:9;;;5478:57;5508:27;;;;-1:-1:-1;5478:57:9;;;1587:5399;;;-1:-1:-1;;;1587:5399:9;;;;;;;;;;;;-1:-1:-1;;;1587:5399:9;;;;;;;5368:32;;;;1587:5399;5368:32;;1587:5399;5368:32;;;;;;1587:5399;5368:32;;;:::i;:::-;;;1587:5399;;;;;5368:32;;;;;;;-1:-1:-1;5368:32:9;;1587:5399;;;-1:-1:-1;;;1587:5399:9;;;;;;;;;;;;-1:-1:-1;;;1587:5399:9;;;;;;;1759:1:4;-1:-1:-1;;;1759:1:4;;1587:5399:9;;1759:1:4;;;;1587:5399:9;1759:1:4;;1587:5399:9;1759:1:4;1587:5399:9;;;1759:1:4;1587:5399:9;;1759:1:4;1587:5399:9;;;;-1:-1:-1;;;;;1587:5399:9;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1587:5399:9;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1587:5399:9;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1587:5399:9;;;;;-1:-1:-1;1587:5399:9;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1587:5399:9;;;;;;;;;;;;-1:-1:-1;;;1587:5399:9;;;;;;;1796:162:0;1710:6;1587:5399:9;-1:-1:-1;;;;;1587:5399:9;735:10:7;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:7;1901:40:0;1587:5399:9;;1710:6:0;1901:40"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "752800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MODULE_ID()": "351",
								"clearTPSL(address,address)": "32643",
								"configs(address,address,address)": "13481",
								"execute(address,address,address,uint256)": "infinite",
								"oracle()": "2390",
								"owner()": "2411",
								"renounceOwnership()": "28094",
								"router()": "2519",
								"setOracle(address)": "27867",
								"setRouter(address)": "27977",
								"setTPSL(address,address,uint24,uint256,uint256,uint256,uint16)": "168036",
								"transferOwnership(address)": "28390"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1587,
									"end": 6986,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1587,
									"end": 6986,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3117,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3117,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3117,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3117,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3158,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3158,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3158,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3158,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 3137,
									"end": 3183,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "13"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3206,
									"end": 3239,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3249,
									"end": 3284,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3299,
									"end": 3321,
									"name": "PUSH",
									"source": 9,
									"value": "3DF77BEB5DB05FCDD70A30FC8ADF3F83F9501B68579455ADBD100B8180940394"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 3299,
									"end": 3321,
									"name": "LOG2",
									"source": 9
								},
								{
									"begin": 3336,
									"end": 3358,
									"name": "PUSH",
									"source": 9,
									"value": "7AED1D3E8155A07CCF395E44EA3109A0E2D6C9B29BBBE9F142D9790596F4DC80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3336,
									"end": 3358,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3336,
									"end": 3358,
									"name": "LOG2",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "RETURN",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2D32B937A0B23239"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3183,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 3137,
									"end": 3183,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3162,
									"end": 3183,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3162,
									"end": 3183,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 3137,
									"end": 3183,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1587,
									"end": 6986,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 6986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026013fa6904a016af465e38f57ab04ba232be7468a0d4f7353bb9d0c1007f77a64736f6c634300081a0033",
									".code": [
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "239AEE06"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "35D0ED5F"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "7ADBF973"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "7D818F47"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "7DC0D1D0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "BCAE5EF4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "C0D78655"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "ED2F21F5"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "F887EA40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1810,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF7"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1737,
											"name": "PUSH",
											"source": 9,
											"value": "36366627DBD14EBF17BFE4AD54A261F54EE08412A2D76099708BA0C75FEF2DA8"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3679,
											"end": 3700,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3679,
											"end": 3700,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3679,
											"end": 3700,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3671,
											"end": 3713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3713,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3671,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3758,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3795,
											"name": "PUSH",
											"source": 9,
											"value": "7AED1D3E8155A07CCF395E44EA3109A0E2D6C9B29BBBE9F142D9790596F4DC80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3773,
											"end": 3795,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 4932,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4907,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 4932,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4961,
											"end": 4993,
											"name": "PUSH",
											"source": 9,
											"value": "C4A0F24A5A427F98D9BB378273A31DC61774F9AACF4071433C97D5041F08AC22"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4961,
											"end": 4993,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1744,
											"end": 1773,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "C4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4185,
											"end": 4226,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4281,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4281,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4281,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4306,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4258,
											"end": 4306,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4358,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 4339,
											"end": 4358,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4358,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4416,
											"end": 4704,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4704,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP15",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP16",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4416,
											"end": 4704,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4416,
											"end": 4704,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4416,
											"end": 4704,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 4416,
											"end": 4704,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4416,
											"end": 4704,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP12",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4389,
											"end": 4399,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4381,
											"end": 4406,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4381,
											"end": 4413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A8"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A8"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4720,
											"end": 4827,
											"name": "PUSH",
											"source": 9,
											"value": "746A2F823CF6F4474906BACC479001A4919E05EDF924B3DBABF198D8D16BEC43"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 4389,
											"end": 4399,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4720,
											"end": 4827,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4720,
											"end": 4827,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42616442697073"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F5472696767657273"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4306,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4258,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4258,
											"end": 4306,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2D32B937AA37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4226,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4185,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4226,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4226,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4185,
											"end": 4226,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3471,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3479,
											"end": 3500,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 3500,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 3500,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3471,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3471,
											"end": 3513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3471,
											"end": 3513,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3471,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3556,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "PUSH",
											"source": 9,
											"value": "3DF77BEB5DB05FCDD70A30FC8ADF3F83F9501B68579455ADBD100B8180940394"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CC34929D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5438,
											"end": 5444,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5438,
											"end": 5444,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5438,
											"end": 5444,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5504,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5504,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5504,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5504,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5535,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5535,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 5478,
											"end": 5535,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5557,
											"end": 5583,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 5557,
											"end": 5583,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5557,
											"end": 5583,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5557,
											"end": 5583,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5557,
											"end": 5612,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 5557,
											"end": 5612,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5557,
											"end": 5612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 5557,
											"end": 5612,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5631,
											"end": 5639,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5631,
											"end": 5639,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5631,
											"end": 5639,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5631,
											"end": 5639,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5631,
											"end": 5639,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5631,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 5631,
											"end": 5639,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5737,
											"end": 5752,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5737,
											"end": 5752,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5737,
											"end": 5752,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5733,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 5733,
											"end": 5871,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5967,
											"end": 5971,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5948,
											"end": 5963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 5981,
											"end": 6069,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6176,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6409,
											"end": 6745,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6409,
											"end": 6745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6409,
											"end": 6745,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6409,
											"end": 6745,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6409,
											"end": 6745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6409,
											"end": 6745,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6409,
											"end": 6745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6409,
											"end": 6745,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6409,
											"end": 6745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 6409,
											"end": 6745,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6409,
											"end": 6745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 6409,
											"end": 6745,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6409,
											"end": 6745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 6409,
											"end": 6745,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6409,
											"end": 6745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "414BF389"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP13",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "C4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "E4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "PUSH",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6913,
											"end": 6977,
											"name": "PUSH",
											"source": 9,
											"value": "FA280417FE858EE402A8C4BEC666F5C036232A751CBA9074E347742B260A68F3"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6863,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6863,
											"end": 6897,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 6863,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6913,
											"end": 6977,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6372,
											"end": 6755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6372,
											"end": 6755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6250,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6250,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 6250,
											"end": 6299,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6200,
											"end": 6240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 6200,
											"end": 6240,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE7"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 6069,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 5981,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6028,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 6028,
											"end": 6049,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6058,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 6028,
											"end": 6049,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6028,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6028,
											"end": 6049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6028,
											"end": 6049,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 6028,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6069,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 5981,
											"end": 6069,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5733,
											"end": 5871,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 5733,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5733,
											"end": 5871,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 5733,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 5810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 5810,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5733,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F42616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5781,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD151C9A59D9D95C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5631,
											"end": 5639,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 5631,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5631,
											"end": 5639,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5631,
											"end": 5639,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5631,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 5631,
											"end": 5639,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5557,
											"end": 5612,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 5557,
											"end": 5612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5587,
											"end": 5612,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5587,
											"end": 5612,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5587,
											"end": 5612,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5587,
											"end": 5612,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5557,
											"end": 5612,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5557,
											"end": 5612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 5557,
											"end": 5612,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5535,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 5478,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5508,
											"end": 5535,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5508,
											"end": 5535,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5508,
											"end": 5535,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5508,
											"end": 5535,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5535,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 5478,
											"end": 5535,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F5072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5368,
											"end": 5400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E616374697665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2D32B937A0B23239"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA7"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 6986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MODULE_ID()": "ed2f21f5",
							"clearTPSL(address,address)": "bcae5ef4",
							"configs(address,address,address)": "35d0ed5f",
							"execute(address,address,address,uint256)": "239aee06",
							"oracle()": "7dc0d1d0",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"router()": "f887ea40",
							"setOracle(address)": "7adbf973",
							"setRouter(address)": "c0d78655",
							"setTPSL(address,address,uint24,uint256,uint256,uint256,uint16)": "7d818f47",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"}],\"name\":\"Cleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takeProfitPrice1e18\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stopLossPrice1e18\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minOutBips\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"ConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"tpTriggered\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"slTriggered\",\"type\":\"bool\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"OracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"RouterUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MODULE_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"}],\"name\":\"clearTPSL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"configs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takeProfitPrice1e18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stopLossPrice1e18\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"minOutBips\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountSold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IOracleManager2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Router2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takeProfitPrice1e18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stopLossPrice1e18\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"minOutBips\",\"type\":\"uint16\"}],\"name\":\"setTPSL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":\"TPSLModule\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol\":{\"keccak256\":\"0x9b5f3ccbce3d415c105fcede4f3ad0cd99e77cce00acf0a456eb4797db06e6de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d996d135a8875ee56e2adf6be04e7cf0bd2af282bd40ba0f43b6cdaa87a8d41\",\"dweb:/ipfs/QmfNZAvvrYCL42kygrRwwQ6y8ZNtYRu24WEh9bpxenDq6y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol:TPSLModule",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol:TPSLModule",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 950,
								"contract": "src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol:TPSLModule",
								"label": "oracle",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IOracleManager2)908"
							},
							{
								"astId": 953,
								"contract": "src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol:TPSLModule",
								"label": "router",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IUniswapV3Router2)934"
							},
							{
								"astId": 979,
								"contract": "src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol:TPSLModule",
								"label": "configs",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_struct(Config)970_storage)))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IOracleManager2)908": {
								"encoding": "inplace",
								"label": "contract IOracleManager2",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV3Router2)934": {
								"encoding": "inplace",
								"label": "contract IUniswapV3Router2",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_struct(Config)970_storage)))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => mapping(address => struct TPSLModule.Config)))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_mapping(t_address,t_struct(Config)970_storage))"
							},
							"t_mapping(t_address,t_mapping(t_address,t_struct(Config)970_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => struct TPSLModule.Config))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(Config)970_storage)"
							},
							"t_mapping(t_address,t_struct(Config)970_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct TPSLModule.Config)",
								"numberOfBytes": "32",
								"value": "t_struct(Config)970_storage"
							},
							"t_struct(Config)970_storage": {
								"encoding": "inplace",
								"label": "struct TPSLModule.Config",
								"members": [
									{
										"astId": 955,
										"contract": "src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol:TPSLModule",
										"label": "active",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 957,
										"contract": "src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol:TPSLModule",
										"label": "base",
										"offset": 1,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 959,
										"contract": "src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol:TPSLModule",
										"label": "quote",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 961,
										"contract": "src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol:TPSLModule",
										"label": "fee",
										"offset": 20,
										"slot": "1",
										"type": "t_uint24"
									},
									{
										"astId": 963,
										"contract": "src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol:TPSLModule",
										"label": "amountIn",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 965,
										"contract": "src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol:TPSLModule",
										"label": "takeProfitPrice1e18",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 967,
										"contract": "src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol:TPSLModule",
										"label": "stopLossPrice1e18",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 969,
										"contract": "src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol:TPSLModule",
										"label": "minOutBips",
										"offset": 0,
										"slot": "5",
										"type": "t_uint16"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint24": {
								"encoding": "inplace",
								"label": "uint24",
								"numberOfBytes": "3"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 875,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 874,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								874
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							886
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 886,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								886,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 887,
							"src": "133:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "132:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "140:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 380,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 380,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 380,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 380,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 380,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 380,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 844,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 844,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 469,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 471,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 467,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 465,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 464,
												"id": 476,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 844,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 497,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 499,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 500,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 502,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 495,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 493,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 492,
												"id": 505,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 844,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 524,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 520,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 509,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 844,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															550
														],
														"declarations": [
															{
																"constant": false,
																"id": 550,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 579,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 559,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 555,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 553,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 557,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 561,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 570,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 569,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 564,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 565,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 566,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 563,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 568,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 572,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 573,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 574,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 575,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 571,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 578,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 844,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 592,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 596,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 598,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 594,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 604,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 605,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 603,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 609,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 612,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 614,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 587,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 615,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 616,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 608,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 621,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 622,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 620,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 583,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 380,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 844,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 641,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 655,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 657,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 653,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 668,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 667,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 663,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 660,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 666,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 648,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 649,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 646,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 630,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 844,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 686,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 701,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 703,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 704,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 715,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 714,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 710,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 675,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 708,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 707,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 713,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 692,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 693,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 694,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 691,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 844,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 731,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 747,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 743,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 758,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 757,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 753,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 751,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 750,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 756,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 737,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 738,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 739,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 736,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 741,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 844,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 771,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 774,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 776,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 777,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 788,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 782,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 780,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 795,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 793,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 792,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 798,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 844,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 813,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 814,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 824,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 835,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 829,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 806,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 827,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 839,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 812,
												"id": 841,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 380,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 844,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 845,
							"src": "698:9376:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 852,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 851,
												"id": 854,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 874,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 861,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 860,
												"id": 863,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 874,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 869,
												"id": 871,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 874,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 875,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 877,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 886,
							"linearizedBaseContracts": [
								886
							],
							"name": "IERC165",
							"nameLocation": "433:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "819:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 879,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:8"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "862:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:8"
									},
									"scope": 886,
									"src": "792:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 887,
							"src": "423:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:8"
				},
				"id": 8
			},
			"src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol": {
				"ast": {
					"absolutePath": "src/Contract Architecture/Trading & Portfolio Management/TPSLModule.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						],
						"IOracleManager2": [
							908
						],
						"IUniswapV3Router2": [
							934
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							844
						],
						"TPSLModule": [
							1453
						]
					},
					"id": 1454,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 888,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1454,
							"sourceUnit": 148,
							"src": "726:67:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 889,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "734:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1454,
							"sourceUnit": 303,
							"src": "794:85:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 891,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 302,
										"src": "802:15:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 894,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1454,
							"sourceUnit": 381,
							"src": "880:70:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 893,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "888:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 896,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1454,
							"sourceUnit": 845,
							"src": "951:82:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 895,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 844,
										"src": "959:9:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOracleManager2",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 908,
							"linearizedBaseContracts": [
								908
							],
							"name": "IOracleManager2",
							"nameLocation": "1045:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cc34929d",
									"id": 907,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice1e18",
									"nameLocation": "1076:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "base",
												"nameLocation": "1097:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1089:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "quote",
												"nameLocation": "1111:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1103:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:29:9"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "price1e18",
												"nameLocation": "1149:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1141:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "1168:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1160:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1160:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1140:38:9"
									},
									"scope": 908,
									"src": "1067:112:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1454,
							"src": "1035:146:9",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3Router2",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 934,
							"linearizedBaseContracts": [
								934
							],
							"name": "IUniswapV3Router2",
							"nameLocation": "1193:17:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IUniswapV3Router2.ExactInputSingleParams",
									"id": 925,
									"members": [
										{
											"constant": false,
											"id": 910,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1265:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 925,
											"src": "1257:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 909,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1257:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 912,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1290:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 925,
											"src": "1282:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 911,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1282:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 914,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1316:3:9",
											"nodeType": "VariableDeclaration",
											"scope": 925,
											"src": "1308:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 913,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1308:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 916,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1337:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 925,
											"src": "1329:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 915,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1329:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 918,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1364:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 925,
											"src": "1356:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 917,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1356:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 920,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1390:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 925,
											"src": "1382:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 919,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1382:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 922,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1416:16:9",
											"nodeType": "VariableDeclaration",
											"scope": 925,
											"src": "1408:24:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 921,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1408:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 924,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1450:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 925,
											"src": "1442:25:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 923,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1442:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "1224:22:9",
									"nodeType": "StructDefinition",
									"scope": 934,
									"src": "1217:257:9",
									"visibility": "public"
								},
								{
									"functionSelector": "414bf389",
									"id": 933,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "1488:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1505:31:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$925_calldata_ptr",
													"typeString": "struct IUniswapV3Router2.ExactInputSingleParams"
												},
												"typeName": {
													"id": 927,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 926,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"1505:22:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 925,
														"src": "1505:22:9"
													},
													"referencedDeclaration": 925,
													"src": "1505:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$925_storage_ptr",
														"typeString": "struct IUniswapV3Router2.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1504:33:9"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1572:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1564:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:19:9"
									},
									"scope": 934,
									"src": "1479:104:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1454,
							"src": "1183:402:9",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 935,
										"name": "Ownable",
										"nameLocations": [
											"1610:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1610:7:9"
									},
									"id": 936,
									"nodeType": "InheritanceSpecifier",
									"src": "1610:7:9"
								},
								{
									"baseName": {
										"id": 937,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1619:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "1619:15:9"
									},
									"id": 938,
									"nodeType": "InheritanceSpecifier",
									"src": "1619:15:9"
								}
							],
							"canonicalName": "TPSLModule",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1453,
							"linearizedBaseContracts": [
								1453,
								302,
								147,
								874
							],
							"name": "TPSLModule",
							"nameLocation": "1596:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 942,
									"libraryName": {
										"id": 939,
										"name": "SafeERC20",
										"nameLocations": [
											"1647:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "1647:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "1641:27:9",
									"typeName": {
										"id": 941,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 940,
											"name": "IERC20",
											"nameLocations": [
												"1661:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "1661:6:9"
										},
										"referencedDeclaration": 380,
										"src": "1661:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "ed2f21f5",
									"id": 947,
									"mutability": "constant",
									"name": "MODULE_ID",
									"nameLocation": "1698:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1453,
									"src": "1674:63:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 943,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5450534c5f4d4f44554c455f5631",
												"id": 945,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1720:16:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_36366627dbd14ebf17bfe4ad54a261f54ee08412a2d76099708ba0c75fef2da8",
													"typeString": "literal_string \"TPSL_MODULE_V1\""
												},
												"value": "TPSL_MODULE_V1"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_36366627dbd14ebf17bfe4ad54a261f54ee08412a2d76099708ba0c75fef2da8",
													"typeString": "literal_string \"TPSL_MODULE_V1\""
												}
											],
											"id": 944,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1710:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 946,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1710:27:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7dc0d1d0",
									"id": 950,
									"mutability": "mutable",
									"name": "oracle",
									"nameLocation": "1767:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1453,
									"src": "1744:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IOracleManager2_$908",
										"typeString": "contract IOracleManager2"
									},
									"typeName": {
										"id": 949,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 948,
											"name": "IOracleManager2",
											"nameLocations": [
												"1744:15:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 908,
											"src": "1744:15:9"
										},
										"referencedDeclaration": 908,
										"src": "1744:15:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOracleManager2_$908",
											"typeString": "contract IOracleManager2"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f887ea40",
									"id": 953,
									"mutability": "mutable",
									"name": "router",
									"nameLocation": "1804:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1453,
									"src": "1779:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV3Router2_$934",
										"typeString": "contract IUniswapV3Router2"
									},
									"typeName": {
										"id": 952,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 951,
											"name": "IUniswapV3Router2",
											"nameLocations": [
												"1779:17:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 934,
											"src": "1779:17:9"
										},
										"referencedDeclaration": 934,
										"src": "1779:17:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3Router2_$934",
											"typeString": "contract IUniswapV3Router2"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "TPSLModule.Config",
									"id": 970,
									"members": [
										{
											"constant": false,
											"id": 955,
											"mutability": "mutable",
											"name": "active",
											"nameLocation": "1849:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 970,
											"src": "1841:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 954,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1841:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 957,
											"mutability": "mutable",
											"name": "base",
											"nameLocation": "1873:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 970,
											"src": "1865:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 956,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1865:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 959,
											"mutability": "mutable",
											"name": "quote",
											"nameLocation": "1942:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 970,
											"src": "1934:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 958,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1934:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 961,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1999:3:9",
											"nodeType": "VariableDeclaration",
											"scope": 970,
											"src": "1991:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 960,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1991:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 963,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "2055:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 970,
											"src": "2047:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 962,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2047:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 965,
											"mutability": "mutable",
											"name": "takeProfitPrice1e18",
											"nameLocation": "2117:19:9",
											"nodeType": "VariableDeclaration",
											"scope": 970,
											"src": "2109:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 964,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2109:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 967,
											"mutability": "mutable",
											"name": "stopLossPrice1e18",
											"nameLocation": "2171:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 970,
											"src": "2163:25:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 966,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2163:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 969,
											"mutability": "mutable",
											"name": "minOutBips",
											"nameLocation": "2225:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 970,
											"src": "2217:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 968,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2217:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Config",
									"nameLocation": "1824:6:9",
									"nodeType": "StructDefinition",
									"scope": 1453,
									"src": "1817:469:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "35d0ed5f",
									"id": 979,
									"mutability": "mutable",
									"name": "configs",
									"nameLocation": "2406:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1453,
									"src": "2332:81:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Config_$970_storage_$_$_$",
										"typeString": "mapping(address => mapping(address => mapping(address => struct TPSLModule.Config)))"
									},
									"typeName": {
										"id": 978,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 971,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2340:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2332:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Config_$970_storage_$_$_$",
											"typeString": "mapping(address => mapping(address => mapping(address => struct TPSLModule.Config)))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 977,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 972,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2359:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2351:46:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Config_$970_storage_$_$",
												"typeString": "mapping(address => mapping(address => struct TPSLModule.Config))"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 976,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2378:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2370:26:9",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Config_$970_storage_$",
													"typeString": "mapping(address => struct TPSLModule.Config)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 974,
														"name": "Config",
														"nameLocations": [
															"2389:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 970,
														"src": "2389:6:9"
													},
													"referencedDeclaration": 970,
													"src": "2389:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Config_$970_storage_ptr",
														"typeString": "struct TPSLModule.Config"
													}
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b8180940394",
									"id": 983,
									"name": "OracleUpdated",
									"nameLocation": "2426:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"indexed": true,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "2456:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2440:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:24:9"
									},
									"src": "2420:44:9"
								},
								{
									"anonymous": false,
									"eventSelector": "7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc80",
									"id": 987,
									"name": "RouterUpdated",
									"nameLocation": "2475:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"indexed": true,
												"mutability": "mutable",
												"name": "router",
												"nameLocation": "2505:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "2489:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2488:24:9"
									},
									"src": "2469:44:9"
								},
								{
									"anonymous": false,
									"eventSelector": "746a2f823cf6f4474906bacc479001a4919e05edf924b3dbabf198d8d16bec43",
									"id": 1007,
									"name": "ConfigSet",
									"nameLocation": "2525:9:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "2560:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2544:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2544:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"indexed": true,
												"mutability": "mutable",
												"name": "base",
												"nameLocation": "2591:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2575:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2575:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"indexed": true,
												"mutability": "mutable",
												"name": "quote",
												"nameLocation": "2621:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2605:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2605:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2643:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2636:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 994,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2636:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2664:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2656:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"indexed": false,
												"mutability": "mutable",
												"name": "takeProfitPrice1e18",
												"nameLocation": "2690:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2682:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"indexed": false,
												"mutability": "mutable",
												"name": "stopLossPrice1e18",
												"nameLocation": "2727:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2719:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"indexed": false,
												"mutability": "mutable",
												"name": "minOutBips",
												"nameLocation": "2762:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2754:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1002,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2754:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"indexed": false,
												"mutability": "mutable",
												"name": "active",
												"nameLocation": "2790:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2782:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1004,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2782:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2534:268:9"
									},
									"src": "2519:284:9"
								},
								{
									"anonymous": false,
									"eventSelector": "c4a0f24a5a427f98d9bb378273a31dc61774f9aacf4071433c97d5041f08ac22",
									"id": 1015,
									"name": "Cleared",
									"nameLocation": "2815:7:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "2839:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "2823:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2823:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"indexed": true,
												"mutability": "mutable",
												"name": "base",
												"nameLocation": "2862:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "2846:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"indexed": true,
												"mutability": "mutable",
												"name": "quote",
												"nameLocation": "2884:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "2868:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2868:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2822:68:9"
									},
									"src": "2809:82:9"
								},
								{
									"anonymous": false,
									"eventSelector": "fa280417fe858ee402a8c4bec666f5c036232a751cba9074e347742b260a68f3",
									"id": 1031,
									"name": "Executed",
									"nameLocation": "2902:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "2927:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2911:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2911:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"indexed": true,
												"mutability": "mutable",
												"name": "base",
												"nameLocation": "2950:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2934:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2934:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"indexed": true,
												"mutability": "mutable",
												"name": "quote",
												"nameLocation": "2972:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2956:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2956:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"indexed": false,
												"mutability": "mutable",
												"name": "sold",
												"nameLocation": "2987:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2979:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2979:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"indexed": false,
												"mutability": "mutable",
												"name": "received",
												"nameLocation": "3001:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2993:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2993:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"indexed": false,
												"mutability": "mutable",
												"name": "tpTriggered",
												"nameLocation": "3016:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3011:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1026,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3011:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"indexed": false,
												"mutability": "mutable",
												"name": "slTriggered",
												"nameLocation": "3034:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3029:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1028,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3029:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2910:136:9"
									},
									"src": "2896:151:9"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "3119:246:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1043,
																	"name": "_oracle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "3137:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3156:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3148:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1044,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3148:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3148:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3137:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1049,
																	"name": "_router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "3162:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3181:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3173:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1050,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3173:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3173:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3162:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3137:46:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f41646472",
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3185:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49e81a6fe971dad03b446f582356616052ed91cdddc6583595465ce35763eb08",
																"typeString": "literal_string \"ZeroAddr\""
															},
															"value": "ZeroAddr"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49e81a6fe971dad03b446f582356616052ed91cdddc6583595465ce35763eb08",
																"typeString": "literal_string \"ZeroAddr\""
															}
														],
														"id": 1042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3129:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3129:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "3129:67:9"
											},
											{
												"expression": {
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1059,
														"name": "oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "3206:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOracleManager2_$908",
															"typeString": "contract IOracleManager2"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1061,
																"name": "_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "3231:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1060,
															"name": "IOracleManager2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "3215:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IOracleManager2_$908_$",
																"typeString": "type(contract IOracleManager2)"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3215:24:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOracleManager2_$908",
															"typeString": "contract IOracleManager2"
														}
													},
													"src": "3206:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOracleManager2_$908",
														"typeString": "contract IOracleManager2"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "3206:33:9"
											},
											{
												"expression": {
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1065,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "3249:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Router2_$934",
															"typeString": "contract IUniswapV3Router2"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1067,
																"name": "_router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "3276:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1066,
															"name": "IUniswapV3Router2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "3258:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV3Router2_$934_$",
																"typeString": "type(contract IUniswapV3Router2)"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3258:26:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Router2_$934",
															"typeString": "contract IUniswapV3Router2"
														}
													},
													"src": "3249:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Router2_$934",
														"typeString": "contract IUniswapV3Router2"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "3249:35:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1072,
															"name": "_oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "3313:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1071,
														"name": "OracleUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "3299:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3299:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "EmitStatement",
												"src": "3294:27:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1076,
															"name": "_router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "3350:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1075,
														"name": "RouterUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "3336:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3336:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "EmitStatement",
												"src": "3331:27:9"
											}
										]
									},
									"id": 1080,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1038,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3107:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3111:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3107:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1040,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1037,
												"name": "Ownable",
												"nameLocations": [
													"3099:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3099:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3099:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "_oracle",
												"nameLocation": "3073:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "3065:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3065:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "_router",
												"nameLocation": "3090:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "3082:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3064:34:9"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3119:0:9"
									},
									"scope": 1453,
									"src": "3053:312:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "3461:139:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1088,
																"name": "_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "3479:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3498:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3490:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1089,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3490:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3490:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3479:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f41646472",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3502:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49e81a6fe971dad03b446f582356616052ed91cdddc6583595465ce35763eb08",
																"typeString": "literal_string \"ZeroAddr\""
															},
															"value": "ZeroAddr"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49e81a6fe971dad03b446f582356616052ed91cdddc6583595465ce35763eb08",
																"typeString": "literal_string \"ZeroAddr\""
															}
														],
														"id": 1087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3471:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3471:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "3471:42:9"
											},
											{
												"expression": {
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1097,
														"name": "oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "3523:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOracleManager2_$908",
															"typeString": "contract IOracleManager2"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1099,
																"name": "_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "3548:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1098,
															"name": "IOracleManager2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "3532:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IOracleManager2_$908_$",
																"typeString": "type(contract IOracleManager2)"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3532:24:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOracleManager2_$908",
															"typeString": "contract IOracleManager2"
														}
													},
													"src": "3523:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOracleManager2_$908",
														"typeString": "contract IOracleManager2"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "3523:33:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1104,
															"name": "_oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "3585:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1103,
														"name": "OracleUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "3571:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3571:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "EmitStatement",
												"src": "3566:27:9"
											}
										]
									},
									"functionSelector": "7adbf973",
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1085,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1084,
												"name": "onlyOwner",
												"nameLocations": [
													"3451:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3451:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3451:9:9"
										}
									],
									"name": "setOracle",
									"nameLocation": "3415:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "_oracle",
												"nameLocation": "3433:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "3425:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3425:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3424:17:9"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3461:0:9"
									},
									"scope": 1453,
									"src": "3406:194:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "3661:141:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1116,
																"name": "_router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "3679:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3698:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3690:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1117,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3690:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3690:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3679:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f41646472",
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3702:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49e81a6fe971dad03b446f582356616052ed91cdddc6583595465ce35763eb08",
																"typeString": "literal_string \"ZeroAddr\""
															},
															"value": "ZeroAddr"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49e81a6fe971dad03b446f582356616052ed91cdddc6583595465ce35763eb08",
																"typeString": "literal_string \"ZeroAddr\""
															}
														],
														"id": 1115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3671:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3671:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "3671:42:9"
											},
											{
												"expression": {
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1125,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "3723:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Router2_$934",
															"typeString": "contract IUniswapV3Router2"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1127,
																"name": "_router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "3750:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1126,
															"name": "IUniswapV3Router2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "3732:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV3Router2_$934_$",
																"typeString": "type(contract IUniswapV3Router2)"
															}
														},
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3732:26:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Router2_$934",
															"typeString": "contract IUniswapV3Router2"
														}
													},
													"src": "3723:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Router2_$934",
														"typeString": "contract IUniswapV3Router2"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "3723:35:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1132,
															"name": "_router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "3787:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1131,
														"name": "RouterUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "3773:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3773:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "EmitStatement",
												"src": "3768:27:9"
											}
										]
									},
									"functionSelector": "c0d78655",
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1113,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1112,
												"name": "onlyOwner",
												"nameLocations": [
													"3651:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3651:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3651:9:9"
										}
									],
									"name": "setRouter",
									"nameLocation": "3615:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "_router",
												"nameLocation": "3633:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "3625:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3625:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:17:9"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3661:0:9"
									},
									"scope": 1453,
									"src": "3606:196:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "4167:667:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1154,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "4185:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4201:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4193:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1155,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4193:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4193:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4185:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1160,
																	"name": "quote",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "4207:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4224:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4216:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1161,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4216:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4216:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4207:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4185:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f546f6b656e",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4228:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fd4b057c6d99679cace5886c4672382650300e74473204c7ffb3e0318e87ba3e",
																"typeString": "literal_string \"ZeroToken\""
															},
															"value": "ZeroToken"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fd4b057c6d99679cace5886c4672382650300e74473204c7ffb3e0318e87ba3e",
																"typeString": "literal_string \"ZeroToken\""
															}
														],
														"id": 1153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4177:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4177:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "4177:63:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1171,
																	"name": "takeProfitPrice1e18",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1146,
																	"src": "4258:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4280:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4258:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1174,
																	"name": "stopLossPrice1e18",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "4285:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4305:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4285:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4258:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f5472696767657273",
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f88ae170a55a48f6859f8daf736459a79296ae4c44784c3c361aab3c9905b6a2",
																"typeString": "literal_string \"NoTriggers\""
															},
															"value": "NoTriggers"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f88ae170a55a48f6859f8daf736459a79296ae4c44784c3c361aab3c9905b6a2",
																"typeString": "literal_string \"NoTriggers\""
															}
														],
														"id": 1170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4250:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4250:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "4250:71:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1182,
																"name": "minOutBips",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "4339:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4353:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "4339:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42616442697073",
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4360:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6c1766a17d3a770524268772585305e19a170fe2b3f8827b13de98b52849b86",
																"typeString": "literal_string \"BadBips\""
															},
															"value": "BadBips"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6c1766a17d3a770524268772585305e19a170fe2b3f8827b13de98b52849b86",
																"typeString": "literal_string \"BadBips\""
															}
														],
														"id": 1181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4331:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4331:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "4331:39:9"
											},
											{
												"expression": {
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1188,
																	"name": "configs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "4381:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Config_$970_storage_$_$_$",
																		"typeString": "mapping(address => mapping(address => mapping(address => struct TPSLModule.Config storage ref)))"
																	}
																},
																"id": 1193,
																"indexExpression": {
																	"expression": {
																		"id": 1189,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4389:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4393:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4389:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4381:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Config_$970_storage_$_$",
																	"typeString": "mapping(address => mapping(address => struct TPSLModule.Config storage ref))"
																}
															},
															"id": 1194,
															"indexExpression": {
																"id": 1191,
																"name": "base",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "4401:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4381:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Config_$970_storage_$",
																"typeString": "mapping(address => struct TPSLModule.Config storage ref)"
															}
														},
														"id": 1195,
														"indexExpression": {
															"id": 1192,
															"name": "quote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "4407:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4381:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Config_$970_storage",
															"typeString": "struct TPSLModule.Config storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "74727565",
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4445:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"id": 1198,
																"name": "base",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "4469:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1199,
																"name": "quote",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "4494:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1200,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "4518:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															},
															{
																"id": 1201,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "4545:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1202,
																"name": "takeProfitPrice1e18",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "4588:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1203,
																"name": "stopLossPrice1e18",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "4640:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1204,
																"name": "minOutBips",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "4683:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															],
															"id": 1196,
															"name": "Config",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "4416:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Config_$970_storage_ptr_$",
																"typeString": "type(struct TPSLModule.Config storage pointer)"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"4437:6:9",
															"4463:4:9",
															"4487:5:9",
															"4513:3:9",
															"4535:8:9",
															"4567:19:9",
															"4621:17:9",
															"4671:10:9"
														],
														"names": [
															"active",
															"base",
															"quote",
															"fee",
															"amountIn",
															"takeProfitPrice1e18",
															"stopLossPrice1e18",
															"minOutBips"
														],
														"nodeType": "FunctionCall",
														"src": "4416:288:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Config_$970_memory_ptr",
															"typeString": "struct TPSLModule.Config memory"
														}
													},
													"src": "4381:323:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Config_$970_storage",
														"typeString": "struct TPSLModule.Config storage ref"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "4381:323:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1209,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4730:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4734:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4730:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1211,
															"name": "base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "4742:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "quote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "4748:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1213,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "4755:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"id": 1214,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "4760:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1215,
															"name": "takeProfitPrice1e18",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "4770:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1216,
															"name": "stopLossPrice1e18",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "4791:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1217,
															"name": "minOutBips",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "4810:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4822:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1208,
														"name": "ConfigSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "4720:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint16_$_t_bool_$returns$__$",
															"typeString": "function (address,address,address,uint24,uint256,uint256,uint256,uint16,bool)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4720:107:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1220,
												"nodeType": "EmitStatement",
												"src": "4715:112:9"
											}
										]
									},
									"functionSelector": "7d818f47",
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setTPSL",
									"nameLocation": "3866:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "base",
												"nameLocation": "3891:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "3883:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3883:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "quote",
												"nameLocation": "3913:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "3905:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3905:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3936:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "3928:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1141,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3928:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3957:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "3949:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3949:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "takeProfitPrice1e18",
												"nameLocation": "4006:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "3998:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3998:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "stopLossPrice1e18",
												"nameLocation": "4060:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "4052:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4052:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "minOutBips",
												"nameLocation": "4114:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "4106:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1149,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4106:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3873:284:9"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4167:0:9"
									},
									"scope": 1453,
									"src": "3857:977:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "4897:103:9",
										"statements": [
											{
												"expression": {
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4907:39:9",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1229,
																	"name": "configs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "4914:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Config_$970_storage_$_$_$",
																		"typeString": "mapping(address => mapping(address => mapping(address => struct TPSLModule.Config storage ref)))"
																	}
																},
																"id": 1232,
																"indexExpression": {
																	"expression": {
																		"id": 1230,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4922:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4926:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4922:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4914:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Config_$970_storage_$_$",
																	"typeString": "mapping(address => mapping(address => struct TPSLModule.Config storage ref))"
																}
															},
															"id": 1234,
															"indexExpression": {
																"id": 1233,
																"name": "base",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1224,
																"src": "4934:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4914:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Config_$970_storage_$",
																"typeString": "mapping(address => struct TPSLModule.Config storage ref)"
															}
														},
														"id": 1236,
														"indexExpression": {
															"id": 1235,
															"name": "quote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "4940:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4914:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Config_$970_storage",
															"typeString": "struct TPSLModule.Config storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "4907:39:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1240,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4969:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4973:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4969:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1242,
															"name": "base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "4981:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1243,
															"name": "quote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "4987:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1239,
														"name": "Cleared",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "4961:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4961:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "EmitStatement",
												"src": "4956:37:9"
											}
										]
									},
									"functionSelector": "bcae5ef4",
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clearTPSL",
									"nameLocation": "4849:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "base",
												"nameLocation": "4867:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "4859:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "quote",
												"nameLocation": "4881:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "4873:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4873:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4858:29:9"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4897:0:9"
									},
									"scope": 1453,
									"src": "4840:160:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "5246:1738:9",
										"statements": [
											{
												"assignments": [
													1266
												],
												"declarations": [
													{
														"constant": false,
														"id": 1266,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "5270:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "5256:15:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Config_$970_memory_ptr",
															"typeString": "struct TPSLModule.Config"
														},
														"typeName": {
															"id": 1265,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1264,
																"name": "Config",
																"nameLocations": [
																	"5256:6:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 970,
																"src": "5256:6:9"
															},
															"referencedDeclaration": 970,
															"src": "5256:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Config_$970_storage_ptr",
																"typeString": "struct TPSLModule.Config"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1274,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1267,
																"name": "configs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "5274:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Config_$970_storage_$_$_$",
																	"typeString": "mapping(address => mapping(address => mapping(address => struct TPSLModule.Config storage ref)))"
																}
															},
															"id": 1269,
															"indexExpression": {
																"id": 1268,
																"name": "vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1249,
																"src": "5282:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5274:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Config_$970_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct TPSLModule.Config storage ref))"
															}
														},
														"id": 1271,
														"indexExpression": {
															"id": 1270,
															"name": "base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "5289:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5274:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Config_$970_storage_$",
															"typeString": "mapping(address => struct TPSLModule.Config storage ref)"
														}
													},
													"id": 1273,
													"indexExpression": {
														"id": 1272,
														"name": "quote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "5295:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5274:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Config_$970_storage",
														"typeString": "struct TPSLModule.Config storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5256:45:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1276,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1266,
																"src": "5319:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Config_$970_memory_ptr",
																	"typeString": "struct TPSLModule.Config memory"
																}
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5321:6:9",
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 955,
															"src": "5319:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e616374697665",
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5329:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ab6980eebf45f7e7935328290280398bfdef3fc0c531ddfb9152f949dbec646",
																"typeString": "literal_string \"Inactive\""
															},
															"value": "Inactive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ab6980eebf45f7e7935328290280398bfdef3fc0c531ddfb9152f949dbec646",
																"typeString": "literal_string \"Inactive\""
															}
														],
														"id": 1275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5311:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5311:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "5311:29:9"
											},
											{
												"assignments": [
													1282,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1282,
														"mutability": "mutable",
														"name": "px",
														"nameLocation": "5360:2:9",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "5352:10:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5352:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1288,
												"initialValue": {
													"arguments": [
														{
															"id": 1285,
															"name": "base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "5388:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1286,
															"name": "quote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "5394:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1283,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "5368:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOracleManager2_$908",
																"typeString": "contract IOracleManager2"
															}
														},
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5375:12:9",
														"memberName": "getPrice1e18",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 907,
														"src": "5368:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256,uint256)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5368:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5351:49:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1290,
																"name": "px",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1282,
																"src": "5438:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5443:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5438:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f5072696365",
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5446:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d531b3a5f7ba202436dbb232fbd09f8eb9d33d27c709625b70f3399878b03dfe",
																"typeString": "literal_string \"NoPrice\""
															},
															"value": "NoPrice"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d531b3a5f7ba202436dbb232fbd09f8eb9d33d27c709625b70f3399878b03dfe",
																"typeString": "literal_string \"NoPrice\""
															}
														],
														"id": 1289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5430:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5430:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "5430:26:9"
											},
											{
												"assignments": [
													1297
												],
												"declarations": [
													{
														"constant": false,
														"id": 1297,
														"mutability": "mutable",
														"name": "tp",
														"nameLocation": "5472:2:9",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "5467:7:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1296,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5467:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1308,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1298,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1266,
																		"src": "5478:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Config_$970_memory_ptr",
																			"typeString": "struct TPSLModule.Config memory"
																		}
																	},
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5480:19:9",
																	"memberName": "takeProfitPrice1e18",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 965,
																	"src": "5478:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5503:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5478:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1302,
																	"name": "px",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "5508:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"id": 1303,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1266,
																		"src": "5514:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Config_$970_memory_ptr",
																			"typeString": "struct TPSLModule.Config memory"
																		}
																	},
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5516:19:9",
																	"memberName": "takeProfitPrice1e18",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 965,
																	"src": "5514:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5508:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5478:57:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1307,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5477:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5467:69:9"
											},
											{
												"assignments": [
													1310
												],
												"declarations": [
													{
														"constant": false,
														"id": 1310,
														"mutability": "mutable",
														"name": "sl",
														"nameLocation": "5551:2:9",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "5546:7:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1309,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5546:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1321,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1311,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1266,
																		"src": "5557:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Config_$970_memory_ptr",
																			"typeString": "struct TPSLModule.Config memory"
																		}
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5559:17:9",
																	"memberName": "stopLossPrice1e18",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 967,
																	"src": "5557:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5582:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5557:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1315,
																	"name": "px",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "5587:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1316,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1266,
																		"src": "5593:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Config_$970_memory_ptr",
																			"typeString": "struct TPSLModule.Config memory"
																		}
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5595:17:9",
																	"memberName": "stopLossPrice1e18",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 967,
																	"src": "5593:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5587:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5557:55:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1320,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5556:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5546:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1323,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "5631:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 1324,
																"name": "sl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "5637:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5631:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74547269676765726564",
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5641:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66c16bd404c9c11db5f95354eb26e82dd48441443e057a9763d3c2d8c118c3a1",
																"typeString": "literal_string \"NotTriggered\""
															},
															"value": "NotTriggered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_66c16bd404c9c11db5f95354eb26e82dd48441443e057a9763d3c2d8c118c3a1",
																"typeString": "literal_string \"NotTriggered\""
															}
														],
														"id": 1322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5623:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5623:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "5623:33:9"
											},
											{
												"expression": {
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1329,
														"name": "amountSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "5700:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1330,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "5713:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Config_$970_memory_ptr",
																"typeString": "struct TPSLModule.Config memory"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5715:8:9",
														"memberName": "amountIn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 963,
														"src": "5713:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5700:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "5700:23:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1334,
														"name": "amountSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "5737:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5751:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5737:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "IfStatement",
												"src": "5733:138:9",
												"trueBody": {
													"id": 1353,
													"nodeType": "Block",
													"src": "5754:117:9",
													"statements": [
														{
															"expression": {
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1337,
																	"name": "amountSold",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "5768:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1342,
																			"name": "vault",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1249,
																			"src": "5804:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1339,
																					"name": "base",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1251,
																					"src": "5788:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1338,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 380,
																				"src": "5781:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5781:12:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5794:9:9",
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 337,
																		"src": "5781:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5781:29:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5768:42:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1345,
															"nodeType": "ExpressionStatement",
															"src": "5768:42:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1347,
																			"name": "amountSold",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1260,
																			"src": "5832:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5845:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5832:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e6f42616c616e6365",
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5848:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4aa7b40723f14c3c65aff5e13e5aba9d47880dde50232b7bf48ea1ff2d54a84b",
																			"typeString": "literal_string \"NoBalance\""
																		},
																		"value": "NoBalance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_4aa7b40723f14c3c65aff5e13e5aba9d47880dde50232b7bf48ea1ff2d54a84b",
																			"typeString": "literal_string \"NoBalance\""
																		}
																	],
																	"id": 1346,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5824:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5824:36:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1352,
															"nodeType": "ExpressionStatement",
															"src": "5824:36:9"
														}
													]
												}
											},
											{
												"assignments": [
													1356
												],
												"declarations": [
													{
														"constant": false,
														"id": 1356,
														"mutability": "mutable",
														"name": "minOut",
														"nameLocation": "5938:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "5930:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5930:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1363,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1357,
																	"name": "amountSold",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "5948:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1358,
																	"name": "px",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "5961:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5948:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1360,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5947:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5967:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "5947:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5930:41:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1364,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "5985:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Config_$970_memory_ptr",
																"typeString": "struct TPSLModule.Config memory"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:10:9",
														"memberName": "minOutBips",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 969,
														"src": "5985:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6001:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5985:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1379,
												"nodeType": "IfStatement",
												"src": "5981:88:9",
												"trueBody": {
													"id": 1378,
													"nodeType": "Block",
													"src": "6004:65:9",
													"statements": [
														{
															"expression": {
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1368,
																	"name": "minOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1356,
																	"src": "6018:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1372,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1369,
																					"name": "minOut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1356,
																					"src": "6028:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"expression": {
																						"id": 1370,
																						"name": "c",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1266,
																						"src": "6037:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Config_$970_memory_ptr",
																							"typeString": "struct TPSLModule.Config memory"
																						}
																					},
																					"id": 1371,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6039:10:9",
																					"memberName": "minOutBips",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 969,
																					"src": "6037:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"src": "6028:21:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1373,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6027:23:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6053:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "6027:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6018:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1377,
															"nodeType": "ExpressionStatement",
															"src": "6018:40:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1384,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "6157:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1387,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6172:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TPSLModule_$1453",
																		"typeString": "contract TPSLModule"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TPSLModule_$1453",
																		"typeString": "contract TPSLModule"
																	}
																],
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6164:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1385,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6164:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6164:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1389,
															"name": "amountSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "6179:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1381,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "6134:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1380,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "6127:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6127:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6140:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "6127:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6127:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1391,
												"nodeType": "ExpressionStatement",
												"src": "6127:63:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1398,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "6229:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV3Router2_$934",
																		"typeString": "contract IUniswapV3Router2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV3Router2_$934",
																		"typeString": "contract IUniswapV3Router2"
																	}
																],
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6221:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1396,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6221:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6221:15:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6238:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1393,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "6207:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1392,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "6200:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6200:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6213:7:9",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "6200:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6200:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1402,
												"nodeType": "ExpressionStatement",
												"src": "6200:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1409,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "6279:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV3Router2_$934",
																		"typeString": "contract IUniswapV3Router2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV3Router2_$934",
																		"typeString": "contract IUniswapV3Router2"
																	}
																],
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6271:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1407,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6271:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6271:15:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1411,
															"name": "amountSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "6288:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1404,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "6257:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1403,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "6250:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6250:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6263:7:9",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "6250:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6250:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "6250:49:9"
											},
											{
												"expression": {
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1414,
														"name": "amountReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "6355:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1419,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "6477:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1420,
																		"name": "quote",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "6509:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1421,
																			"name": "c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "6537:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Config_$970_memory_ptr",
																				"typeString": "struct TPSLModule.Config memory"
																			}
																		},
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6539:3:9",
																		"memberName": "fee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 961,
																		"src": "6537:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	},
																	{
																		"id": 1423,
																		"name": "vault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "6571:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1424,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1255,
																		"src": "6604:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1425,
																		"name": "amountSold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1260,
																		"src": "6640:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1426,
																		"name": "minOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "6686:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6729:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 1417,
																		"name": "IUniswapV3Router2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 934,
																		"src": "6409:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IUniswapV3Router2_$934_$",
																			"typeString": "type(contract IUniswapV3Router2)"
																		}
																	},
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6427:22:9",
																	"memberName": "ExactInputSingleParams",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 925,
																	"src": "6409:40:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$925_storage_ptr_$",
																		"typeString": "type(struct IUniswapV3Router2.ExactInputSingleParams storage pointer)"
																	}
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"nameLocations": [
																	"6468:7:9",
																	"6499:8:9",
																	"6532:3:9",
																	"6560:9:9",
																	"6594:8:9",
																	"6630:8:9",
																	"6668:16:9",
																	"6710:17:9"
																],
																"names": [
																	"tokenIn",
																	"tokenOut",
																	"fee",
																	"recipient",
																	"deadline",
																	"amountIn",
																	"amountOutMinimum",
																	"sqrtPriceLimitX96"
																],
																"nodeType": "FunctionCall",
																"src": "6409:336:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$925_memory_ptr",
																	"typeString": "struct IUniswapV3Router2.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$925_memory_ptr",
																	"typeString": "struct IUniswapV3Router2.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 1415,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "6372:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV3Router2_$934",
																	"typeString": "contract IUniswapV3Router2"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6379:16:9",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 933,
															"src": "6372:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$925_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct IUniswapV3Router2.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6372:383:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6355:400:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "6355:400:9"
											},
											{
												"expression": {
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6863:34:9",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1432,
																	"name": "configs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "6870:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Config_$970_storage_$_$_$",
																		"typeString": "mapping(address => mapping(address => mapping(address => struct TPSLModule.Config storage ref)))"
																	}
																},
																"id": 1434,
																"indexExpression": {
																	"id": 1433,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "6878:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6870:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Config_$970_storage_$_$",
																	"typeString": "mapping(address => mapping(address => struct TPSLModule.Config storage ref))"
																}
															},
															"id": 1436,
															"indexExpression": {
																"id": 1435,
																"name": "base",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1251,
																"src": "6885:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6870:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Config_$970_storage_$",
																"typeString": "mapping(address => struct TPSLModule.Config storage ref)"
															}
														},
														"id": 1438,
														"indexExpression": {
															"id": 1437,
															"name": "quote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "6891:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6870:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Config_$970_storage",
															"typeString": "struct TPSLModule.Config storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "6863:34:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1442,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "6922:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1443,
															"name": "base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "6929:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1444,
															"name": "quote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "6935:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1445,
															"name": "amountSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "6942:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1446,
															"name": "amountReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "6954:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1447,
															"name": "tp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "6970:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1448,
															"name": "sl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "6974:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1441,
														"name": "Executed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "6913:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bool,bool)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6913:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "EmitStatement",
												"src": "6908:69:9"
											}
										]
									},
									"functionSelector": "239aee06",
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1258,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1257,
												"name": "nonReentrant",
												"nameLocations": [
													"5168:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "5168:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5168:12:9"
										}
									],
									"name": "execute",
									"nameLocation": "5073:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "5089:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "5081:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5081:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "base",
												"nameLocation": "5104:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "5096:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5096:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "quote",
												"nameLocation": "5118:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "5110:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "5133:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "5125:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5125:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5080:62:9"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "amountSold",
												"nameLocation": "5206:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "5198:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5198:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "amountReceived",
												"nameLocation": "5226:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "5218:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5197:44:9"
									},
									"scope": 1453,
									"src": "5064:1920:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1454,
							"src": "1587:5399:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								983,
								987,
								1007,
								1015,
								1031
							]
						}
					],
					"src": "32:6955:9"
				},
				"id": 9
			}
		}
	}
}