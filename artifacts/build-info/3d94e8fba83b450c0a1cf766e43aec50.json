{
	"id": "3d94e8fba83b450c0a1cf766e43aec50",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"src/Contract Architecture/Core Infrastructure/UserVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/**\n * @title UserVault (cloneable)\n * @notice Minimal, secure per-user vault meant to be cloned via EIP-1167 (WalletManager).\n *         Initialize once via `initialize(owner_)`.\n * CA: 0xa3aE01BE8b0Ec12a8FB4c72eF2f57A137e0fD000\n * Security notes:\n *  - This contract is intentionally small and avoids full OpenZeppelin upgradeable patterns\n *    to keep clone bytecode minimal. It implements a simple initializer guard.\n *  - Owner controls funds; ActionExecutor should be whitelisted off-chain/onchain to call `executeCall`\n *    or Gnosis-style multisig flows should be used if you want shared control.\n */\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { SafeERC20 } from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/// Basic errors (cheaper than revert strings)\nerror AlreadyInitialized();\nerror NotOwner();\nerror ZeroAddress();\nerror TransferFailed();\nerror NotWhitelistedCaller();\nerror InvalidTarget();\n\ncontract UserVault {\n    using SafeERC20 for IERC20;\n\n    /// @notice Vault owner (the user)\n    address private _owner;\n\n    /// @notice Whether initialize has been called\n    bool private _initialized;\n\n    /// @notice Optional: an address allowed to call executeCall on behalf of the owner (e.g., ActionExecutor)\n    mapping(address => bool) public executorWhitelist;\n\n    /// ========== EVENTS ==========\n    event Initialized(address indexed owner);\n    event ETHReceived(address indexed from, uint256 amount);\n    event ERC20Deposited(address indexed token, address indexed from, uint256 amount);\n    event ETHWithdrawn(address indexed to, uint256 amount);\n    event ERC20Withdrawn(address indexed token, address indexed to, uint256 amount);\n    event ExecutorWhitelisted(address indexed executor, bool allowed);\n    event ExecutedCall(address indexed caller, address indexed target, uint256 value, bytes data, bytes result);\n\n    /// ========== MODIFIERS ==========\n    modifier onlyOwner() {\n        if (msg.sender != _owner) revert NotOwner();\n        _;\n    }\n\n    modifier onlyOwnerOrExecutor() {\n        if (msg.sender != _owner && !executorWhitelist[msg.sender]) revert NotOwner();\n        _;\n    }\n\n    /// ========== INITIALIZER ==========\n    /// @dev called by the clone right after creation\n    function initialize(address owner_) external {\n        if (_initialized) revert AlreadyInitialized();\n        if (owner_ == address(0)) revert ZeroAddress();\n\n        _owner = owner_;\n        _initialized = true;\n\n        emit Initialized(owner_);\n    }\n\n    /// ========== OWNER VIEW ==========\n    function owner() external view returns (address) {\n        return _owner;\n    }\n\n    /// ========== DEPOSITS ==========\n    /// Accept ETH\n    receive() external payable {\n        emit ETHReceived(msg.sender, msg.value);\n    }\n\n    /// Convenience deposit function (no-op besides event)\n    function depositETH() external payable {\n        emit ETHReceived(msg.sender, msg.value);\n    }\n\n    /// Called by user (or any address) that transferred ERC20 tokens to vault via `transfer`\n    /// Use only to emit an indexed event for offchain indexing systems.\n    function notifyERC20Deposit(address token, uint256 amount) external {\n        if (token == address(0)) revert ZeroAddress();\n        emit ERC20Deposited(token, msg.sender, amount);\n    }\n\n    /// ========== WITHDRAWALS ==========\n    /// Owner-only withdraw ETH\n    function withdrawETH(address payable to, uint256 amount) external onlyOwner {\n        if (to == address(0)) revert ZeroAddress();\n        (bool ok, ) = to.call{value: amount}(\"\");\n        if (!ok) revert TransferFailed();\n        emit ETHWithdrawn(to, amount);\n    }\n\n    /// Owner-only withdraw ERC20\n    function withdrawERC20(\n        address token,\n        address to,\n        uint256 amount\n    ) external onlyOwner {\n        if (token == address(0) || to == address(0)) revert ZeroAddress();\n        IERC20(token).safeTransfer(to, amount);\n        emit ERC20Withdrawn(token, to, amount);\n    }\n\n    /// Owner can approve a spender for ERC20\n    function approveERC20(\n        address token,\n        address spender,\n        uint256 amount\n    ) external onlyOwner {\n        if (token == address(0) || spender == address(0)) revert ZeroAddress();\n        IERC20(token).approve(spender, amount);\n        // No event for approve (ERC20 Approval emits its own)\n    }\n\n    /// ========== EXECUTOR WHITELIST (optional) ==========\n    /// Add/remove an offchain/executor address allowed to call executeCall\n    function setExecutorAllowed(address executor, bool allowed) external onlyOwner {\n        if (executor == address(0)) revert ZeroAddress();\n        executorWhitelist[executor] = allowed;\n        emit ExecutorWhitelisted(executor, allowed);\n    }\n\n    /// ========== GENERIC CALL (for ActionExecutor integration) ==========\n    /**\n     * @notice Execute arbitrary call from the vault.\n     * @dev    Must be called by owner or a whitelisted executor. Returns raw call return data.\n     *         Use with caution â€” giving an executor this ability is equivalent to giving control\n     *         of the vault's funds to that executor.\n     *\n     * @param target The destination contract / address to call.\n     * @param value  Amount of ETH to send with the call.\n     * @param data   Calldata to send.\n     * @return result The returned data from the call.\n     */\n    function executeCall(\n        address target,\n        uint256 value,\n        bytes calldata data\n    ) external onlyOwnerOrExecutor returns (bytes memory result) {\n        if (target == address(0)) revert InvalidTarget();\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool ok, bytes memory res) = target.call{value: value}(data);\n        if (!ok) {\n            // bubble revert reason if present\n            if (res.length > 0) {\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    revert(add(32, res), mload(res))\n                }\n            }\n            revert TransferFailed();\n        }\n\n        emit ExecutedCall(msg.sender, target, value, data, res);\n        return res;\n    }\n\n    /// ========== HELPERS ==========\n    /// Approve then call helper (useful for DEX routing patterns)\n    function approveAndCall(\n    address token,\n    address spender,\n    uint256 amount,\n    address target,\n    bytes calldata data\n) external onlyOwnerOrExecutor returns (bytes memory) {\n    IERC20(token).approve(spender, amount);\n    return this.executeCall(target, 0, data);\n}\n\n    /// ========== EMERGENCY ==========\n    /// Emergency withdraw all ETH and tokens to owner (owner-only)\n    function emergencyWithdrawERC20(address token) external onlyOwner {\n        uint256 bal = IERC20(token).balanceOf(address(this));\n        if (bal > 0) IERC20(token).safeTransfer(_owner, bal);\n        emit ERC20Withdrawn(token, _owner, bal);\n    }\n\n    function emergencyWithdrawETH() external onlyOwner {\n        uint256 bal = address(this).balance;\n        if (bal > 0) {\n            (bool ok, ) = payable(_owner).call{value: bal}(\"\");\n            if (!ok) revert TransferFailed();\n            emit ETHWithdrawn(_owner, bal);\n        }\n    }\n\n    /// ========== VIEW HELPERS ==========\n    function isInitialized() external view returns (bool) {\n        return _initialized;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206bfdc9ac7dcde7d0d9e24a3daef55fe1e4d0511b16864fa15835cba9402bd75464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212206bfdc9ac7dcde7d0d9e24a3daef55fe1e4d0511b16864fa15835cba9402bd75464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xFDC9AC7DCDE7D0D9E24A3DAE CREATE2 PUSH0 0xE1 0xE4 0xD0 MLOAD SHL AND DUP7 0x4F LOG1 PC CALLDATALOAD 0xCB 0xA9 BLOCKHASH 0x2B 0xD7 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:4:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea26469706673582212206bfdc9ac7dcde7d0d9e24a3daef55fe1e4d0511b16864fa15835cba9402bd75464736f6c634300081a0033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xFDC9AC7DCDE7D0D9E24A3DAE CREATE2 PUSH0 0xE1 0xE4 0xD0 MLOAD SHL AND DUP7 0x4F LOG1 PC CALLDATALOAD 0xCB 0xA9 BLOCKHASH 0x2B 0xD7 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:4:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "library_deploy_address"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206bfdc9ac7dcde7d0d9e24a3daef55fe1e4d0511b16864fa15835cba9402bd75464736f6c634300081a0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/Contract Architecture/Core Infrastructure/UserVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Contract Architecture/Core Infrastructure/UserVault.sol": {
				"UserVault": {
					"abi": [
						{
							"inputs": [],
							"name": "AlreadyInitialized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTarget",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Withdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ETHReceived",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ETHWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"name": "ExecutedCall",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "executor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "allowed",
									"type": "bool"
								}
							],
							"name": "ExecutorWhitelisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approveERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "emergencyWithdrawERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "executeCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "executorWhitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "notifyERC20Deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "executor",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "allowed",
									"type": "bool"
								}
							],
							"name": "setExecutorAllowed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"executeCall(address,uint256,bytes)": {
								"details": "Must be called by owner or a whitelisted executor. Returns raw call return data.         Use with caution â€” giving an executor this ability is equivalent to giving control         of the vault's funds to that executor.",
								"params": {
									"data": "Calldata to send.",
									"target": "The destination contract / address to call.",
									"value": "Amount of ETH to send with the call."
								},
								"returns": {
									"result": "The returned data from the call."
								}
							},
							"initialize(address)": {
								"details": "called by the clone right after creation"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_40, iszero(lt(calldatasize, 0x04)))\n    tag_41:\n      jumpi(tag_42, iszero(calldatasize))\n      0x00\n      dup1\n      revert\n    tag_42:\n      tag_44\n      tag_38\n      jump\t// in\n    tag_44:\n      stop\n    tag_40:\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x103657e7\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x392e53cd\n      eq\n      tag_47\n      jumpi\n      dup1\n      0x40c442de\n      eq\n      tag_49\n      jumpi\n      dup1\n      0x44004cc1\n      eq\n      tag_51\n      jumpi\n      dup1\n      0x4782f779\n      eq\n      tag_53\n      jumpi\n      dup1\n      0x54ba7696\n      eq\n      tag_55\n      jumpi\n      dup1\n      0x68fec4da\n      eq\n      tag_57\n      jumpi\n      dup1\n      0x84536017\n      eq\n      tag_59\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_61\n      jumpi\n      dup1\n      0x9e5d4c49\n      eq\n      tag_63\n      jumpi\n      dup1\n      0xa8e5e4aa\n      eq\n      tag_65\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_67\n      jumpi\n      dup1\n      0xf32f1864\n      eq\n      tag_69\n      jumpi\n      0xf6326fb3\n      sub\n      tag_41\n      jumpi\n      tag_24\n      jump\t// in\n    tag_69:\n      tag_23\n      jump\t// in\n    tag_67:\n      tag_22\n      jump\t// in\n    tag_65:\n      tag_21\n      jump\t// in\n    tag_63:\n      tag_20\n      jump\t// in\n    tag_61:\n      tag_19\n      jump\t// in\n    tag_59:\n      tag_17\n      jump\t// in\n    tag_57:\n      tag_16\n      jump\t// in\n    tag_55:\n      tag_14\n      jump\t// in\n    tag_53:\n      tag_13\n      jump\t// in\n    tag_51:\n      tag_12\n      jump\t// in\n    tag_49:\n      tag_10\n      jump\t// in\n    tag_47:\n      tag_9\n      jump\t// in\n    tag_45:\n      tag_8\n      jump\t// in\n    tag_2:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      sub\n      tag_73\n      jumpi\n      jump\t// out\n    tag_73:\n      0x00\n      dup1\n      revert\n    tag_5:\n      swap2\n      dup2\n      0x1f\n      dup5\n      add\n      slt\n      iszero\n      tag_73\n      jumpi\n      dup3\n      calldataload\n      swap2\n      0xffffffffffffffff\n      dup4\n      gt\n      tag_73\n      jumpi\n      0x20\n      dup4\n      dup2\n      dup7\n      add\n      swap6\n      add\n      add\n      gt\n      tag_73\n      jumpi\n      jump\t// out\n    tag_6:\n      dup1\n      mload\n      dup1\n      dup4\n      mstore\n      0x20\n      swap3\n      swap2\n      dup2\n      swap1\n      dup5\n      add\n      dup5\n      dup5\n      add\n      mcopy\n      0x00\n      dup3\n      dup3\n      add\n      dup5\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_7:\n      swap1\n      0x20\n      tag_81\n      swap3\n      dup2\n      dup2\n      mstore\n      add\n      swap1\n      tag_6\n      jump\t// in\n    tag_81:\n      swap1\n      jump\t// out\n    tag_8:\n      jumpi(tag_73, callvalue)\n      jumpi(tag_73, slt(add(not(0x03), calldatasize), 0xa0))\n      calldataload(0x04)\n      tag_86\n      dup2\n      tag_2\n      jump\t// in\n    tag_86:\n      calldataload(0x24)\n      swap1\n      tag_87\n      dup3\n      tag_2\n      jump\t// in\n    tag_87:\n      calldataload(0x44)\n      calldataload(0x64)\n      tag_89\n      dup2\n      tag_2\n      jump\t// in\n    tag_89:\n      calldataload(0x84)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_73\n      jumpi\n      tag_92\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_5\n      jump\t// in\n    tag_92:\n      swap5\n      swap1\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(0x00)\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2141:2151  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2141:2161  msg.sender != _owner */\n      eq\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2141:2195  msg.sender != _owner && !executorWhitelist[msg.sender] */\n      dup1\n      tag_93\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n    tag_94:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2137:2214  if (msg.sender != _owner && !executorWhitelist[msg.sender]) revert NotOwner() */\n      tag_95\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6506:6544  IERC20(token).approve(spender, amount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      swap1\n      swap3\n      and\n      0x04\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6506:6544  IERC20(token).approve(spender, amount) */\n      dup4\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      swap3\n      0x20\n      swap1\n      dup5\n      swap1\n      dup2\n      0x00\n      dup2\n      0x44\n      dup2\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6506:6544  IERC20(token).approve(spender, amount) */\n      sub\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6506:6544  IERC20(token).approve(spender, amount) */\n      gas\n      call\n      swap3\n      dup4\n      iszero\n      tag_103\n      jumpi\n      0x00\n      swap4\n      tag_100\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n    tag_101:\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6557:6590  this.executeCall(target, 0, data) */\n      tag_102\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mload(0x40)\n      swap5\n      dup6\n      swap4\n      dup5\n      swap4\n      shl(0xe0, 0x9e5d4c49)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6557:6590  this.executeCall(target, 0, data) */\n      dup6\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x04\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6557:6590  this.executeCall(target, 0, data) */\n      dup6\n      add\n      tag_33\n      jump\t// in\n    tag_102:\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6557:6561  this */\n      dup2\n      dup4\n      address\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6557:6590  this.executeCall(target, 0, data) */\n      gas\n      call\n      dup1\n      iszero\n      tag_103\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      tag_105\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6557:6590  this.executeCall(target, 0, data) */\n      swap2\n      0x00\n      swap2\n      tag_106\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n    tag_107:\n      pop\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_7\n      jump\t// in\n    tag_105:\n      sub\n      swap1\n      return\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6557:6590  this.executeCall(target, 0, data) */\n    tag_106:\n      tag_108\n      swap2\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup4\n      returndatacopy\n      tag_109\n      dup2\n      dup4\n      tag_26\n      jump\t// in\n    tag_109:\n      dup2\n      add\n      swap1\n      tag_31\n      jump\t// in\n    tag_108:\n      0x00\n      jump(tag_107)\n    tag_103:\n      tag_29\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6506:6544  IERC20(token).approve(spender, amount) */\n    tag_100:\n      tag_110\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6506:6544  IERC20(token).approve(spender, amount) */\n      returndatasize\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6506:6544  IERC20(token).approve(spender, amount) */\n      gt\n      tag_111\n      jumpi\n    tag_112:\n      tag_113\n      dup2\n      dup4\n      tag_26\n      jump\t// in\n    tag_113:\n      dup2\n      add\n      swap1\n      tag_27\n      jump\t// in\n    tag_110:\n      jump(tag_101)\n    tag_111:\n      pop\n      returndatasize\n      jump(tag_112)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2137:2214  if (msg.sender != _owner && !executorWhitelist[msg.sender]) revert NotOwner() */\n    tag_95:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2204:2214  NotOwner() */\n      mstore(0x00, shl(0xe0, 0x30cd7471))\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x04\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2204:2214  NotOwner() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2141:2195  msg.sender != _owner && !executorWhitelist[msg.sender] */\n    tag_93:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2141:2151  msg.sender */\n      pop\n      caller\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2166:2183  executorWhitelist */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x20\n      mstore\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2165:2195  !executorWhitelist[msg.sender] */\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2141:2195  msg.sender != _owner && !executorWhitelist[msg.sender] */\n      jump(tag_94)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n    tag_9:\n      jumpi(tag_73, callvalue)\n      jumpi(tag_73, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      and(shr(0xa0, sload(0x00)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_10:\n      jumpi(tag_73, callvalue)\n      jumpi(tag_73, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      tag_122\n      dup2\n      tag_2\n      jump\t// in\n    tag_122:\n      sload(0x00)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2033:2043  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2033:2053  msg.sender != _owner */\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2029:2072  if (msg.sender != _owner) revert NotOwner() */\n      tag_95\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6797:6835  IERC20(token).balanceOf(address(this)) */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6829:6833  this */\n      address\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x04\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6797:6835  IERC20(token).balanceOf(address(this)) */\n      dup3\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mstore\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n      0x20\n      dup4\n      0x24\n      dup2\n      dup6\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6797:6835  IERC20(token).balanceOf(address(this)) */\n      gas\n      staticcall\n      swap3\n      dup4\n      iszero\n      tag_103\n      jumpi\n      0x00\n      swap4\n      tag_128\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n    tag_129:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6849:6856  bal > 0 */\n      pop\n      dup3\n      dup1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6845:6897  if (bal > 0) IERC20(token).safeTransfer(_owner, bal) */\n      tag_130\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n    tag_131:\n      sload(0x00)\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup4\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6912:6946  ERC20Withdrawn(token, _owner, bal) */\n      0xbfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b1025362\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x20\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6912:6946  ERC20Withdrawn(token, _owner, bal) */\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      stop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6845:6897  if (bal > 0) IERC20(token).safeTransfer(_owner, bal) */\n    tag_130:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6893:6896  bal */\n      tag_135\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6893:6896  bal */\n      dup4\n      tag_39\n      jump\t// in\n    tag_135:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6845:6897  if (bal > 0) IERC20(token).safeTransfer(_owner, bal) */\n      0x00\n      dup3\n      jump(tag_131)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6797:6835  IERC20(token).balanceOf(address(this)) */\n    tag_128:\n      tag_136\n      swap2\n      swap4\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6797:6835  IERC20(token).balanceOf(address(this)) */\n      returndatasize\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6797:6835  IERC20(token).balanceOf(address(this)) */\n      gt\n      tag_137\n      jumpi\n    tag_138:\n      tag_139\n      dup2\n      dup4\n      tag_26\n      jump\t// in\n    tag_139:\n      dup2\n      add\n      swap1\n      tag_34\n      jump\t// in\n    tag_136:\n      swap2\n      0x00\n      jump(tag_129)\n    tag_137:\n      pop\n      returndatasize\n      jump(tag_138)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n    tag_11:\n      0x60\n      swap1\n      not(0x03)\n      add\n      slt\n      tag_73\n      jumpi\n      calldataload(0x04)\n      tag_142\n      dup2\n      tag_2\n      jump\t// in\n    tag_142:\n      swap1\n      calldataload(0x24)\n      tag_143\n      dup2\n      tag_2\n      jump\t// in\n    tag_143:\n      swap1\n      calldataload(0x44)\n      swap1\n      jump\t// out\n    tag_12:\n      jumpi(tag_73, callvalue)\n      tag_146\n      calldatasize\n      tag_11\n      jump\t// in\n    tag_146:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2047:2053  _owner */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      sload\n      swap1\n      swap3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2033:2043  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2033:2053  msg.sender != _owner */\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2029:2072  if (msg.sender != _owner) revert NotOwner() */\n      tag_95\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      and\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3894:3913  token == address(0) */\n      dup2\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3894:3933  token == address(0) || to == address(0) */\n      dup1\n      iszero\n      tag_149\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n    tag_150:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3890:3955  if (token == address(0) || to == address(0)) revert ZeroAddress() */\n      tag_151\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3996:4002  amount */\n      dup2\n      tag_153\n      dup6\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4018:4051  ERC20Withdrawn(token, to, amount) */\n      0xbfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b1025362\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3996:4002  amount */\n      swap5\n      dup7\n      tag_39\n      jump\t// in\n    tag_153:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mload(0x40)\n      swap5\n      dup6\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap4\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4018:4051  ERC20Withdrawn(token, to, amount) */\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      stop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3890:3955  if (token == address(0) || to == address(0)) revert ZeroAddress() */\n    tag_151:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3942:3955  ZeroAddress() */\n      shl(0xe0, 0xd92e233d)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2047:2053  _owner */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3942:3955  ZeroAddress() */\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x04\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2047:2053  _owner */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3942:3955  ZeroAddress() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3894:3933  token == address(0) || to == address(0) */\n    tag_149:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      dup2\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3917:3933  to == address(0) */\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3894:3933  token == address(0) || to == address(0) */\n      jump(tag_150)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n    tag_13:\n      jumpi(tag_73, callvalue)\n      jumpi(tag_73, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      tag_158\n      dup2\n      tag_2\n      jump\t// in\n    tag_158:\n      sload(0x00)\n      calldataload(0x24)\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2033:2043  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2033:2053  msg.sender != _owner */\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2029:2072  if (msg.sender != _owner) revert NotOwner() */\n      tag_95\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      and\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3549:3565  to == address(0) */\n      dup2\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3545:3587  if (to == address(0)) revert ZeroAddress() */\n      tag_151\n      jumpi\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3611:3637  to.call{value: amount}(\"\") */\n      dup1\n      dup1\n      dup1\n      dup5\n      dup7\n      gas\n      call\n      tag_164\n      tag_36\n      jump\t// in\n    tag_164:\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3651:3654  !ok */\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3647:3679  if (!ok) revert TransferFailed() */\n      tag_165\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3694:3718  ETHWithdrawn(to, amount) */\n      0x94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      swap2\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3694:3718  ETHWithdrawn(to, amount) */\n      log2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      stop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3647:3679  if (!ok) revert TransferFailed() */\n    tag_165:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3663:3679  TransferFailed() */\n      mstore(0x00, shl(0xe3, 0x12171d83))\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x04\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3663:3679  TransferFailed() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n    tag_14:\n      jumpi(tag_73, callvalue)\n      jumpi(tag_73, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      tag_171\n      dup2\n      tag_2\n      jump\t// in\n    tag_171:\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1341:1390  mapping(address => bool) public executorWhitelist */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_15:\n      dup1\n      iszero\n      iszero\n      sub\n      tag_73\n      jumpi\n      jump\t// out\n    tag_16:\n      jumpi(tag_73, callvalue)\n      jumpi(tag_73, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      tag_178\n      dup2\n      tag_2\n      jump\t// in\n    tag_178:\n      calldataload(0x24)\n      swap1\n      tag_179\n      dup3\n      tag_15\n      jump\t// in\n    tag_179:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2033:2043  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2033:2053  msg.sender != _owner */\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2029:2072  if (msg.sender != _owner) revert NotOwner() */\n      tag_95\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      and\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4662:4684  executor == address(0) */\n      dup2\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4658:4706  if (executor == address(0)) revert ZeroAddress() */\n      tag_151\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4768:4806  ExecutorWhitelisted(executor, allowed) */\n      0x19f4c310cf148369e5605e8f3538cee4d3495da0612c9a45c0b89105ed6fee4d\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      swap2\n      dup4\n      0x00\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4716:4733  executorWhitelist */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      dup3\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      iszero\n      iszero\n      swap1\n      not(0xff)\n      dup2\n      sload\n      and\n      0xff\n      dup4\n      and\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4768:4806  ExecutorWhitelisted(executor, allowed) */\n      log2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      stop\n    tag_17:\n      jumpi(tag_73, callvalue)\n      jumpi(tag_73, slt(add(not(0x03), calldatasize), 0x00))\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2033:2043  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2033:2053  msg.sender != _owner */\n      dup2\n      swap1\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2029:2072  if (msg.sender != _owner) revert NotOwner() */\n      tag_95\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7034:7055  address(this).balance */\n      selfbalance\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7069:7076  bal > 0 */\n      swap1\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7065:7243  if (bal > 0) {... */\n      tag_190\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      stop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7065:7243  if (bal > 0) {... */\n    tag_190:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7106:7142  payable(_owner).call{value: bal}(\"\") */\n      dup1\n      dup1\n      dup5\n      dup2\n      swap5\n      gas\n      call\n      tag_192\n      tag_36\n      jump\t// in\n    tag_192:\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7160:7163  !ok */\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7156:7188  if (!ok) revert TransferFailed() */\n      tag_165\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      sload(0x00)\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7207:7232  ETHWithdrawn(_owner, bal) */\n      0x94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x20\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":7207:7232  ETHWithdrawn(_owner, bal) */\n      log2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      stop\n    tag_19:\n      jumpi(tag_73, callvalue)\n      jumpi(tag_73, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x00)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_20:\n      jumpi(tag_73, callvalue)\n      jumpi(tag_73, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x04)\n      tag_204\n      dup2\n      tag_2\n      jump\t// in\n    tag_204:\n      calldataload(0x24)\n      calldataload(0x44)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_73\n      jumpi\n      tag_208\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_5\n      jump\t// in\n    tag_208:\n      swap3\n      swap1\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(0x00)\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2141:2151  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2141:2161  msg.sender != _owner */\n      eq\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2141:2195  msg.sender != _owner && !executorWhitelist[msg.sender] */\n      dup1\n      tag_209\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n    tag_210:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2137:2214  if (msg.sender != _owner && !executorWhitelist[msg.sender]) revert NotOwner() */\n      tag_95\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      dup3\n      and\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5615:5635  target == address(0) */\n      dup3\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5611:5659  if (target == address(0)) revert InvalidTarget() */\n      tag_213\n      jumpi\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      dup1\n      swap2\n      mload(0x40)\n      dup8\n      dup8\n      dup3\n      calldatacopy\n      dup5\n      dup2\n      dup10\n      dup2\n      add\n      dup6\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5759:5790  target.call{value: value}(data) */\n      sub\n      swap3\n      gas\n      call\n      swap3\n      tag_215\n      tag_36\n      jump\t// in\n    tag_215:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5804:5807  !ok */\n      swap4\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5800:6114  if (!ok) {... */\n      tag_216\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      tag_105\n      swap5\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6129:6179  ExecutedCall(msg.sender, target, value, data, res) */\n      0x335a1fecd5558554165c05171954925d0d97911ad1d259ef6bb18eb2c07a58aa\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6129:6179  ExecutedCall(msg.sender, target, value, data, res) */\n      tag_219\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      dup7\n      mload(0x40)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2141:2151  msg.sender */\n      swap4\n      dup5\n      swap4\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6129:6179  ExecutedCall(msg.sender, target, value, data, res) */\n      swap8\n      dup6\n      tag_37\n      jump\t// in\n    tag_219:\n      sub\n      swap1\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_7\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5800:6114  if (!ok) {... */\n    tag_216:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      dup4\n      mload\n      dup5\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5870:6067  if (res.length > 0) {... */\n      tag_220\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3663:3679  TransferFailed() */\n      shl(0xe3, 0x12171d83)\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6087:6103  TransferFailed() */\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x04\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":6087:6103  TransferFailed() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5870:6067  if (res.length > 0) {... */\n    tag_220:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5972:6053  assembly {... */\n      add\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5611:5659  if (target == address(0)) revert InvalidTarget() */\n    tag_213:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5644:5659  InvalidTarget() */\n      mstore(0x00, shl(0xe1, 0x416aebb5))\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x04\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":5644:5659  InvalidTarget() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2141:2195  msg.sender != _owner && !executorWhitelist[msg.sender] */\n    tag_209:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2141:2151  msg.sender */\n      pop\n      caller\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2166:2183  executorWhitelist */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x20\n      mstore\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2165:2195  !executorWhitelist[msg.sender] */\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2141:2195  msg.sender != _owner && !executorWhitelist[msg.sender] */\n      jump(tag_210)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n    tag_21:\n      jumpi(tag_73, callvalue)\n      tag_224\n      calldatasize\n      tag_11\n      jump\t// in\n    tag_224:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2047:2053  _owner */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      sload\n      swap1\n      swap3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2033:2043  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2033:2053  msg.sender != _owner */\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2029:2072  if (msg.sender != _owner) revert NotOwner() */\n      tag_95\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      and\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4243:4262  token == address(0) */\n      dup3\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4243:4287  token == address(0) || spender == address(0) */\n      dup1\n      iszero\n      tag_227\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n    tag_228:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4239:4309  if (token == address(0) || spender == address(0)) revert ZeroAddress() */\n      tag_151\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4319:4357  IERC20(token).approve(spender, amount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      swap3\n      swap1\n      swap3\n      and\n      0x04\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4319:4357  IERC20(token).approve(spender, amount) */\n      dup4\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4319:4357  IERC20(token).approve(spender, amount) */\n      0x20\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      dup3\n      swap1\n      0x44\n      swap1\n      dup3\n      swap1\n      0x00\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4319:4357  IERC20(token).approve(spender, amount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_103\n      jumpi\n      tag_234\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      stop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4319:4357  IERC20(token).approve(spender, amount) */\n    tag_234:\n      tag_44\n      swap1\n      0x20\n      jumpi(tag_111, gt(0x20, returndatasize))\n      tag_113\n      dup2\n      dup4\n      tag_26\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4243:4287  token == address(0) || spender == address(0) */\n    tag_227:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      dup3\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4266:4287  spender == address(0) */\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":4243:4287  token == address(0) || spender == address(0) */\n      jump(tag_228)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n    tag_22:\n      jumpi(tag_73, callvalue)\n      jumpi(tag_73, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      tag_244\n      dup2\n      tag_2\n      jump\t// in\n    tag_244:\n      sload(0x00)\n      swap1\n      0xff\n      dup3\n      0xa0\n      shr\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2389:2434  if (_initialized) revert AlreadyInitialized() */\n      tag_245\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      and\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2448:2468  owner_ == address(0) */\n      dup2\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2444:2490  if (owner_ == address(0)) revert ZeroAddress() */\n      tag_151\n      jumpi\n      not(sub(shl(0xa8, 0x01), 0x01))\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      and\n      dup2\n      or\n      shl(0xa0, 0x01)\n      or\n      0x00\n      swap1\n      dup2\n      sstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2561:2580  Initialized(owner_) */\n      0x908408e307fc569b417f6cbec5d5a06f44a0a505ac0479b47d421a4b2fd6a1e6\n      swap1\n      dup1\n      log2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      stop\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2389:2434  if (_initialized) revert AlreadyInitialized() */\n    tag_245:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2414:2434  AlreadyInitialized() */\n      mstore(0x00, shl(0xe4, 0xdc149f))\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x04\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2414:2434  AlreadyInitialized() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n    tag_23:\n      jumpi(tag_73, callvalue)\n      jumpi(tag_73, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      tag_253\n      dup2\n      tag_2\n      jump\t// in\n    tag_253:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3275:3294  token == address(0) */\n      dup1\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3271:3316  if (token == address(0)) revert ZeroAddress() */\n      tag_151\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3331:3372  ERC20Deposited(token, msg.sender, amount) */\n      0xe33e9822e3317b004d587136bab2627ea1ecfbba4eb79abddd0a56cfdd09c0e1\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3353:3363  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3331:3372  ERC20Deposited(token, msg.sender, amount) */\n      swap4\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      stop\n    tag_24:\n      jumpi(tag_73, slt(add(not(0x03), calldatasize), 0x00))\n      tag_44\n      tag_38\n      jump\t// in\n    tag_25:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_26:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_259\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_259:\n      tag_25\n      jump\t// in\n    tag_27:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_73\n      jumpi\n      mload\n      tag_81\n      dup2\n      tag_15\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_30:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_259\n      jumpi\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_31:\n      0x20\n      dup2\n      dup4\n      sub\n      slt\n      tag_73\n      jumpi\n      dup1\n      mload\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_73\n      jumpi\n      add\n      dup2\n      0x1f\n      dup3\n      add\n      slt\n      iszero\n      tag_73\n      jumpi\n      dup1\n      mload\n      swap1\n      tag_272\n      dup3\n      tag_30\n      jump\t// in\n    tag_272:\n      swap3\n      tag_273\n      mload(0x40)\n      swap5\n      dup6\n      tag_26\n      jump\t// in\n    tag_273:\n      dup3\n      dup5\n      mstore\n      0x20\n      dup4\n      dup4\n      add\n      add\n      gt\n      tag_73\n      jumpi\n      dup2\n      0x00\n      swap3\n      0x20\n      dup1\n      swap4\n      add\n      dup4\n      dup7\n      add\n      mcopy\n      dup4\n      add\n      add\n      mstore\n      swap1\n      jump\t// out\n    tag_32:\n      swap1\n      dup1\n      0x20\n      swap4\n      swap3\n      dup2\n      dup5\n      mstore\n      dup5\n      dup5\n      add\n      calldatacopy\n      0x00\n      dup3\n      dup3\n      add\n      dup5\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n      0x60\n      0x40\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      tag_81\n      swap4\n      swap2\n      add\n      swap2\n      tag_32\n      jump\t// in\n    tag_34:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_73\n      jumpi\n      mload\n      swap1\n      jump\t// out\n    tag_36:\n      jumpi(tag_279, iszero(returndatasize))\n      returndatasize\n      swap1\n      tag_281\n      dup3\n      tag_30\n      jump\t// in\n    tag_281:\n      swap2\n      tag_282\n      mload(0x40)\n      swap4\n      dup5\n      tag_26\n      jump\t// in\n    tag_282:\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump\t// out\n    tag_279:\n      0x60\n      swap1\n      jump\t// out\n    tag_37:\n      swap3\n      swap2\n      tag_81\n      swap5\n      swap3\n      tag_285\n      swap3\n      dup6\n      mstore\n      0x60\n      0x20\n      dup7\n      add\n      mstore\n      0x60\n      dup6\n      add\n      swap2\n      tag_32\n      jump\t// in\n    tag_285:\n      swap2\n      0x40\n      dup2\n      dup5\n      sub\n      swap2\n      add\n      mstore\n      tag_6\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2925:3020  function depositETH() external payable {... */\n    tag_38:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mload(0x40)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":3003:3012  msg.value */\n      callvalue\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2979:3013  ETHReceived(msg.sender, msg.value) */\n      0xbfe611b001dfcd411432f7bf0d79b82b4b2ee81511edac123a3403c357fb972a\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2991:3001  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2979:3013  ETHReceived(msg.sender, msg.value) */\n      swap3\n      log2\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":2925:3020  function depositETH() external payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_39:\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      swap5\n      swap1\n      swap5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      swap4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      swap1\n      swap3\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      tag_287\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      0x64\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      tag_26\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      swap1\n      dup3\n      dup6\n      gas\n      call\n      iszero\n      tag_29\n      jumpi\n      mload(0x00)\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      tag_290\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_293:\n      shl(0xe0, 0x5274afe7)\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n        /* \"src/Contract Architecture/Core Infrastructure/UserVault.sol\":1021:7390  contract UserVault {... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_292)\n\n    auxdata: 0xa2646970667358221220d58af94963049595cc8efedb194706c0886fd90349d12354461a450a7a544e6564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601557610c25908161001a8239f35b5f80fdfe60806040526004361015610022575b3615610018575f80fd5b610020610b32565b005b5f3560e01c8063103657e714610101578063392e53cd146100fc57806340c442de146100f757806344004cc1146100f25780634782f779146100ed57806354ba7696146100e857806368fec4da146100e357806384536017146100de5780638da5cb5b146100d95780639e5d4c49146100d4578063a8e5e4aa146100cf578063c4d66de8146100ca578063f32f1864146100c55763f6326fb30361000e57610993565b610935565b6108b0565b610810565b6106f7565b6106d0565b610654565b6105c0565b610576565b6104e1565b610446565b610323565b6102ff565b610181565b6001600160a01b0381160361011757565b5f80fd5b9181601f840112156101175782359167ffffffffffffffff8311610117576020838186019501011161011757565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90602061017e928181520190610149565b90565b346101175760a03660031901126101175760043561019e81610106565b602435906101ab82610106565b6044356064356101ba81610106565b60843567ffffffffffffffff8111610117576101da90369060040161011b565b94909260018060a01b035f5416331415806102e8575b6102d95760405163095ea7b360e01b81526001600160a01b0390921660048301526024820152926020908490815f816044810103926001600160a01b03165af19283156102a7575f936102ac575b5061025d6040519485938493639e5d4c4960e01b855260048501610aa0565b038183305af180156102a757610281915f91610285575b506040519182918261016d565b0390f35b6102a191503d805f833e61029981836109ba565b810190610a1d565b5f610274565b6109f6565b6102cd9060203d6020116102d2575b6102c581836109ba565b8101906109e1565b61023e565b503d6102bb565b6330cd747160e01b5f5260045ffd5b50335f52600160205260ff60405f205416156101f0565b34610117575f36600319011261011757602060ff5f5460a01c166040519015158152f35b346101175760203660031901126101175760043561034081610106565b5f54906001600160a01b03821633036102d9576040516370a0823160e01b8152306004820152916001600160a01b039190911690602083602481855afa9283156102a7575f936103e9575b5082806103cf575b5f546040519182526001600160a01b03169083907fbfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b102536290602090a3005b6103e2916001600160a01b031683610b60565b5f82610393565b61040c91935060203d602011610413575b61040481836109ba565b810190610ac8565b915f61038b565b503d6103fa565b60609060031901126101175760043561043281610106565b9060243561043f81610106565b9060443590565b34610117576104543661041a565b5f549092906001600160a01b031633036102d9576001600160a01b031690811580156104d0575b6104c1576020816104ae857fbfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b10253629486610b60565b6040519485526001600160a01b031693a3005b63d92e233d60e01b5f5260045ffd5b506001600160a01b0381161561047b565b34610117576040366003190112610117576004356104fe81610106565b5f5460243591906001600160a01b031633036102d9576001600160a01b03169081156104c1575f80808084865af1610534610ad7565b50156105675760207f94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c91604051908152a2005b6312171d8360e31b5f5260045ffd5b346101175760203660031901126101175760043561059381610106565b60018060a01b03165f526001602052602060ff60405f2054166040519015158152f35b8015150361011757565b34610117576040366003190112610117576004356105dd81610106565b602435906105ea826105b6565b5f546001600160a01b031633036102d9576001600160a01b03169081156104c15760207f19f4c310cf148369e5605e8f3538cee4d3495da0612c9a45c0b89105ed6fee4d91835f526001825260405f209015159060ff1981541660ff8316179055604051908152a2005b34610117575f366003190112610117575f546001600160a01b0316338190036102d95747908161068057005b5f80808481945af1610690610ad7565b5015610567575f546040519182526001600160a01b0316907f94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c90602090a2005b34610117575f366003190112610117575f546040516001600160a01b039091168152602090f35b346101175760603660031901126101175760043561071481610106565b60243560443567ffffffffffffffff81116101175761073790369060040161011b565b92909160018060a01b035f5416331415806107f9575b6102d9576001600160a01b0382169182156107ea575f809160405187878237848189810185815203925af192610781610ad7565b93156107ce57610281947f335a1fecd5558554165c05171954925d0d97911ad1d259ef6bb18eb2c07a58aa916107bf86604051938493339785610b06565b0390a36040519182918261016d565b835184816107e5576312171d8360e31b5f5260045ffd5b602001fd5b63416aebb560e11b5f5260045ffd5b50335f52600160205260ff60405f2054161561074d565b346101175761081e3661041a565b5f549092906001600160a01b031633036102d9576001600160a01b0316918215801561089f575b6104c15760405163095ea7b360e01b81526001600160a01b03929092166004830152602482015290602090829060449082905f905af180156102a75761088757005b6100209060203d6020116102d2576102c581836109ba565b506001600160a01b03821615610845565b34610117576020366003190112610117576004356108cd81610106565b5f549060ff8260a01c16610927576001600160a01b03169081156104c1576001600160a81b0319168117600160a01b175f9081557f908408e307fc569b417f6cbec5d5a06f44a0a505ac0479b47d421a4b2fd6a1e69080a2005b62dc149f60e41b5f5260045ffd5b346101175760403660031901126101175760043561095281610106565b602435906001600160a01b031680156104c1576040519182527fe33e9822e3317b004d587136bab2627ea1ecfbba4eb79abddd0a56cfdd09c0e160203393a3005b5f36600319011261011757610020610b32565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff8211176109dc57604052565b6109a6565b90816020910312610117575161017e816105b6565b6040513d5f823e3d90fd5b67ffffffffffffffff81116109dc57601f01601f191660200190565b6020818303126101175780519067ffffffffffffffff8211610117570181601f8201121561011757805190610a5182610a01565b92610a5f60405194856109ba565b8284526020838301011161011757815f9260208093018386015e8301015290565b908060209392818452848401375f828201840152601f01601f1916010190565b6001600160a01b0390911681525f602082015260606040820181905261017e93910191610a80565b90816020910312610117575190565b3d15610b01573d90610ae882610a01565b91610af660405193846109ba565b82523d5f602084013e565b606090565b929161017e9492610b24928552606060208601526060850191610a80565b916040818403910152610149565b6040513481527fbfe611b001dfcd411432f7bf0d79b82b4b2ee81511edac123a3403c357fb972a60203392a2565b60405163a9059cbb60e01b60208083019182526001600160a01b0394909416602483015260448083019590955293815290925f91610b9f6064826109ba565b519082855af1156109f6575f513d610be657506001600160a01b0381163b155b610bc65750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415610bbf56fea2646970667358221220d58af94963049595cc8efedb194706c0886fd90349d12354461a450a7a544e6564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0xC25 SWAP1 DUP2 PUSH2 0x1A DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x22 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x18 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x20 PUSH2 0xB32 JUMP JUMPDEST STOP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x103657E7 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x40C442DE EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x44004CC1 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x4782F779 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x54BA7696 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x68FEC4DA EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x84536017 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xA8E5E4AA EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xF32F1864 EQ PUSH2 0xC5 JUMPI PUSH4 0xF6326FB3 SUB PUSH2 0xE JUMPI PUSH2 0x993 JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x117 JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x117 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x117 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x117 JUMPI JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x17E SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x149 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x19E DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1AB DUP3 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH2 0x1BA DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x117 JUMPI PUSH2 0x1DA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11B JUMP JUMPDEST SWAP5 SWAP1 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND CALLER EQ ISZERO DUP1 PUSH2 0x2E8 JUMPI JUMPDEST PUSH2 0x2D9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP3 PUSH1 0x20 SWAP1 DUP5 SWAP1 DUP2 PUSH0 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x2A7 JUMPI PUSH0 SWAP4 PUSH2 0x2AC JUMPI JUMPDEST POP PUSH2 0x25D PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0x9E5D4C49 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0xAA0 JUMP JUMPDEST SUB DUP2 DUP4 ADDRESS GAS CALL DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH2 0x281 SWAP2 PUSH0 SWAP2 PUSH2 0x285 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x16D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x299 DUP2 DUP4 PUSH2 0x9BA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA1D JUMP JUMPDEST PUSH0 PUSH2 0x274 JUMP JUMPDEST PUSH2 0x9F6 JUMP JUMPDEST PUSH2 0x2CD SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2D2 JUMPI JUMPDEST PUSH2 0x2C5 DUP2 DUP4 PUSH2 0x9BA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x23E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2BB JUMP JUMPDEST PUSH4 0x30CD7471 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1F0 JUMP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH0 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x340 DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH0 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER SUB PUSH2 0x2D9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A7 JUMPI PUSH0 SWAP4 PUSH2 0x3E9 JUMPI JUMPDEST POP DUP3 DUP1 PUSH2 0x3CF JUMPI JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 SWAP1 PUSH32 0xBFED55BDCD242E3DD0F60DDD7D1E87C67F61C34CD9527B3E6455D841B1025362 SWAP1 PUSH1 0x20 SWAP1 LOG3 STOP JUMPDEST PUSH2 0x3E2 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xB60 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x393 JUMP JUMPDEST PUSH2 0x40C SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x413 JUMPI JUMPDEST PUSH2 0x404 DUP2 DUP4 PUSH2 0x9BA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xAC8 JUMP JUMPDEST SWAP2 PUSH0 PUSH2 0x38B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x432 DUP2 PUSH2 0x106 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH2 0x43F DUP2 PUSH2 0x106 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH2 0x454 CALLDATASIZE PUSH2 0x41A JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2D9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO DUP1 ISZERO PUSH2 0x4D0 JUMPI JUMPDEST PUSH2 0x4C1 JUMPI PUSH1 0x20 DUP2 PUSH2 0x4AE DUP6 PUSH32 0xBFED55BDCD242E3DD0F60DDD7D1E87C67F61C34CD9527B3E6455D841B1025362 SWAP5 DUP7 PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 LOG3 STOP JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x47B JUMP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x4FE DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2D9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x4C1 JUMPI PUSH0 DUP1 DUP1 DUP1 DUP5 DUP7 GAS CALL PUSH2 0x534 PUSH2 0xAD7 JUMP JUMPDEST POP ISZERO PUSH2 0x567 JUMPI PUSH1 0x20 PUSH32 0x94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C SWAP2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH4 0x12171D83 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x593 DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x117 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x5DD DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x5EA DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2D9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x20 PUSH32 0x19F4C310CF148369E5605E8F3538CEE4D3495DA0612C9A45C0B89105ED6FEE4D SWAP2 DUP4 PUSH0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 ISZERO ISZERO SWAP1 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x2D9 JUMPI SELFBALANCE SWAP1 DUP2 PUSH2 0x680 JUMPI STOP JUMPDEST PUSH0 DUP1 DUP1 DUP5 DUP2 SWAP5 GAS CALL PUSH2 0x690 PUSH2 0xAD7 JUMP JUMPDEST POP ISZERO PUSH2 0x567 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C SWAP1 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x714 DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x117 JUMPI PUSH2 0x737 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11B JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND CALLER EQ ISZERO DUP1 PUSH2 0x7F9 JUMPI JUMPDEST PUSH2 0x2D9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 DUP3 ISZERO PUSH2 0x7EA JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x40 MLOAD DUP8 DUP8 DUP3 CALLDATACOPY DUP5 DUP2 DUP10 DUP2 ADD DUP6 DUP2 MSTORE SUB SWAP3 GAS CALL SWAP3 PUSH2 0x781 PUSH2 0xAD7 JUMP JUMPDEST SWAP4 ISZERO PUSH2 0x7CE JUMPI PUSH2 0x281 SWAP5 PUSH32 0x335A1FECD5558554165C05171954925D0D97911AD1D259EF6BB18EB2C07A58AA SWAP2 PUSH2 0x7BF DUP7 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 CALLER SWAP8 DUP6 PUSH2 0xB06 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x16D JUMP JUMPDEST DUP4 MLOAD DUP5 DUP2 PUSH2 0x7E5 JUMPI PUSH4 0x12171D83 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x416AEBB5 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x74D JUMP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH2 0x81E CALLDATASIZE PUSH2 0x41A JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2D9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO DUP1 ISZERO PUSH2 0x89F JUMPI JUMPDEST PUSH2 0x4C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH2 0x887 JUMPI STOP JUMPDEST PUSH2 0x20 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2D2 JUMPI PUSH2 0x2C5 DUP2 DUP4 PUSH2 0x9BA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x845 JUMP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x8CD DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0xA0 SHR AND PUSH2 0x927 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND DUP2 OR PUSH1 0x1 PUSH1 0xA0 SHL OR PUSH0 SWAP1 DUP2 SSTORE PUSH32 0x908408E307FC569B417F6CBEC5D5A06F44A0A505AC0479B47D421A4B2FD6A1E6 SWAP1 DUP1 LOG2 STOP JUMPDEST PUSH3 0xDC149F PUSH1 0xE4 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x952 DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xE33E9822E3317B004D587136BAB2627EA1ECFBBA4EB79ABDDD0A56CFDD09C0E1 PUSH1 0x20 CALLER SWAP4 LOG3 STOP JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH2 0x20 PUSH2 0xB32 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9DC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x117 JUMPI MLOAD PUSH2 0x17E DUP2 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x9DC JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x117 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x117 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x117 JUMPI DUP1 MLOAD SWAP1 PUSH2 0xA51 DUP3 PUSH2 0xA01 JUMP JUMPDEST SWAP3 PUSH2 0xA5F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x9BA JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x117 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD MCOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x17E SWAP4 SWAP2 ADD SWAP2 PUSH2 0xA80 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x117 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xB01 JUMPI RETURNDATASIZE SWAP1 PUSH2 0xAE8 DUP3 PUSH2 0xA01 JUMP JUMPDEST SWAP2 PUSH2 0xAF6 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x9BA JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0x17E SWAP5 SWAP3 PUSH2 0xB24 SWAP3 DUP6 MSTORE PUSH1 0x60 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP2 PUSH2 0xA80 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0xBFE611B001DFCD411432F7BF0D79B82B4B2EE81511EDAC123A3403C357FB972A PUSH1 0x20 CALLER SWAP3 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP2 MSTORE SWAP1 SWAP3 PUSH0 SWAP2 PUSH2 0xB9F PUSH1 0x64 DUP3 PUSH2 0x9BA JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x9F6 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0xBE6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0xBC6 JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xBBF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 DUP11 0xF9 BLOBHASH PUSH4 0x49595CC DUP15 INVALID 0xDB NOT SELFBALANCE MOD 0xC0 DUP9 PUSH16 0xD90349D12354461A450A7A544E656473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "1021:6369:6:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_addresst_addresst_uint256": {
									"entryPoint": 1050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 2529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_bytes_fromMemory": {
									"entryPoint": 2589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_uint256_5271": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_uint256_fromMemory": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address_rational_by_bytes_calldata": {
									"entryPoint": 2720,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes_calldata": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_bytes_memory_ptr": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint256_bytes_calldata_bytes": {
									"entryPoint": 2822,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"external_fun_approveAndCall": {
									"entryPoint": 385,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_approveERC20": {
									"entryPoint": 2064,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_depositETH": {
									"entryPoint": 2451,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_emergencyWithdrawERC20": {
									"entryPoint": 803,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_emergencyWithdrawETH": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_executeCall": {
									"entryPoint": 1783,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_executorWhitelist": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_initialize": {
									"entryPoint": 2224,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_isInitialized": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_notifyERC20Deposit": {
									"entryPoint": 2357,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_owner": {
									"entryPoint": 1744,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setExecutorAllowed": {
									"entryPoint": 1472,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_withdrawERC20": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_withdrawETH": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"extract_returndata": {
									"entryPoint": 2775,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_depositETH": {
									"entryPoint": 2866,
									"id": 826,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_safeTransfer": {
									"entryPoint": 2912,
									"id": 212,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_forward": {
									"entryPoint": 2550,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361015610022575b3615610018575f80fd5b610020610b32565b005b5f3560e01c8063103657e714610101578063392e53cd146100fc57806340c442de146100f757806344004cc1146100f25780634782f779146100ed57806354ba7696146100e857806368fec4da146100e357806384536017146100de5780638da5cb5b146100d95780639e5d4c49146100d4578063a8e5e4aa146100cf578063c4d66de8146100ca578063f32f1864146100c55763f6326fb30361000e57610993565b610935565b6108b0565b610810565b6106f7565b6106d0565b610654565b6105c0565b610576565b6104e1565b610446565b610323565b6102ff565b610181565b6001600160a01b0381160361011757565b5f80fd5b9181601f840112156101175782359167ffffffffffffffff8311610117576020838186019501011161011757565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90602061017e928181520190610149565b90565b346101175760a03660031901126101175760043561019e81610106565b602435906101ab82610106565b6044356064356101ba81610106565b60843567ffffffffffffffff8111610117576101da90369060040161011b565b94909260018060a01b035f5416331415806102e8575b6102d95760405163095ea7b360e01b81526001600160a01b0390921660048301526024820152926020908490815f816044810103926001600160a01b03165af19283156102a7575f936102ac575b5061025d6040519485938493639e5d4c4960e01b855260048501610aa0565b038183305af180156102a757610281915f91610285575b506040519182918261016d565b0390f35b6102a191503d805f833e61029981836109ba565b810190610a1d565b5f610274565b6109f6565b6102cd9060203d6020116102d2575b6102c581836109ba565b8101906109e1565b61023e565b503d6102bb565b6330cd747160e01b5f5260045ffd5b50335f52600160205260ff60405f205416156101f0565b34610117575f36600319011261011757602060ff5f5460a01c166040519015158152f35b346101175760203660031901126101175760043561034081610106565b5f54906001600160a01b03821633036102d9576040516370a0823160e01b8152306004820152916001600160a01b039190911690602083602481855afa9283156102a7575f936103e9575b5082806103cf575b5f546040519182526001600160a01b03169083907fbfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b102536290602090a3005b6103e2916001600160a01b031683610b60565b5f82610393565b61040c91935060203d602011610413575b61040481836109ba565b810190610ac8565b915f61038b565b503d6103fa565b60609060031901126101175760043561043281610106565b9060243561043f81610106565b9060443590565b34610117576104543661041a565b5f549092906001600160a01b031633036102d9576001600160a01b031690811580156104d0575b6104c1576020816104ae857fbfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b10253629486610b60565b6040519485526001600160a01b031693a3005b63d92e233d60e01b5f5260045ffd5b506001600160a01b0381161561047b565b34610117576040366003190112610117576004356104fe81610106565b5f5460243591906001600160a01b031633036102d9576001600160a01b03169081156104c1575f80808084865af1610534610ad7565b50156105675760207f94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c91604051908152a2005b6312171d8360e31b5f5260045ffd5b346101175760203660031901126101175760043561059381610106565b60018060a01b03165f526001602052602060ff60405f2054166040519015158152f35b8015150361011757565b34610117576040366003190112610117576004356105dd81610106565b602435906105ea826105b6565b5f546001600160a01b031633036102d9576001600160a01b03169081156104c15760207f19f4c310cf148369e5605e8f3538cee4d3495da0612c9a45c0b89105ed6fee4d91835f526001825260405f209015159060ff1981541660ff8316179055604051908152a2005b34610117575f366003190112610117575f546001600160a01b0316338190036102d95747908161068057005b5f80808481945af1610690610ad7565b5015610567575f546040519182526001600160a01b0316907f94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c90602090a2005b34610117575f366003190112610117575f546040516001600160a01b039091168152602090f35b346101175760603660031901126101175760043561071481610106565b60243560443567ffffffffffffffff81116101175761073790369060040161011b565b92909160018060a01b035f5416331415806107f9575b6102d9576001600160a01b0382169182156107ea575f809160405187878237848189810185815203925af192610781610ad7565b93156107ce57610281947f335a1fecd5558554165c05171954925d0d97911ad1d259ef6bb18eb2c07a58aa916107bf86604051938493339785610b06565b0390a36040519182918261016d565b835184816107e5576312171d8360e31b5f5260045ffd5b602001fd5b63416aebb560e11b5f5260045ffd5b50335f52600160205260ff60405f2054161561074d565b346101175761081e3661041a565b5f549092906001600160a01b031633036102d9576001600160a01b0316918215801561089f575b6104c15760405163095ea7b360e01b81526001600160a01b03929092166004830152602482015290602090829060449082905f905af180156102a75761088757005b6100209060203d6020116102d2576102c581836109ba565b506001600160a01b03821615610845565b34610117576020366003190112610117576004356108cd81610106565b5f549060ff8260a01c16610927576001600160a01b03169081156104c1576001600160a81b0319168117600160a01b175f9081557f908408e307fc569b417f6cbec5d5a06f44a0a505ac0479b47d421a4b2fd6a1e69080a2005b62dc149f60e41b5f5260045ffd5b346101175760403660031901126101175760043561095281610106565b602435906001600160a01b031680156104c1576040519182527fe33e9822e3317b004d587136bab2627ea1ecfbba4eb79abddd0a56cfdd09c0e160203393a3005b5f36600319011261011757610020610b32565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff8211176109dc57604052565b6109a6565b90816020910312610117575161017e816105b6565b6040513d5f823e3d90fd5b67ffffffffffffffff81116109dc57601f01601f191660200190565b6020818303126101175780519067ffffffffffffffff8211610117570181601f8201121561011757805190610a5182610a01565b92610a5f60405194856109ba565b8284526020838301011161011757815f9260208093018386015e8301015290565b908060209392818452848401375f828201840152601f01601f1916010190565b6001600160a01b0390911681525f602082015260606040820181905261017e93910191610a80565b90816020910312610117575190565b3d15610b01573d90610ae882610a01565b91610af660405193846109ba565b82523d5f602084013e565b606090565b929161017e9492610b24928552606060208601526060850191610a80565b916040818403910152610149565b6040513481527fbfe611b001dfcd411432f7bf0d79b82b4b2ee81511edac123a3403c357fb972a60203392a2565b60405163a9059cbb60e01b60208083019182526001600160a01b0394909416602483015260448083019590955293815290925f91610b9f6064826109ba565b519082855af1156109f6575f513d610be657506001600160a01b0381163b155b610bc65750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415610bbf56fea2646970667358221220d58af94963049595cc8efedb194706c0886fd90349d12354461a450a7a544e6564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x22 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x18 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x20 PUSH2 0xB32 JUMP JUMPDEST STOP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x103657E7 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x40C442DE EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x44004CC1 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x4782F779 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x54BA7696 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x68FEC4DA EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x84536017 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xA8E5E4AA EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xF32F1864 EQ PUSH2 0xC5 JUMPI PUSH4 0xF6326FB3 SUB PUSH2 0xE JUMPI PUSH2 0x993 JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x117 JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x117 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x117 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x117 JUMPI JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x17E SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x149 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x19E DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1AB DUP3 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH2 0x1BA DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x117 JUMPI PUSH2 0x1DA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11B JUMP JUMPDEST SWAP5 SWAP1 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND CALLER EQ ISZERO DUP1 PUSH2 0x2E8 JUMPI JUMPDEST PUSH2 0x2D9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP3 PUSH1 0x20 SWAP1 DUP5 SWAP1 DUP2 PUSH0 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x2A7 JUMPI PUSH0 SWAP4 PUSH2 0x2AC JUMPI JUMPDEST POP PUSH2 0x25D PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0x9E5D4C49 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0xAA0 JUMP JUMPDEST SUB DUP2 DUP4 ADDRESS GAS CALL DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH2 0x281 SWAP2 PUSH0 SWAP2 PUSH2 0x285 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x16D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x299 DUP2 DUP4 PUSH2 0x9BA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA1D JUMP JUMPDEST PUSH0 PUSH2 0x274 JUMP JUMPDEST PUSH2 0x9F6 JUMP JUMPDEST PUSH2 0x2CD SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2D2 JUMPI JUMPDEST PUSH2 0x2C5 DUP2 DUP4 PUSH2 0x9BA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x23E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2BB JUMP JUMPDEST PUSH4 0x30CD7471 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1F0 JUMP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH0 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x340 DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH0 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER SUB PUSH2 0x2D9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A7 JUMPI PUSH0 SWAP4 PUSH2 0x3E9 JUMPI JUMPDEST POP DUP3 DUP1 PUSH2 0x3CF JUMPI JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 SWAP1 PUSH32 0xBFED55BDCD242E3DD0F60DDD7D1E87C67F61C34CD9527B3E6455D841B1025362 SWAP1 PUSH1 0x20 SWAP1 LOG3 STOP JUMPDEST PUSH2 0x3E2 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xB60 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x393 JUMP JUMPDEST PUSH2 0x40C SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x413 JUMPI JUMPDEST PUSH2 0x404 DUP2 DUP4 PUSH2 0x9BA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xAC8 JUMP JUMPDEST SWAP2 PUSH0 PUSH2 0x38B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x432 DUP2 PUSH2 0x106 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH2 0x43F DUP2 PUSH2 0x106 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH2 0x454 CALLDATASIZE PUSH2 0x41A JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2D9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO DUP1 ISZERO PUSH2 0x4D0 JUMPI JUMPDEST PUSH2 0x4C1 JUMPI PUSH1 0x20 DUP2 PUSH2 0x4AE DUP6 PUSH32 0xBFED55BDCD242E3DD0F60DDD7D1E87C67F61C34CD9527B3E6455D841B1025362 SWAP5 DUP7 PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 LOG3 STOP JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x47B JUMP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x4FE DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2D9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x4C1 JUMPI PUSH0 DUP1 DUP1 DUP1 DUP5 DUP7 GAS CALL PUSH2 0x534 PUSH2 0xAD7 JUMP JUMPDEST POP ISZERO PUSH2 0x567 JUMPI PUSH1 0x20 PUSH32 0x94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C SWAP2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH4 0x12171D83 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x593 DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x117 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x5DD DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x5EA DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2D9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x20 PUSH32 0x19F4C310CF148369E5605E8F3538CEE4D3495DA0612C9A45C0B89105ED6FEE4D SWAP2 DUP4 PUSH0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 ISZERO ISZERO SWAP1 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x2D9 JUMPI SELFBALANCE SWAP1 DUP2 PUSH2 0x680 JUMPI STOP JUMPDEST PUSH0 DUP1 DUP1 DUP5 DUP2 SWAP5 GAS CALL PUSH2 0x690 PUSH2 0xAD7 JUMP JUMPDEST POP ISZERO PUSH2 0x567 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C SWAP1 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x714 DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x117 JUMPI PUSH2 0x737 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11B JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND CALLER EQ ISZERO DUP1 PUSH2 0x7F9 JUMPI JUMPDEST PUSH2 0x2D9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 DUP3 ISZERO PUSH2 0x7EA JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x40 MLOAD DUP8 DUP8 DUP3 CALLDATACOPY DUP5 DUP2 DUP10 DUP2 ADD DUP6 DUP2 MSTORE SUB SWAP3 GAS CALL SWAP3 PUSH2 0x781 PUSH2 0xAD7 JUMP JUMPDEST SWAP4 ISZERO PUSH2 0x7CE JUMPI PUSH2 0x281 SWAP5 PUSH32 0x335A1FECD5558554165C05171954925D0D97911AD1D259EF6BB18EB2C07A58AA SWAP2 PUSH2 0x7BF DUP7 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 CALLER SWAP8 DUP6 PUSH2 0xB06 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x16D JUMP JUMPDEST DUP4 MLOAD DUP5 DUP2 PUSH2 0x7E5 JUMPI PUSH4 0x12171D83 PUSH1 0xE3 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x416AEBB5 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x74D JUMP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH2 0x81E CALLDATASIZE PUSH2 0x41A JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2D9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO DUP1 ISZERO PUSH2 0x89F JUMPI JUMPDEST PUSH2 0x4C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH2 0x887 JUMPI STOP JUMPDEST PUSH2 0x20 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2D2 JUMPI PUSH2 0x2C5 DUP2 DUP4 PUSH2 0x9BA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x845 JUMP JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x8CD DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0xA0 SHR AND PUSH2 0x927 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND DUP2 OR PUSH1 0x1 PUSH1 0xA0 SHL OR PUSH0 SWAP1 DUP2 SSTORE PUSH32 0x908408E307FC569B417F6CBEC5D5A06F44A0A505AC0479B47D421A4B2FD6A1E6 SWAP1 DUP1 LOG2 STOP JUMPDEST PUSH3 0xDC149F PUSH1 0xE4 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x117 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x952 DUP2 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xE33E9822E3317B004D587136BAB2627EA1ECFBBA4EB79ABDDD0A56CFDD09C0E1 PUSH1 0x20 CALLER SWAP4 LOG3 STOP JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x117 JUMPI PUSH2 0x20 PUSH2 0xB32 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9DC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x117 JUMPI MLOAD PUSH2 0x17E DUP2 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x9DC JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x117 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x117 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x117 JUMPI DUP1 MLOAD SWAP1 PUSH2 0xA51 DUP3 PUSH2 0xA01 JUMP JUMPDEST SWAP3 PUSH2 0xA5F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x9BA JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x117 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD MCOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x17E SWAP4 SWAP2 ADD SWAP2 PUSH2 0xA80 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x117 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xB01 JUMPI RETURNDATASIZE SWAP1 PUSH2 0xAE8 DUP3 PUSH2 0xA01 JUMP JUMPDEST SWAP2 PUSH2 0xAF6 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x9BA JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0x17E SWAP5 SWAP3 PUSH2 0xB24 SWAP3 DUP6 MSTORE PUSH1 0x60 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP2 PUSH2 0xA80 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0xBFE611B001DFCD411432F7BF0D79B82B4B2EE81511EDAC123A3403C357FB972A PUSH1 0x20 CALLER SWAP3 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP2 MSTORE SWAP1 SWAP3 PUSH0 SWAP2 PUSH2 0xB9F PUSH1 0x64 DUP3 PUSH2 0x9BA JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x9F6 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0xBE6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0xBC6 JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xBBF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 DUP11 0xF9 BLOBHASH PUSH4 0x49595CC DUP15 INVALID 0xDB NOT SELFBALANCE MOD 0xC0 DUP9 PUSH16 0xD90349D12354461A450A7A544E656473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "1021:6369:6:-:0;;;;;;;;;-1:-1:-1;1021:6369:6;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;1021:6369:6;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1021:6369:6;;;;;;;;-1:-1:-1;;1021:6369:6;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;1021:6369:6;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1021:6369:6;;2141:10;:20;;:54;;;1021:6369;2137:77;;1021:6369;;-1:-1:-1;;;6506:38:6;;-1:-1:-1;;;;;1021:6369:6;;;;6506:38;;1021:6369;;;;;;;;;;;-1:-1:-1;1021:6369:6;;;;6506:38;;-1:-1:-1;;;;;1021:6369:6;6506:38;;;;;;;-1:-1:-1;6506:38:6;;;1021:6369;;6557:33;1021:6369;;;;;;;;;;6557:33;;1021:6369;6557:33;;;:::i;:::-;;:4;;;:33;;;;;;1021:6369;6557:33;-1:-1:-1;6557:33:6;;;1021:6369;;;;;;;;;:::i;:::-;;;;6557:33;;;;;;-1:-1:-1;6557:33:6;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;6506:38::-;;;1021:6369;6506:38;1021:6369;6506:38;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;2137:77;2204:10;;;-1:-1:-1;2204:10:6;1021:6369;-1:-1:-1;2204:10:6;2141:54;:10;;-1:-1:-1;1021:6369:6;2166:17;1021:6369;;;;-1:-1:-1;1021:6369:6;;;2165:30;2141:54;;1021:6369;;;;;;-1:-1:-1;;1021:6369:6;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1021:6369:6;;;;;;;;;:::i;:::-;-1:-1:-1;1021:6369:6;;-1:-1:-1;;;;;1021:6369:6;;2033:10;:20;2029:43;;1021:6369;;-1:-1:-1;;;6797:38:6;;6829:4;1021:6369;6797:38;;1021:6369;;-1:-1:-1;;;;;1021:6369:6;;;;;;;;;;6797:38;;;;;;;-1:-1:-1;6797:38:6;;;1021:6369;6849:7;;;6845:52;;1021:6369;-1:-1:-1;1021:6369:6;;;;;;-1:-1:-1;;;;;1021:6369:6;;;;6912:34;;1021:6369;;6912:34;1021:6369;6845:52;6893:3;;-1:-1:-1;;;;;1021:6369:6;6893:3;;:::i;:::-;6845:52;;;;6797:38;;;;;1021:6369;6797:38;1021:6369;6797:38;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1021:6369;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;:::i;:::-;2047:6;1021:6369;;;;-1:-1:-1;;;;;1021:6369:6;2033:10;:20;2029:43;;-1:-1:-1;;;;;1021:6369:6;;3894:19;;:39;;;;1021:6369;3890:65;;1021:6369;3996:6;;;4018:33;3996:6;;;:::i;:::-;1021:6369;;;;;-1:-1:-1;;;;;1021:6369:6;;4018:33;1021:6369;3890:65;3942:13;;;2047:6;3942:13;1021:6369;2047:6;3942:13;3894:39;-1:-1:-1;;;;;;1021:6369:6;;3917:16;3894:39;;1021:6369;;;;;;-1:-1:-1;;1021:6369:6;;;;;;;;;:::i;:::-;-1:-1:-1;1021:6369:6;;;;;-1:-1:-1;;;;;1021:6369:6;2033:10;:20;2029:43;;-1:-1:-1;;;;;1021:6369:6;;3549:16;;3545:42;;-1:-1:-1;3611:26:6;;;;;;;;;:::i;:::-;;3651:3;3647:32;;1021:6369;3694:24;1021:6369;;;;;;3694:24;1021:6369;3647:32;3663:16;;;-1:-1:-1;3663:16:6;1021:6369;-1:-1:-1;3663:16:6;1021:6369;;;;;;-1:-1:-1;;1021:6369:6;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1021:6369:6;1341:49;1021:6369;;;;;-1:-1:-1;1021:6369:6;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;1021:6369:6;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;1021:6369:6;-1:-1:-1;;;;;1021:6369:6;2033:10;:20;2029:43;;-1:-1:-1;;;;;1021:6369:6;;4662:22;;4658:48;;1021:6369;4768:38;1021:6369;;-1:-1:-1;1021:6369:6;4716:17;1021:6369;;;-1:-1:-1;1021:6369:6;;;;;;;;;;;;;;;;;;;;;4768:38;1021:6369;;;;;;;-1:-1:-1;;1021:6369:6;;;;;;-1:-1:-1;;;;;1021:6369:6;2033:10;:20;;;2029:43;;7034:21;7069:7;;7065:178;;1021:6369;7065:178;1021:6369;7106:36;;;;;;;;;:::i;:::-;;7160:3;7156:32;;1021:6369;;;;;;;-1:-1:-1;;;;;1021:6369:6;;7207:25;;1021:6369;;7207:25;1021:6369;;;;;;;-1:-1:-1;;1021:6369:6;;;;;;;;-1:-1:-1;;;;;1021:6369:6;;;;;;;;;;;;;;-1:-1:-1;;1021:6369:6;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1021:6369:6;;2141:10;:20;;:54;;;1021:6369;2137:77;;-1:-1:-1;;;;;1021:6369:6;;;5615:20;;5611:48;;-1:-1:-1;1021:6369:6;;;;;;;;;;;;;;;;5759:31;;;;;;;:::i;:::-;5804:3;;5800:314;;1021:6369;;6129:50;1021:6369;6129:50;1021:6369;;;2141:10;;;;6129:50;;;:::i;:::-;;;;1021:6369;;;;;;;:::i;5800:314::-;1021:6369;;;;5870:197;;3663:16;;;-1:-1:-1;6087:16:6;1021:6369;-1:-1:-1;6087:16:6;5870:197;1021:6369;5972:81;;5611:48;5644:15;;;-1:-1:-1;5644:15:6;1021:6369;-1:-1:-1;5644:15:6;2141:54;:10;;-1:-1:-1;1021:6369:6;2166:17;1021:6369;;;;-1:-1:-1;1021:6369:6;;;2165:30;2141:54;;1021:6369;;;;;;;:::i;:::-;2047:6;1021:6369;;;;-1:-1:-1;;;;;1021:6369:6;2033:10;:20;2029:43;;-1:-1:-1;;;;;1021:6369:6;;4243:19;;:44;;;;1021:6369;4239:70;;1021:6369;;-1:-1:-1;;;4319:38:6;;-1:-1:-1;;;;;1021:6369:6;;;;;4319:38;;1021:6369;;;;;;4319:38;;1021:6369;;;;;;-1:-1:-1;;4319:38:6;;;;;;;;1021:6369;4319:38;;;;;;;;;;;;;:::i;4243:44::-;-1:-1:-1;;;;;;1021:6369:6;;4266:21;4243:44;;1021:6369;;;;;;-1:-1:-1;;1021:6369:6;;;;;;;;;:::i;:::-;-1:-1:-1;1021:6369:6;;;;;;;2389:45;;-1:-1:-1;;;;;1021:6369:6;;2448:20;;2444:46;;-1:-1:-1;;;;;;1021:6369:6;;;-1:-1:-1;;;1021:6369:6;-1:-1:-1;1021:6369:6;;;2561:19;;-1:-1:-1;2561:19:6;1021:6369;2389:45;2414:20;;;-1:-1:-1;2414:20:6;1021:6369;-1:-1:-1;2414:20:6;1021:6369;;;;;;-1:-1:-1;;1021:6369:6;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1021:6369:6;3275:19;;3271:45;;1021:6369;;;;;3331:41;1021:6369;3353:10;3331:41;;1021:6369;;;;-1:-1:-1;;1021:6369:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;1021:6369:6;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1021:6369:6;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;1021:6369:6;;;;;;;;-1:-1:-1;;1021:6369:6;;;;:::o;:::-;-1:-1:-1;;;;;1021:6369:6;;;;;-1:-1:-1;1021:6369:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;1021:6369:6;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;2925:95::-;1021:6369;;3003:9;1021:6369;;2979:34;1021:6369;2991:10;2979:34;;2925:95::o;1219:160:4:-;1021:6369:6;;-1:-1:-1;;;1328:43:4;;;;;;;-1:-1:-1;;;;;1021:6369:6;;;;1328:43:4;;;1021:6369:6;;;;;;;;;1328:43:4;;;1219:160;;-1:-1:-1;;1328:43:4;1021:6369:6;;1328:43:4;:::i;:::-;8507:421;;;;;;;;;-1:-1:-1;8507:421:4;;8942:15;;-1:-1:-1;;;;;;1021:6369:6;;8960:26:4;:31;8942:68;8938:146;;1219:160;:::o;8938:146::-;-1:-1:-1;;;;9033:40:4;;;-1:-1:-1;;;;;1021:6369:6;;;;9033:40:4;1021:6369:6;1328:43:4;;9033:40;8942:68;9009:1;8994:16;;8942:68;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "621800",
								"executionCost": "665",
								"totalCost": "622465"
							},
							"external": {
								"approveAndCall(address,address,uint256,address,bytes)": "infinite",
								"approveERC20(address,address,uint256)": "infinite",
								"depositETH()": "1836",
								"emergencyWithdrawERC20(address)": "infinite",
								"emergencyWithdrawETH()": "infinite",
								"executeCall(address,uint256,bytes)": "infinite",
								"executorWhitelist(address)": "2529",
								"initialize(address)": "25900",
								"isInitialized()": "2299",
								"notifyERC20Deposit(address,uint256)": "2302",
								"owner()": "2459",
								"setExecutorAllowed(address,bool)": "28289",
								"withdrawERC20(address,address,uint256)": "infinite",
								"withdrawETH(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1021,
									"end": 7390,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "RETURN",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 7390,
									"name": "REVERT",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d58af94963049595cc8efedb194706c0886fd90349d12354461a450a7a544e6564736f6c634300081a0033",
									".code": [
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "41"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "103657E7"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "392E53CD"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40C442DE"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "44004CC1"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4782F779"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "54BA7696"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "68FEC4DA"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "84536017"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "9E5D4C49"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "A8E5E4AA"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "C4D66DE8"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "F32F1864"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "F6326FB3"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2151,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2161,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2161,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2141,
											"end": 2195,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2137,
											"end": 2214,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "9E5D4C49"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 6557,
											"end": 6590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6561,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6561,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 6557,
											"end": 6590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 6557,
											"end": 6590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 6557,
											"end": 6590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 6506,
											"end": 6544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 6506,
											"end": 6544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 6506,
											"end": 6544,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2214,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2137,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "PUSH",
											"source": 6,
											"value": "30CD7471"
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2195,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2141,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2151,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2151,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2141,
											"end": 2195,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2043,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2029,
											"end": 2072,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6829,
											"end": 6833,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6849,
											"end": 6856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6849,
											"end": 6856,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6849,
											"end": 6856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6845,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 6845,
											"end": 6897,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 6946,
											"name": "PUSH",
											"source": 6,
											"value": "BFED55BDCD242E3DD0F60DDD7D1E87C67F61C34CD9527B3E6455D841B1025362"
										},
										{
											"begin": 6912,
											"end": 6946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 6946,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 6845,
											"end": 6897,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 6845,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6893,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 6893,
											"end": 6896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6893,
											"end": 6896,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6893,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 6893,
											"end": 6896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6893,
											"end": 6896,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 6893,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6845,
											"end": 6897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6845,
											"end": 6897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6845,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 6845,
											"end": 6897,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 6797,
											"end": 6835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 6797,
											"end": 6835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6797,
											"end": 6835,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2047,
											"end": 2053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2043,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2029,
											"end": 2072,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3913,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3913,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3933,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3933,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3894,
											"end": 3933,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3890,
											"end": 3955,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "BFED55BDCD242E3DD0F60DDD7D1E87C67F61C34CD9527B3E6455D841B1025362"
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3996,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4051,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 3955,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3890,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3955,
											"name": "PUSH",
											"source": 6,
											"value": "D92E233D"
										},
										{
											"begin": 3942,
											"end": 3955,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3942,
											"end": 3955,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2047,
											"end": 2053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2047,
											"end": 2053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3955,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3933,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3894,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3917,
											"end": 3933,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3894,
											"end": 3933,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2043,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2029,
											"end": 2072,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3565,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3545,
											"end": 3587,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3611,
											"end": 3637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3654,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "PUSH",
											"source": 6,
											"value": "94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3718,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3647,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "12171D83"
										},
										{
											"begin": 3663,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "E3"
										},
										{
											"begin": 3663,
											"end": 3679,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3679,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3679,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1390,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2043,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2029,
											"end": 2072,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4684,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4658,
											"end": 4706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4658,
											"end": 4706,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4768,
											"end": 4806,
											"name": "PUSH",
											"source": 6,
											"value": "19F4C310CF148369E5605E8F3538CEE4D3495DA0612C9A45C0B89105ED6FEE4D"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4716,
											"end": 4733,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4768,
											"end": 4806,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2043,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2029,
											"end": 2072,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7034,
											"end": 7055,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7076,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 7065,
											"end": 7243,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7243,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 7065,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7106,
											"end": 7142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7106,
											"end": 7142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7106,
											"end": 7142,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7106,
											"end": 7142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7106,
											"end": 7142,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7106,
											"end": 7142,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7106,
											"end": 7142,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7106,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 7106,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 7106,
											"end": 7142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7106,
											"end": 7142,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 7106,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7106,
											"end": 7142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7163,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7156,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7156,
											"end": 7188,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7207,
											"end": 7232,
											"name": "PUSH",
											"source": 6,
											"value": "94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C"
										},
										{
											"begin": 7207,
											"end": 7232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7207,
											"end": 7232,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2151,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2161,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2161,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2141,
											"end": 2195,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2137,
											"end": 2214,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5635,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 5611,
											"end": 5659,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5759,
											"end": 5790,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5759,
											"end": 5790,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5759,
											"end": 5790,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5759,
											"end": 5790,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5759,
											"end": 5790,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5759,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 5759,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 5759,
											"end": 5790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5759,
											"end": 5790,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 5759,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5807,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5807,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5800,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5800,
											"end": 6114,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6179,
											"name": "PUSH",
											"source": 6,
											"value": "335A1FECD5558554165C05171954925D0D97911AD1D259EF6BB18EB2C07A58AA"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2151,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2151,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2151,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2151,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6179,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6179,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 6129,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6179,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6129,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6179,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6179,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5800,
											"end": 6114,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5800,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 6067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5870,
											"end": 6067,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "12171D83"
										},
										{
											"begin": 3663,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "E3"
										},
										{
											"begin": 3663,
											"end": 3679,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6087,
											"end": 6103,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6087,
											"end": 6103,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 6067,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5870,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 6053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 6053,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5659,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 5611,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5659,
											"name": "PUSH",
											"source": 6,
											"value": "416AEBB5"
										},
										{
											"begin": 5644,
											"end": 5659,
											"name": "PUSH",
											"source": 6,
											"value": "E1"
										},
										{
											"begin": 5644,
											"end": 5659,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5659,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5659,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2195,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2141,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2151,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2151,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2141,
											"end": 2195,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2047,
											"end": 2053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2043,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2029,
											"end": 2072,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4287,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4287,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4243,
											"end": 4287,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4239,
											"end": 4309,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4319,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4287,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4243,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4287,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4243,
											"end": 4287,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2389,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2389,
											"end": 2434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2468,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2468,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2444,
											"end": 2490,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "OR",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "OR",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2580,
											"name": "PUSH",
											"source": 6,
											"value": "908408E307FC569B417F6CBEC5D5A06F44A0A505AC0479B47D421A4B2FD6A1E6"
										},
										{
											"begin": 2561,
											"end": 2580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2580,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2389,
											"end": 2434,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2389,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2414,
											"end": 2434,
											"name": "PUSH",
											"source": 6,
											"value": "DC149F"
										},
										{
											"begin": 2414,
											"end": 2434,
											"name": "PUSH",
											"source": 6,
											"value": "E4"
										},
										{
											"begin": 2414,
											"end": 2434,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2434,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3294,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3294,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3271,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3271,
											"end": 3316,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3331,
											"end": 3372,
											"name": "PUSH",
											"source": 6,
											"value": "E33E9822E3317B004D587136BAB2627EA1ECFBBA4EB79ABDDD0A56CFDD09C0E1"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3353,
											"end": 3363,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3331,
											"end": 3372,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3331,
											"end": 3372,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1021,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2925,
											"end": 3020,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2925,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3012,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "BFE611B001DFCD411432F7BF0D79B82B4B2EE81511EDAC123A3403C357FB972A"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 3001,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3013,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2925,
											"end": 3020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 7390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/Contract Architecture/Core Infrastructure/UserVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approveAndCall(address,address,uint256,address,bytes)": "103657e7",
							"approveERC20(address,address,uint256)": "a8e5e4aa",
							"depositETH()": "f6326fb3",
							"emergencyWithdrawERC20(address)": "40c442de",
							"emergencyWithdrawETH()": "84536017",
							"executeCall(address,uint256,bytes)": "9e5d4c49",
							"executorWhitelist(address)": "54ba7696",
							"initialize(address)": "c4d66de8",
							"isInitialized()": "392e53cd",
							"notifyERC20Deposit(address,uint256)": "f32f1864",
							"owner()": "8da5cb5b",
							"setExecutorAllowed(address,bool)": "68fec4da",
							"withdrawERC20(address,address,uint256)": "44004cc1",
							"withdrawETH(address,uint256)": "4782f779"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Withdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ETHReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ETHWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"name\":\"ExecutedCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"ExecutorWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"emergencyWithdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"executorWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"notifyERC20Deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setExecutorAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"executeCall(address,uint256,bytes)\":{\"details\":\"Must be called by owner or a whitelisted executor. Returns raw call return data.         Use with caution \\u2014 giving an executor this ability is equivalent to giving control         of the vault's funds to that executor.\",\"params\":{\"data\":\"Calldata to send.\",\"target\":\"The destination contract / address to call.\",\"value\":\"Amount of ETH to send with the call.\"},\"returns\":{\"result\":\"The returned data from the call.\"}},\"initialize(address)\":{\"details\":\"called by the clone right after creation\"}},\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyInitialized()\":[{\"notice\":\"Basic errors (cheaper than revert strings)\"}]},\"events\":{\"Initialized(address)\":{\"notice\":\"========== EVENTS ==========\"}},\"kind\":\"user\",\"methods\":{\"approveAndCall(address,address,uint256,address,bytes)\":{\"notice\":\"========== HELPERS ========== Approve then call helper (useful for DEX routing patterns)\"},\"approveERC20(address,address,uint256)\":{\"notice\":\"Owner can approve a spender for ERC20\"},\"depositETH()\":{\"notice\":\"Convenience deposit function (no-op besides event)\"},\"emergencyWithdrawERC20(address)\":{\"notice\":\"========== EMERGENCY ========== Emergency withdraw all ETH and tokens to owner (owner-only)\"},\"executeCall(address,uint256,bytes)\":{\"notice\":\"Execute arbitrary call from the vault.\"},\"executorWhitelist(address)\":{\"notice\":\"Optional: an address allowed to call executeCall on behalf of the owner (e.g., ActionExecutor)\"},\"initialize(address)\":{\"notice\":\"========== INITIALIZER ==========\"},\"isInitialized()\":{\"notice\":\"========== VIEW HELPERS ==========\"},\"notifyERC20Deposit(address,uint256)\":{\"notice\":\"Called by user (or any address) that transferred ERC20 tokens to vault via `transfer` Use only to emit an indexed event for offchain indexing systems.\"},\"owner()\":{\"notice\":\"========== OWNER VIEW ==========\"},\"setExecutorAllowed(address,bool)\":{\"notice\":\"========== EXECUTOR WHITELIST (optional) ========== Add/remove an offchain/executor address allowed to call executeCall\"},\"withdrawERC20(address,address,uint256)\":{\"notice\":\"Owner-only withdraw ERC20\"},\"withdrawETH(address,uint256)\":{\"notice\":\"========== WITHDRAWALS ========== Owner-only withdraw ETH\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Core Infrastructure/UserVault.sol\":\"UserVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/Contract Architecture/Core Infrastructure/UserVault.sol\":{\"keccak256\":\"0xcd27558e52df4e6e460bfc61b50a17b3deb0e8558eb314901a110f688c76fdfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ee578bdce85d5d75058275b8d845815b9f1520c0eb1b9bd063073def98435e\",\"dweb:/ipfs/QmNUhYt2xYu47LXRr4xgZu1AdEad6inx17rXr3GowDASUy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 669,
								"contract": "src/Contract Architecture/Core Infrastructure/UserVault.sol:UserVault",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 672,
								"contract": "src/Contract Architecture/Core Infrastructure/UserVault.sol:UserVault",
								"label": "_initialized",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 677,
								"contract": "src/Contract Architecture/Core Infrastructure/UserVault.sol:UserVault",
								"label": "executorWhitelist",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"errors": {
							"AlreadyInitialized()": [
								{
									"notice": "Basic errors (cheaper than revert strings)"
								}
							]
						},
						"events": {
							"Initialized(address)": {
								"notice": "========== EVENTS =========="
							}
						},
						"kind": "user",
						"methods": {
							"approveAndCall(address,address,uint256,address,bytes)": {
								"notice": "========== HELPERS ========== Approve then call helper (useful for DEX routing patterns)"
							},
							"approveERC20(address,address,uint256)": {
								"notice": "Owner can approve a spender for ERC20"
							},
							"depositETH()": {
								"notice": "Convenience deposit function (no-op besides event)"
							},
							"emergencyWithdrawERC20(address)": {
								"notice": "========== EMERGENCY ========== Emergency withdraw all ETH and tokens to owner (owner-only)"
							},
							"executeCall(address,uint256,bytes)": {
								"notice": "Execute arbitrary call from the vault."
							},
							"executorWhitelist(address)": {
								"notice": "Optional: an address allowed to call executeCall on behalf of the owner (e.g., ActionExecutor)"
							},
							"initialize(address)": {
								"notice": "========== INITIALIZER =========="
							},
							"isInitialized()": {
								"notice": "========== VIEW HELPERS =========="
							},
							"notifyERC20Deposit(address,uint256)": {
								"notice": "Called by user (or any address) that transferred ERC20 tokens to vault via `transfer` Use only to emit an indexed event for offchain indexing systems."
							},
							"owner()": {
								"notice": "========== OWNER VIEW =========="
							},
							"setExecutorAllowed(address,bool)": {
								"notice": "========== EXECUTOR WHITELIST (optional) ========== Add/remove an offchain/executor address allowed to call executeCall"
							},
							"withdrawERC20(address,address,uint256)": {
								"notice": "Owner-only withdraw ERC20"
							},
							"withdrawETH(address,uint256)": {
								"notice": "========== WITHDRAWALS ========== Owner-only withdraw ETH"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							643
						],
						"IERC20": [
							167
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 643,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 643,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								643,
								167
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							643
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 644,
							"src": "133:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 643,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 168,
							"src": "132:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "140:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167
							],
							"name": "IERC20",
							"nameLocation": "215:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 101,
									"name": "Transfer",
									"nameLocation": "397:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "406:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "428:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "448:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:3"
									},
									"src": "391:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 110,
									"name": "Approval",
									"nameLocation": "628:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "637:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "660:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "685:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:3"
									},
									"src": "622:78:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:3"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "822:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:3"
									},
									"scope": 167,
									"src": "776:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:3"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "972:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:3"
									},
									"scope": 167,
									"src": "913:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1223:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1235:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:3"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 167,
									"src": "1205:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 167,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2327:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:3"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2377:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:3"
									},
									"scope": 167,
									"src": "2310:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2713:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2727:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2739:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:3"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2772:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:3"
									},
									"scope": 167,
									"src": "2691:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 168,
							"src": "205:2575:3",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "106:2675:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							631
						]
					},
					"id": 632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 168,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 82,
							"src": "179:58:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 172,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 174,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 631,
							"linearizedBaseContracts": [
								631
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:4",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 179,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "823:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:4"
									},
									"src": "792:46:4"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 188,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "959:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "976:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1002:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:4"
									},
									"src": "920:109:4"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1291:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1321:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 203,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "1343:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "1343:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 205,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 194,
																			"src": "1360:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 206,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 196,
																			"src": "1364:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 207,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 201,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 199,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1301:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:4"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1241:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 190,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1241:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1241:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1255:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1267:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:4"
									},
									"scope": 631,
									"src": "1219:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1708:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1738:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 229,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "1760:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "1760:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 231,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "1781:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 232,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "1787:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 233,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "1791:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 234,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 227,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 225,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1718:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:4"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1644:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 214,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1644:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1644:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1658:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1672:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:4"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:4"
									},
									"scope": 631,
									"src": "1618:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2033:99:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2074:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 256,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "2096:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "2096:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 258,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 245,
																			"src": "2113:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 259,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2117:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 260,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 254,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 252,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2050:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 251,
												"id": 263,
												"nodeType": "Return",
												"src": "2043:82:4"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:4",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1968:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 241,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1968:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1968:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1982:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1994:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:4"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2027:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:4"
									},
									"scope": 631,
									"src": "1943:189:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "2381:109:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 281,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2422:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 284,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "2444:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "2444:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 286,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "2465:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 287,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 273,
																			"src": "2471:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 288,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "2475:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 289,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 282,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 280,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2398:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 279,
												"id": 292,
												"nodeType": "Return",
												"src": "2391:92:4"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:4",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2302:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 268,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 267,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "2302:6:4"
													},
													"referencedDeclaration": 167,
													"src": "2302:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2316:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2330:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:4"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 631,
									"src": "2273:217:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3232:139:4",
										"statements": [
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 324,
														"src": "3242:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 311,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$631",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$631",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 309,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "3296:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 307,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3265:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "3265:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 317,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3327:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 318,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "3334:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 319,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "3343:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 320,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "3358:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 316,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3314:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:4"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3177:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 297,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 296,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "3177:6:4"
													},
													"referencedDeclaration": 167,
													"src": "3177:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3191:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3208:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:4"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:4"
									},
									"scope": 631,
									"src": "3146:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "4137:370:4",
										"statements": [
											{
												"id": 366,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:4",
												"statements": [
													{
														"assignments": [
															337
														],
														"declarations": [
															{
																"constant": false,
																"id": 337,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 366,
																"src": "4171:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 336,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 346,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 342,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$631",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$631",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 340,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 344,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4229:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 338,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4198:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 144,
																"src": "4198:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 347,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "4255:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 348,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4274:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 357,
														"nodeType": "IfStatement",
														"src": "4251:160:4",
														"trueBody": {
															"id": 356,
															"nodeType": "Block",
															"src": "4293:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 351,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 331,
																				"src": "4351:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 352,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 337,
																				"src": "4360:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 353,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 333,
																				"src": "4378:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 350,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 188,
																			"src": "4318:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 355,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 359,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4437:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 360,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4444:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 361,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "4453:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 362,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "4472:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 358,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "4424:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 365,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4070:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 328,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 327,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "4070:6:4"
													},
													"referencedDeclaration": 167,
													"src": "4070:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4084:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4101:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:4"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:4"
									},
									"scope": 631,
									"src": "4039:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "5161:303:4",
										"statements": [
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "5171:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 383,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5214:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "5214:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 385,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "5230:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 386,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "5239:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 387,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 381,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:4"
											},
											{
												"condition": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 391,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5286:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 392,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "5293:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 390,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5262:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 413,
												"nodeType": "IfStatement",
												"src": "5257:201:4",
												"trueBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "5308:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 396,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "5342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 399,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 372,
																					"src": "5364:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$167",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 154,
																				"src": "5364:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 401,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 374,
																						"src": "5380:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 402,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 403,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 397,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 395,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5322:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 406,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 408,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "5427:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 409,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 380,
																		"src": "5434:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 407,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5407:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 411,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5106:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 371,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 370,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "5106:6:4"
													},
													"referencedDeclaration": 167,
													"src": "5106:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5120:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5137:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:4"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:4"
									},
									"scope": 631,
									"src": "5084:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "5911:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 428,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "5925:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 442,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "6034:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 443,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "6038:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 444,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "6045:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6012:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:4",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "6012:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 455,
													"nodeType": "IfStatement",
													"src": "6007:117:4",
													"trueBody": {
														"id": 454,
														"nodeType": "Block",
														"src": "6052:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 450,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 419,
																					"src": "6106:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 448,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 447,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "6073:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 453,
																"nodeType": "RevertStatement",
																"src": "6066:47:4"
															}
														]
													}
												},
												"id": 456,
												"nodeType": "IfStatement",
												"src": "5921:203:4",
												"trueBody": {
													"id": 439,
													"nodeType": "Block",
													"src": "5946:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 434,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "5973:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 435,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "5980:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 436,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "5984:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 433,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "5960:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 438,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:4",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5840:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 417,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5840:8:4"
													},
													"referencedDeclaration": 81,
													"src": "5840:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5856:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5883:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 424,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:4"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:4"
									},
									"scope": 631,
									"src": "5808:322:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "6649:239:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 473,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "6663:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 488,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "6786:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 489,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "6792:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 490,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "6796:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 491,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "6803:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "6760:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:4",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6760:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 502,
													"nodeType": "IfStatement",
													"src": "6755:127:4",
													"trueBody": {
														"id": 501,
														"nodeType": "Block",
														"src": "6810:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 497,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 462,
																					"src": "6864:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 495,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 494,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "6831:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 500,
																"nodeType": "RevertStatement",
																"src": "6824:47:4"
															}
														]
													}
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "6659:223:4",
												"trueBody": {
													"id": 485,
													"nodeType": "Block",
													"src": "6684:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 479,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "6715:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 480,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "6722:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 481,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "6728:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 482,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "6732:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 478,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6698:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 484,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:4",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6527:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 460,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6527:8:4"
													},
													"referencedDeclaration": 81,
													"src": "6527:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6551:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6573:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6593:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:4"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:4"
									},
									"scope": 631,
									"src": "6482:406:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "7655:218:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 518,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "7669:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 532,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "7777:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 533,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "7781:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 534,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "7788:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 530,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "7756:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:4",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7756:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 545,
													"nodeType": "IfStatement",
													"src": "7751:116:4",
													"trueBody": {
														"id": 544,
														"nodeType": "Block",
														"src": "7795:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 540,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 509,
																					"src": "7849:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 538,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 537,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "7816:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 543,
																"nodeType": "RevertStatement",
																"src": "7809:47:4"
															}
														]
													}
												},
												"id": 546,
												"nodeType": "IfStatement",
												"src": "7665:202:4",
												"trueBody": {
													"id": 529,
													"nodeType": "Block",
													"src": "7690:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 524,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "7717:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 525,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "7724:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 526,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "7728:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 523,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "7704:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 528,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:4",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7584:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 507,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "7584:8:4"
													},
													"referencedDeclaration": 81,
													"src": "7584:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7600:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7612:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7627:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:4"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:4"
									},
									"scope": 631,
									"src": "7553:320:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "8440:650:4",
										"statements": [
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "8450:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 559,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:4"
											},
											{
												"assignments": [
													561
												],
												"declarations": [
													{
														"constant": false,
														"id": 561,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "8478:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 560,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 562,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:4"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:4",
													"nodeType": "YulBlock",
													"src": "8532:396:4",
													"statements": [
														{
															"nativeSrc": "8546:75:4",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:4"
																		},
																		"nativeSrc": "8566:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:4",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:4"
																		},
																		"nativeSrc": "8583:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:4"
																		},
																		"nativeSrc": "8600:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:4"
																},
																"nativeSrc": "8561:60:4",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:4"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:4",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:4",
																"nodeType": "YulBlock",
																"src": "8682:157:4",
																"statements": [
																	{
																		"nativeSrc": "8700:22:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:4",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:4",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:4"
																			},
																			"nativeSrc": "8711:11:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:4"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:4",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:4",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:4"
																					},
																					"nativeSrc": "8762:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:4",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:4"
																			},
																			"nativeSrc": "8739:40:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:4"
																		},
																		"nativeSrc": "8739:40:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:4"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:4"
																					},
																					"nativeSrc": "8808:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:4"
																			},
																			"nativeSrc": "8796:29:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:4"
																		},
																		"nativeSrc": "8796:29:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:4"
																},
																"nativeSrc": "8666:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:4"
															},
															"nativeSrc": "8663:176:4",
															"nodeType": "YulIf",
															"src": "8663:176:4"
														},
														{
															"nativeSrc": "8852:30:4",
															"nodeType": "YulAssignment",
															"src": "8852:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:4"
																},
																"nativeSrc": "8866:16:4",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:4"
																}
															]
														},
														{
															"nativeSrc": "8895:23:4",
															"nodeType": "YulAssignment",
															"src": "8895:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:4"
																},
																"nativeSrc": "8910:8:4",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:4",
														"valueSize": 1
													},
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:4",
														"valueSize": 1
													},
													{
														"declaration": 558,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:4",
														"valueSize": 1
													},
													{
														"declaration": 561,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:4",
														"valueSize": 1
													},
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 563,
												"nodeType": "InlineAssembly",
												"src": "8507:421:4"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 564,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "8942:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 575,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "8994:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:4",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 569,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 552,
																			"src": "8968:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 567,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "8938:146:4",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "9012:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 582,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 552,
																				"src": "9066:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 580,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 579,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "9033:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 585,
															"nodeType": "RevertStatement",
															"src": "9026:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8399:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 551,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 550,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "8399:6:4"
													},
													"referencedDeclaration": 167,
													"src": "8399:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8413:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:4"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:4"
									},
									"scope": 631,
									"src": "8370:720:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "9681:391:4",
										"statements": [
											{
												"assignments": [
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9691:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 600,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:4"
											},
											{
												"assignments": [
													604
												],
												"declarations": [
													{
														"constant": false,
														"id": 604,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9713:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 603,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:4"
											},
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9741:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 608,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:4"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:4",
													"nodeType": "YulBlock",
													"src": "9795:174:4",
													"statements": [
														{
															"nativeSrc": "9809:71:4",
															"nodeType": "YulAssignment",
															"src": "9809:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:4"
																		},
																		"nativeSrc": "9825:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:4",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:4"
																		},
																		"nativeSrc": "9842:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:4"
																		},
																		"nativeSrc": "9859:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:4"
																},
																"nativeSrc": "9820:60:4",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:4"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:4"
																}
															]
														},
														{
															"nativeSrc": "9893:30:4",
															"nodeType": "YulAssignment",
															"src": "9893:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:4"
																},
																"nativeSrc": "9907:16:4",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:4"
																}
															]
														},
														{
															"nativeSrc": "9936:23:4",
															"nodeType": "YulAssignment",
															"src": "9936:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:4"
																},
																"nativeSrc": "9951:8:4",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 595,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:4",
														"valueSize": 1
													},
													{
														"declaration": 595,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:4",
														"valueSize": 1
													},
													{
														"declaration": 604,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:4",
														"valueSize": 1
													},
													{
														"declaration": 607,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:4",
														"valueSize": 1
													},
													{
														"declaration": 601,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:4",
														"valueSize": 1
													},
													{
														"declaration": 593,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 609,
												"nodeType": "InlineAssembly",
												"src": "9770:199:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 610,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "9985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 611,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "9997:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 622,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "10048:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:4",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 616,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 593,
																						"src": "10023:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 615,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 614,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 626,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 599,
												"id": 628,
												"nodeType": "Return",
												"src": "9978:87:4"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9625:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 591,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "9625:6:4"
													},
													"referencedDeclaration": 167,
													"src": "9625:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9639:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:4"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9675:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:4"
									},
									"scope": 631,
									"src": "9592:480:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 632,
							"src": "698:9376:4",
							"usedErrors": [
								179,
								188
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							643
						]
					},
					"id": 644,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 633,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 634,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:5",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 643,
							"linearizedBaseContracts": [
								643
							],
							"name": "IERC165",
							"nameLocation": "433:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "819:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 636,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:5"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "862:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:5"
									},
									"scope": 643,
									"src": "792:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 644,
							"src": "423:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:5"
				},
				"id": 5
			},
			"src/Contract Architecture/Core Infrastructure/UserVault.sol": {
				"ast": {
					"absolutePath": "src/Contract Architecture/Core Infrastructure/UserVault.sol",
					"exportedSymbols": {
						"AlreadyInitialized": [
							652
						],
						"IERC20": [
							167
						],
						"InvalidTarget": [
							662
						],
						"NotOwner": [
							654
						],
						"NotWhitelistedCaller": [
							660
						],
						"SafeERC20": [
							631
						],
						"TransferFailed": [
							658
						],
						"UserVault": [
							1193
						],
						"ZeroAddress": [
							656
						]
					},
					"id": 1194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 645,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 647,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1194,
							"sourceUnit": 168,
							"src": "670:72:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 646,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "679:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 649,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1194,
							"sourceUnit": 632,
							"src": "743:84:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 648,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 631,
										"src": "752:9:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"documentation": {
								"id": 650,
								"nodeType": "StructuredDocumentation",
								"src": "829:47:6",
								"text": "Basic errors (cheaper than revert strings)"
							},
							"errorSelector": "0dc149f0",
							"id": 652,
							"name": "AlreadyInitialized",
							"nameLocation": "882:18:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 651,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "900:2:6"
							},
							"src": "876:27:6"
						},
						{
							"errorSelector": "30cd7471",
							"id": 654,
							"name": "NotOwner",
							"nameLocation": "910:8:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 653,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "918:2:6"
							},
							"src": "904:17:6"
						},
						{
							"errorSelector": "d92e233d",
							"id": 656,
							"name": "ZeroAddress",
							"nameLocation": "928:11:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 655,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "939:2:6"
							},
							"src": "922:20:6"
						},
						{
							"errorSelector": "90b8ec18",
							"id": 658,
							"name": "TransferFailed",
							"nameLocation": "949:14:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 657,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "963:2:6"
							},
							"src": "943:23:6"
						},
						{
							"errorSelector": "5f3122fb",
							"id": 660,
							"name": "NotWhitelistedCaller",
							"nameLocation": "973:20:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 659,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "993:2:6"
							},
							"src": "967:29:6"
						},
						{
							"errorSelector": "82d5d76a",
							"id": 662,
							"name": "InvalidTarget",
							"nameLocation": "1003:13:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 661,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1016:2:6"
							},
							"src": "997:22:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UserVault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1193,
							"linearizedBaseContracts": [
								1193
							],
							"name": "UserVault",
							"nameLocation": "1030:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 666,
									"libraryName": {
										"id": 663,
										"name": "SafeERC20",
										"nameLocations": [
											"1052:9:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 631,
										"src": "1052:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "1046:27:6",
									"typeName": {
										"id": 665,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 664,
											"name": "IERC20",
											"nameLocations": [
												"1066:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 167,
											"src": "1066:6:6"
										},
										"referencedDeclaration": 167,
										"src": "1066:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$167",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "1079:34:6",
										"text": "@notice Vault owner (the user)"
									},
									"id": 669,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1134:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1118:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 668,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1118:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "1147:46:6",
										"text": "@notice Whether initialize has been called"
									},
									"id": 672,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "1211:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1198:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 671,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1198:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "1230:106:6",
										"text": "@notice Optional: an address allowed to call executeCall on behalf of the owner (e.g., ActionExecutor)"
									},
									"functionSelector": "54ba7696",
									"id": 677,
									"mutability": "mutable",
									"name": "executorWhitelist",
									"nameLocation": "1373:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "1341:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 676,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 674,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1349:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1341:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 675,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1360:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "1397:32:6",
										"text": "========== EVENTS =========="
									},
									"eventSelector": "908408e307fc569b417f6cbec5d5a06f44a0a505ac0479b47d421a4b2fd6a1e6",
									"id": 682,
									"name": "Initialized",
									"nameLocation": "1440:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1468:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1452:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:23:6"
									},
									"src": "1434:41:6"
								},
								{
									"anonymous": false,
									"eventSelector": "bfe611b001dfcd411432f7bf0d79b82b4b2ee81511edac123a3403c357fb972a",
									"id": 688,
									"name": "ETHReceived",
									"nameLocation": "1486:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1514:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "1498:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1528:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "1520:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1520:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1497:38:6"
									},
									"src": "1480:56:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e33e9822e3317b004d587136bab2627ea1ecfbba4eb79abddd0a56cfdd09c0e1",
									"id": 696,
									"name": "ERC20Deposited",
									"nameLocation": "1547:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1578:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1562:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1562:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1601:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1585:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1615:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1607:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1607:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1561:61:6"
									},
									"src": "1541:82:6"
								},
								{
									"anonymous": false,
									"eventSelector": "94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c",
									"id": 702,
									"name": "ETHWithdrawn",
									"nameLocation": "1634:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1663:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "1647:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1647:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1675:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "1667:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1646:36:6"
									},
									"src": "1628:55:6"
								},
								{
									"anonymous": false,
									"eventSelector": "bfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b1025362",
									"id": 710,
									"name": "ERC20Withdrawn",
									"nameLocation": "1694:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1725:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1709:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1748:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1732:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1760:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1752:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:59:6"
									},
									"src": "1688:80:6"
								},
								{
									"anonymous": false,
									"eventSelector": "19f4c310cf148369e5605e8f3538cee4d3495da0612c9a45c0b89105ed6fee4d",
									"id": 716,
									"name": "ExecutorWhitelisted",
									"nameLocation": "1779:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"indexed": true,
												"mutability": "mutable",
												"name": "executor",
												"nameLocation": "1815:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1799:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"indexed": false,
												"mutability": "mutable",
												"name": "allowed",
												"nameLocation": "1830:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1825:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1825:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:40:6"
									},
									"src": "1773:66:6"
								},
								{
									"anonymous": false,
									"eventSelector": "335a1fecd5558554165c05171954925d0d97911ad1d259ef6bb18eb2c07a58aa",
									"id": 728,
									"name": "ExecutedCall",
									"nameLocation": "1850:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "1879:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1863:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1903:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1887:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1919:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1911:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1911:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1932:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1926:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1926:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"indexed": false,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1944:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1938:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 725,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1938:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:89:6"
									},
									"src": "1844:108:6"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "2019:71:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 731,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2033:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2037:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2033:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 733,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2047:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2033:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "2029:43:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 735,
															"name": "NotOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "2062:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2062:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 737,
													"nodeType": "RevertStatement",
													"src": "2055:17:6"
												}
											},
											{
												"id": 739,
												"nodeType": "PlaceholderStatement",
												"src": "2082:1:6"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "1958:35:6",
										"text": "========== MODIFIERS =========="
									},
									"id": 741,
									"name": "onlyOwner",
									"nameLocation": "2007:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2016:2:6"
									},
									"src": "1998:92:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "2127:105:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 743,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2141:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2145:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2141:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 745,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "2155:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2141:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "2165:30:6",
														"subExpression": {
															"baseExpression": {
																"id": 747,
																"name": "executorWhitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "2166:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 750,
															"indexExpression": {
																"expression": {
																	"id": 748,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2184:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2188:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2184:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2166:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2141:54:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 756,
												"nodeType": "IfStatement",
												"src": "2137:77:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 753,
															"name": "NotOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "2204:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2204:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 755,
													"nodeType": "RevertStatement",
													"src": "2197:17:6"
												}
											},
											{
												"id": 757,
												"nodeType": "PlaceholderStatement",
												"src": "2224:1:6"
											}
										]
									},
									"id": 759,
									"name": "onlyOwnerOrExecutor",
									"nameLocation": "2105:19:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2124:2:6"
									},
									"src": "2096:136:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "2379:208:6",
										"statements": [
											{
												"condition": {
													"id": 765,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 672,
													"src": "2393:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 769,
												"nodeType": "IfStatement",
												"src": "2389:45:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 766,
															"name": "AlreadyInitialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "2414:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2414:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 768,
													"nodeType": "RevertStatement",
													"src": "2407:27:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "2448:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2466:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2458:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2458:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2458:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2448:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 779,
												"nodeType": "IfStatement",
												"src": "2444:46:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 776,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "2477:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2477:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 778,
													"nodeType": "RevertStatement",
													"src": "2470:20:6"
												}
											},
											{
												"expression": {
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 780,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2501:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 781,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "2510:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2501:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "2501:15:6"
											},
											{
												"expression": {
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 784,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2526:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2541:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2526:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "2526:19:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 789,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "2573:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 788,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "2561:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2561:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "EmitStatement",
												"src": "2556:24:6"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "2238:91:6",
										"text": "========== INITIALIZER ==========\n @dev called by the clone right after creation"
									},
									"functionSelector": "c4d66de8",
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "2343:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "2362:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2354:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:16:6"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2379:0:6"
									},
									"scope": 1193,
									"src": "2334:253:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "2683:30:6",
										"statements": [
											{
												"expression": {
													"id": 799,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 669,
													"src": "2700:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 798,
												"id": 800,
												"nodeType": "Return",
												"src": "2693:13:6"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "2593:36:6",
										"text": "========== OWNER VIEW =========="
									},
									"functionSelector": "8da5cb5b",
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2643:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2648:2:6"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "2674:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2674:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2673:9:6"
									},
									"scope": 1193,
									"src": "2634:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "2804:56:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 807,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2831:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2835:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2831:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 809,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2843:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2847:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2843:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "ETHReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "2819:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2819:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "EmitStatement",
												"src": "2814:39:6"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "2719:53:6",
										"text": "========== DEPOSITS ==========\n Accept ETH"
									},
									"id": 814,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2784:2:6"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2804:0:6"
									},
									"scope": 1193,
									"src": "2777:83:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "2964:56:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 819,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2991:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2995:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2991:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 821,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3003:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3007:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3003:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "ETHReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "2979:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2979:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "EmitStatement",
												"src": "2974:39:6"
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "2866:54:6",
										"text": "Convenience deposit function (no-op besides event)"
									},
									"functionSelector": "f6326fb3",
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositETH",
									"nameLocation": "2934:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2944:2:6"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2964:0:6"
									},
									"scope": 1193,
									"src": "2925:95:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "3261:118:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 834,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "3275:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3292:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3284:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 835,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3284:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3284:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3275:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 843,
												"nodeType": "IfStatement",
												"src": "3271:45:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 840,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3303:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3303:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 842,
													"nodeType": "RevertStatement",
													"src": "3296:20:6"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 845,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "3346:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 846,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3353:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3357:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3353:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "3365:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 844,
														"name": "ERC20Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "3331:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3331:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "EmitStatement",
												"src": "3326:46:6"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "3026:162:6",
										"text": "Called by user (or any address) that transferred ERC20 tokens to vault via `transfer`\n Use only to emit an indexed event for offchain indexing systems."
									},
									"functionSelector": "f32f1864",
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notifyERC20Deposit",
									"nameLocation": "3202:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3229:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "3221:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3221:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3244:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "3236:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3236:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3220:31:6"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3261:0:6"
									},
									"scope": 1193,
									"src": "3193:186:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "3535:190:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "3549:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3563:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3555:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3555:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3555:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 871,
												"nodeType": "IfStatement",
												"src": "3545:42:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 868,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3574:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3574:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 870,
													"nodeType": "RevertStatement",
													"src": "3567:20:6"
												}
											},
											{
												"assignments": [
													873,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 873,
														"mutability": "mutable",
														"name": "ok",
														"nameLocation": "3603:2:6",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "3598:7:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 872,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3598:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 880,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3634:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 874,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "3611:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3614:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3611:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 876,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "3626:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3611:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3611:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3597:40:6"
											},
											{
												"condition": {
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3651:3:6",
													"subExpression": {
														"id": 881,
														"name": "ok",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "3652:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 886,
												"nodeType": "IfStatement",
												"src": "3647:32:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 883,
															"name": "TransferFailed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "3663:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3663:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 885,
													"nodeType": "RevertStatement",
													"src": "3656:23:6"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 888,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "3707:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 889,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "3711:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 887,
														"name": "ETHWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3694:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3694:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "EmitStatement",
												"src": "3689:29:6"
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "3385:69:6",
										"text": "========== WITHDRAWALS ==========\n Owner-only withdraw ETH"
									},
									"functionSelector": "4782f779",
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 860,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 859,
												"name": "onlyOwner",
												"nameLocations": [
													"3525:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 741,
												"src": "3525:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3525:9:6"
										}
									],
									"name": "withdrawETH",
									"nameLocation": "3468:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3496:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3480:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3480:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3508:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "3500:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3500:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:36:6"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:6"
									},
									"scope": 1193,
									"src": "3459:266:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "3880:178:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 905,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "3894:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3911:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3903:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 906,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3903:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3903:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3894:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 911,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "3917:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3931:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3923:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 912,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3923:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3923:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3917:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3894:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 921,
												"nodeType": "IfStatement",
												"src": "3890:65:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 918,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3942:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3942:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 920,
													"nodeType": "RevertStatement",
													"src": "3935:20:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "3992:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "3996:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 923,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "3972:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 922,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "3965:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3965:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "3965:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3965:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "3965:38:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 931,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "4033:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 932,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "4040:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "4044:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 930,
														"name": "ERC20Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "4018:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4018:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "EmitStatement",
												"src": "4013:38:6"
											}
										]
									},
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "3731:29:6",
										"text": "Owner-only withdraw ERC20"
									},
									"functionSelector": "44004cc1",
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 903,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 902,
												"name": "onlyOwner",
												"nameLocations": [
													"3870:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 741,
												"src": "3870:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3870:9:6"
										}
									],
									"name": "withdrawERC20",
									"nameLocation": "3774:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3805:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "3797:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3797:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3828:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "3820:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3820:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3848:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "3840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3840:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3787:73:6"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3880:0:6"
									},
									"scope": 1193,
									"src": "3765:293:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "4229:198:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 949,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "4243:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4260:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4252:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4252:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4252:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4243:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 955,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "4266:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4285:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4277:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 956,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4277:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4277:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4266:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4243:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 965,
												"nodeType": "IfStatement",
												"src": "4239:70:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 962,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "4296:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4296:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 964,
													"nodeType": "RevertStatement",
													"src": "4289:20:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 970,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "4341:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "4350:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 967,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "4326:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 966,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "4319:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4319:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4333:7:6",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 154,
														"src": "4319:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "4319:38:6"
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "4064:41:6",
										"text": "Owner can approve a spender for ERC20"
									},
									"functionSelector": "a8e5e4aa",
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 947,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 946,
												"name": "onlyOwner",
												"nameLocations": [
													"4219:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 741,
												"src": "4219:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4219:9:6"
										}
									],
									"name": "approveERC20",
									"nameLocation": "4119:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4149:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4141:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4141:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4172:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4164:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4164:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4197:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4189:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4189:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4131:78:6"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4229:0:6"
									},
									"scope": 1193,
									"src": "4110:317:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "4648:165:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 985,
														"name": "executor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "4662:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4682:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4674:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 986,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4674:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4674:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4662:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "4658:48:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 991,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "4693:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4693:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 993,
													"nodeType": "RevertStatement",
													"src": "4686:20:6"
												}
											},
											{
												"expression": {
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 995,
															"name": "executorWhitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "4716:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 997,
														"indexExpression": {
															"id": 996,
															"name": "executor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "4734:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4716:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 998,
														"name": "allowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4746:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4716:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "4716:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1002,
															"name": "executor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "4788:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "4798:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1001,
														"name": "ExecutorWhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "4768:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4768:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "EmitStatement",
												"src": "4763:43:6"
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "4433:131:6",
										"text": "========== EXECUTOR WHITELIST (optional) ==========\n Add/remove an offchain/executor address allowed to call executeCall"
									},
									"functionSelector": "68fec4da",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 983,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 982,
												"name": "onlyOwner",
												"nameLocations": [
													"4638:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 741,
												"src": "4638:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4638:9:6"
										}
									],
									"name": "setExecutorAllowed",
									"nameLocation": "4578:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "executor",
												"nameLocation": "4605:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4597:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4597:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "allowed",
												"nameLocation": "4620:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4615:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 979,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4615:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4596:32:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4648:0:6"
									},
									"scope": 1193,
									"src": "4569:244:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "5601:605:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1021,
														"name": "target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "5615:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5633:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5625:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1022,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5625:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5625:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5615:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "5611:48:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1027,
															"name": "InvalidTarget",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "5644:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5644:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1029,
													"nodeType": "RevertStatement",
													"src": "5637:22:6"
												}
											},
											{
												"assignments": [
													1032,
													1034
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "ok",
														"nameLocation": "5735:2:6",
														"nodeType": "VariableDeclaration",
														"scope": 1067,
														"src": "5730:7:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1031,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5730:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1034,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "5752:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1067,
														"src": "5739:16:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1033,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5739:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1039,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "5785:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"expression": {
																"id": 1035,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "5759:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5766:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5759:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1037,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "5778:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5759:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5759:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5729:61:6"
											},
											{
												"condition": {
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5804:3:6",
													"subExpression": {
														"id": 1042,
														"name": "ok",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "5805:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1055,
												"nodeType": "IfStatement",
												"src": "5800:314:6",
												"trueBody": {
													"id": 1054,
													"nodeType": "Block",
													"src": "5809:305:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1044,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1034,
																		"src": "5874:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5878:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5874:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5887:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5874:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1050,
															"nodeType": "IfStatement",
															"src": "5870:197:6",
															"trueBody": {
																"id": 1049,
																"nodeType": "Block",
																"src": "5890:177:6",
																"statements": [
																	{
																		"AST": {
																			"nativeSrc": "5981:72:6",
																			"nodeType": "YulBlock",
																			"src": "5981:72:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "6014:2:6",
																										"nodeType": "YulLiteral",
																										"src": "6014:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "res",
																										"nativeSrc": "6018:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "6018:3:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6010:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6010:3:6"
																								},
																								"nativeSrc": "6010:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6010:12:6"
																							},
																							{
																								"arguments": [
																									{
																										"name": "res",
																										"nativeSrc": "6030:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "6030:3:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6024:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6024:5:6"
																								},
																								"nativeSrc": "6024:10:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6024:10:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "6003:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "6003:6:6"
																						},
																						"nativeSrc": "6003:32:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6003:32:6"
																					},
																					"nativeSrc": "6003:32:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "6003:32:6"
																				}
																			]
																		},
																		"evmVersion": "cancun",
																		"externalReferences": [
																			{
																				"declaration": 1034,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6018:3:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1034,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6030:3:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1048,
																		"nodeType": "InlineAssembly",
																		"src": "5972:81:6"
																	}
																]
															}
														},
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1051,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "6087:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6087:16:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1053,
															"nodeType": "RevertStatement",
															"src": "6080:23:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1057,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6142:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6146:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6142:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1059,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6154:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "6162:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1061,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "6169:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 1062,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "6175:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1056,
														"name": "ExecutedCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "6129:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6129:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "EmitStatement",
												"src": "6124:55:6"
											},
											{
												"expression": {
													"id": 1065,
													"name": "res",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1034,
													"src": "6196:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1020,
												"id": 1066,
												"nodeType": "Return",
												"src": "6189:10:6"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "4895:539:6",
										"text": " @notice Execute arbitrary call from the vault.\n @dev    Must be called by owner or a whitelisted executor. Returns raw call return data.\n         Use with caution â€” giving an executor this ability is equivalent to giving control\n         of the vault's funds to that executor.\n @param target The destination contract / address to call.\n @param value  Amount of ETH to send with the call.\n @param data   Calldata to send.\n @return result The returned data from the call."
									},
									"functionSelector": "9e5d4c49",
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1017,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1016,
												"name": "onlyOwnerOrExecutor",
												"nameLocations": [
													"5551:19:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 759,
												"src": "5551:19:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5551:19:6"
										}
									],
									"name": "executeCall",
									"nameLocation": "5448:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5477:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "5469:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5501:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "5493:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5493:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5531:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "5516:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1013,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5516:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5459:82:6"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5593:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "5580:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1018,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5580:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5579:21:6"
									},
									"scope": 1193,
									"src": "5439:767:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "6500:93:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "6528:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1091,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "6537:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1087,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "6513:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1086,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "6506:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6506:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6520:7:6",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 154,
														"src": "6506:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6506:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "6506:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1096,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "6574:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6582:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1098,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "6585:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"id": 1094,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "6557:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_UserVault_$1193",
																"typeString": "contract UserVault"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6562:11:6",
														"memberName": "executeCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1068,
														"src": "6557:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,uint256,bytes memory) external returns (bytes memory)"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6557:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1085,
												"id": 1100,
												"nodeType": "Return",
												"src": "6550:40:6"
											}
										]
									},
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "6212:100:6",
										"text": "========== HELPERS ==========\n Approve then call helper (useful for DEX routing patterns)"
									},
									"functionSelector": "103657e7",
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1082,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1081,
												"name": "onlyOwnerOrExecutor",
												"nameLocations": [
													"6457:19:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 759,
												"src": "6457:19:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6457:19:6"
										}
									],
									"name": "approveAndCall",
									"nameLocation": "6326:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6354:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "6346:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6346:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6373:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "6365:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6365:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6394:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "6386:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6386:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6414:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "6406:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6406:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6441:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "6426:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1078,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6426:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6340:107:6"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "6486:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1083,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6486:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6485:14:6"
									},
									"scope": 1193,
									"src": "6317:276:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "6773:180:6",
										"statements": [
											{
												"assignments": [
													1111
												],
												"declarations": [
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "6791:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1140,
														"src": "6783:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6783:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1121,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1118,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6829:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UserVault_$1193",
																		"typeString": "contract UserVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UserVault_$1193",
																		"typeString": "contract UserVault"
																	}
																],
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6821:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1116,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6821:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6821:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1113,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "6804:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1112,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "6797:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6797:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6811:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "6797:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6797:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6783:52:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1122,
														"name": "bal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "6849:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6855:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6849:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1133,
												"nodeType": "IfStatement",
												"src": "6845:52:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 1129,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "6885:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1130,
																"name": "bal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "6893:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1126,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "6865:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1125,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6858:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6858:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6872:12:6",
															"memberName": "safeTransfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 212,
															"src": "6858:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
																"typeString": "function (contract IERC20,address,uint256)"
															}
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6858:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1132,
													"nodeType": "ExpressionStatement",
													"src": "6858:39:6"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1135,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "6927:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1136,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "6934:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "bal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "6942:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1134,
														"name": "ERC20Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "6912:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6912:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "EmitStatement",
												"src": "6907:39:6"
											}
										]
									},
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "6599:103:6",
										"text": "========== EMERGENCY ==========\n Emergency withdraw all ETH and tokens to owner (owner-only)"
									},
									"functionSelector": "40c442de",
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1108,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1107,
												"name": "onlyOwner",
												"nameLocations": [
													"6763:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 741,
												"src": "6763:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6763:9:6"
										}
									],
									"name": "emergencyWithdrawERC20",
									"nameLocation": "6716:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6747:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "6739:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6739:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6738:15:6"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6773:0:6"
									},
									"scope": 1193,
									"src": "6707:246:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "7010:239:6",
										"statements": [
											{
												"assignments": [
													1147
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "7028:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1182,
														"src": "7020:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7020:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1153,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1150,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "7042:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UserVault_$1193",
																	"typeString": "contract UserVault"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UserVault_$1193",
																	"typeString": "contract UserVault"
																}
															],
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7034:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1148,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7034:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7034:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7048:7:6",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "7034:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7020:35:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1154,
														"name": "bal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "7069:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7075:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7069:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1181,
												"nodeType": "IfStatement",
												"src": "7065:178:6",
												"trueBody": {
													"id": 1180,
													"nodeType": "Block",
													"src": "7078:165:6",
													"statements": [
														{
															"assignments": [
																1158,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1158,
																	"mutability": "mutable",
																	"name": "ok",
																	"nameLocation": "7098:2:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1180,
																	"src": "7093:7:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1157,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "7093:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1168,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7139:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1161,
																					"name": "_owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "7114:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1160,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7106:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 1159,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7106:8:6",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7106:15:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7122:4:6",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "7106:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1164,
																			"name": "bal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "7134:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "7106:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7106:36:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7092:50:6"
														},
														{
															"condition": {
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "7160:3:6",
																"subExpression": {
																	"id": 1169,
																	"name": "ok",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "7161:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1174,
															"nodeType": "IfStatement",
															"src": "7156:32:6",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1171,
																		"name": "TransferFailed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "7172:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7172:16:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1173,
																"nodeType": "RevertStatement",
																"src": "7165:23:6"
															}
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1176,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "7220:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1177,
																		"name": "bal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "7228:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1175,
																	"name": "ETHWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "7207:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7207:25:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1179,
															"nodeType": "EmitStatement",
															"src": "7202:30:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "84536017",
									"id": 1183,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1144,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1143,
												"name": "onlyOwner",
												"nameLocations": [
													"7000:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 741,
												"src": "7000:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7000:9:6"
										}
									],
									"name": "emergencyWithdrawETH",
									"nameLocation": "6968:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6988:2:6"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7010:0:6"
									},
									"scope": 1193,
									"src": "6959:290:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "7352:36:6",
										"statements": [
											{
												"expression": {
													"id": 1189,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 672,
													"src": "7369:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1188,
												"id": 1190,
												"nodeType": "Return",
												"src": "7362:19:6"
											}
										]
									},
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "7255:38:6",
										"text": "========== VIEW HELPERS =========="
									},
									"functionSelector": "392e53cd",
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isInitialized",
									"nameLocation": "7307:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7320:2:6"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "7346:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7346:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7345:6:6"
									},
									"scope": 1193,
									"src": "7298:90:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1194,
							"src": "1021:6369:6",
							"usedErrors": [
								179,
								652,
								654,
								656,
								658,
								662
							],
							"usedEvents": [
								682,
								688,
								696,
								702,
								710,
								716,
								728
							]
						}
					],
					"src": "32:7359:6"
				},
				"id": 6
			}
		}
	}
}