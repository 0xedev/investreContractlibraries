{
	"id": "ee0f352475ec1c6a5fcc6877cf9aaa77",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/**\n * @title GiveawayManager\n * @notice Onchain, scheduled token giveaways with VRF-backed winner selection and secure claims.\n *\n * Features:\n *  - ERC20 and native ETH (token == address(0))\n *  - startTime / endTime scheduling\n *  - Optional eligibility verifier for gated entry (likes/recasts/replies)\n *  - Onchain participant storage (dedupe)\n *  - Random winner drawing via pluggable randomness provider\n *  - Equal prize per winner; creator can sweep remainder after all claims\n *\n * Trust boundaries:\n *  - Funds are escrowed in this contract per giveaway.\n *  - Randomness is supplied by `IRandomnessProvider` (e.g., Chainlink VRF wrapper).\n *  - Eligibility (optional) is enforced by `IEligibilityVerifier`.\n */\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ninterface IEligibilityVerifier {\n    /// @notice Return true if `user` is eligible to enter the given giveaway.\n    function isEligible(uint256 giveawayId, address user) external view returns (bool);\n}\n\ninterface IRandomnessProvider {\n    /// @notice Called by GiveawayManager to request randomness. Should arrange a later callback.\n    function requestRandomness(uint256 giveawayId) external returns (bytes32 reqId);\n}\n\ncontract GiveawayManager is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    address public constant NATIVE = address(0);\n\n    // --- External hooks ---\n    IRandomnessProvider public randomnessProvider; // must call back fulfillRandomness\n    IEligibilityVerifier public eligibilityVerifier; // optional (can be address(0))\n\n    event RandomnessProviderUpdated(address indexed provider);\n    event EligibilityVerifierUpdated(address indexed verifier);\n\n    // --- Giveaway model ---\n    struct Giveaway {\n        address creator;\n        address token;        // ERC20 or address(0) for native\n        uint256 totalAmount;  // escrowed\n        uint64  startTime;    // unix seconds\n        uint64  endTime;      // unix seconds\n        uint32  maxWinners;   // >=1\n        bool    drawn;        // winners selected\n        bool    cancelled;    // creator cancelled before draw\n        uint256 randomWord;   // set on VRF fulfillment\n        uint32  winnersCount; // actual number selected (min(maxWinners, participants))\n        uint32  claims;       // number of winners who claimed\n        uint96  perWinner;    // computed on finalize (equal split)\n        uint96  remainder;    // leftover after equal split (creator can sweep after all claims)\n    }\n\n    uint256 public nextGiveawayId;\n    mapping(uint256 => Giveaway) public giveaways;\n\n    // Participants\n    mapping(uint256 => address[]) public participants;\n    mapping(uint256 => mapping(address => bool)) public hasEntered;\n\n    // Winners set & claim status\n    mapping(uint256 => address[]) public winners;\n    mapping(uint256 => mapping(address => bool)) public isWinner;\n    mapping(uint256 => mapping(address => bool)) public hasClaimed;\n\n    // --- Events ---\n    event GiveawayCreated(\n        uint256 indexed id,\n        address indexed creator,\n        address indexed token,\n        uint256 amount,\n        uint64 startTime,\n        uint64 endTime,\n        uint32 maxWinners\n    );\n    event Entered(uint256 indexed id, address indexed user);\n    event Cancelled(uint256 indexed id);\n    event RandomnessRequested(uint256 indexed id, bytes32 reqId);\n    event RandomnessFulfilled(uint256 indexed id, uint256 randomWord);\n    event WinnersFinalized(uint256 indexed id, uint32 winnersCount, uint96 perWinner, uint96 remainder);\n    event Claimed(uint256 indexed id, address indexed winner, uint256 amount);\n    event RemainderSwept(uint256 indexed id, address indexed to, uint256 amount);\n\n    constructor(address _randomnessProvider, address _eligibilityVerifier) Ownable(msg.sender) {\n        if (_randomnessProvider != address(0)) {\n            randomnessProvider = IRandomnessProvider(_randomnessProvider);\n            emit RandomnessProviderUpdated(_randomnessProvider);\n        }\n        if (_eligibilityVerifier != address(0)) {\n            eligibilityVerifier = IEligibilityVerifier(_eligibilityVerifier);\n            emit EligibilityVerifierUpdated(_eligibilityVerifier);\n        }\n    }\n\n    // --- Admin wiring ---\n\n    function setRandomnessProvider(address _p) external onlyOwner {\n        randomnessProvider = IRandomnessProvider(_p);\n        emit RandomnessProviderUpdated(_p);\n    }\n\n    function setEligibilityVerifier(address _v) external onlyOwner {\n        eligibilityVerifier = IEligibilityVerifier(_v);\n        emit EligibilityVerifierUpdated(_v);\n    }\n\n    // --- Create / Fund ---\n\n    /**\n     * @notice Create a giveaway. For ERC20, prior approve is required. For native, send `amount` as msg.value.\n     */\n    function createGiveaway(\n        address token,\n        uint256 amount,\n        uint64  startTime,\n        uint64  endTime,\n        uint32  maxWinners\n    ) external payable returns (uint256 id) {\n        require(amount > 0, \"amount=0\");\n        require(maxWinners >= 1, \"winners=0\");\n        require(endTime == 0 || endTime > startTime, \"time\");\n        if (startTime == 0) startTime = uint64(block.timestamp);\n\n        // Pull funds\n        if (token == NATIVE) {\n            require(msg.value == amount, \"bad value\");\n        } else {\n            IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\n            require(msg.value == 0, \"no eth\");\n        }\n\n        id = ++nextGiveawayId;\n        giveaways[id] = Giveaway({\n            creator: msg.sender,\n            token: token,\n            totalAmount: amount,\n            startTime: startTime,\n            endTime: endTime,\n            maxWinners: maxWinners,\n            drawn: false,\n            cancelled: false,\n            randomWord: 0,\n            winnersCount: 0,\n            claims: 0,\n            perWinner: 0,\n            remainder: 0\n        });\n\n        emit GiveawayCreated(id, msg.sender, token, amount, startTime, endTime, maxWinners);\n    }\n\n    // --- Participation ---\n\n    function enterGiveaway(uint256 id) external {\n        Giveaway memory g = giveaways[id];\n        require(g.creator != address(0), \"not found\");\n        require(!g.cancelled, \"cancelled\");\n        require(block.timestamp >= g.startTime, \"not started\");\n        if (g.endTime != 0) require(block.timestamp <= g.endTime, \"ended\");\n        require(!g.drawn, \"already drawn\");\n\n        // Optional eligibility\n        if (address(eligibilityVerifier) != address(0)) {\n            require(eligibilityVerifier.isEligible(id, msg.sender), \"ineligible\");\n        }\n\n        require(!hasEntered[id][msg.sender], \"already\");\n        hasEntered[id][msg.sender] = true;\n        participants[id].push(msg.sender);\n\n        emit Entered(id, msg.sender);\n    }\n\n    // --- Cancellation (before draw)\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206bfdc9ac7dcde7d0d9e24a3daef55fe1e4d0511b16864fa15835cba9402bd75464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212206bfdc9ac7dcde7d0d9e24a3daef55fe1e4d0511b16864fa15835cba9402bd75464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xFDC9AC7DCDE7D0D9E24A3DAE CREATE2 PUSH0 0xE1 0xE4 0xD0 MLOAD SHL AND DUP7 0x4F LOG1 PC CALLDATALOAD 0xCB 0xA9 BLOCKHASH 0x2B 0xD7 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea26469706673582212206bfdc9ac7dcde7d0d9e24a3daef55fe1e4d0511b16864fa15835cba9402bd75464736f6c634300081a0033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xFDC9AC7DCDE7D0D9E24A3DAE CREATE2 PUSH0 0xE1 0xE4 0xD0 MLOAD SHL AND DUP7 0x4F LOG1 PC CALLDATALOAD 0xCB 0xA9 BLOCKHASH 0x2B 0xD7 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:6:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "library_deploy_address"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206bfdc9ac7dcde7d0d9e24a3daef55fe1e4d0511b16864fa15835cba9402bd75464736f6c634300081a0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol": {
				"GiveawayManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_randomnessProvider",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_eligibilityVerifier",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "Cancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "verifier",
									"type": "address"
								}
							],
							"name": "EligibilityVerifierUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "Entered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "startTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "endTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "maxWinners",
									"type": "uint32"
								}
							],
							"name": "GiveawayCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "randomWord",
									"type": "uint256"
								}
							],
							"name": "RandomnessFulfilled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "RandomnessProviderUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "reqId",
									"type": "bytes32"
								}
							],
							"name": "RandomnessRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RemainderSwept",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "winnersCount",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "perWinner",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "remainder",
									"type": "uint96"
								}
							],
							"name": "WinnersFinalized",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "NATIVE",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint64",
									"name": "startTime",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "endTime",
									"type": "uint64"
								},
								{
									"internalType": "uint32",
									"name": "maxWinners",
									"type": "uint32"
								}
							],
							"name": "createGiveaway",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eligibilityVerifier",
							"outputs": [
								{
									"internalType": "contract IEligibilityVerifier",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "enterGiveaway",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "giveaways",
							"outputs": [
								{
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint64",
									"name": "startTime",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "endTime",
									"type": "uint64"
								},
								{
									"internalType": "uint32",
									"name": "maxWinners",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "drawn",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "cancelled",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "randomWord",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "winnersCount",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "claims",
									"type": "uint32"
								},
								{
									"internalType": "uint96",
									"name": "perWinner",
									"type": "uint96"
								},
								{
									"internalType": "uint96",
									"name": "remainder",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasClaimed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasEntered",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isWinner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextGiveawayId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "participants",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "randomnessProvider",
							"outputs": [
								{
									"internalType": "contract IRandomnessProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_v",
									"type": "address"
								}
							],
							"name": "setEligibilityVerifier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_p",
									"type": "address"
								}
							],
							"name": "setRandomnessProvider",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "winners",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n  0x80\n  jumpi(tag_6, callvalue)\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_4\n  jumpi\n  dup1\n  dup5\n  swap3\n  0x40\n  swap5\n  dup6\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_6\n  jumpi\n  tag_8\n  0x20\n  tag_9\n  dup4\n  tag_1\n  jump\t// in\ntag_9:\n  swap3\n  add\n  tag_1\n  jump\t// in\ntag_8:\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4072:4082  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  iszero\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n  0x00\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n  dup1\n  sload\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4072:4082  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n  dup3\n  and\n  dup2\n  or\n  dup4\n  sstore\n  mload(0x40)\n  swap5\n  swap3\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4072:4082  msg.sender */\n  swap1\n  swap2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n  and\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  dup1\n  log3\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n  dup1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n  and\n  dup1\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4094:4284  if (_randomnessProvider != address(0)) {... */\n  tag_12\n  jumpi\ntag_13:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n  and\n  dup1\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4293:4489  if (_eligibilityVerifier != address(0)) {... */\n  tag_14\n  jumpi\ntag_15:\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n  pop\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4293:4489  if (_eligibilityVerifier != address(0)) {... */\ntag_14:\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4347:4411  eligibilityVerifier = IEligibilityVerifier(_eligibilityVerifier) */\n  0x03\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  dup3\n  or\n  swap1\n  sstore\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4430:4478  EligibilityVerifierUpdated(_eligibilityVerifier) */\n  0x523584dd19b074bf12112a06b4ccfc2c91696564a12a6d76cdaa62c87da72868\n  0x00\n  dup1\n  log2\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4293:4489  if (_eligibilityVerifier != address(0)) {... */\n  0x00\n  jump(tag_15)\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4094:4284  if (_randomnessProvider != address(0)) {... */\ntag_12:\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4147:4208  randomnessProvider = IRandomnessProvider(_randomnessProvider) */\n  0x02\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  dup3\n  or\n  swap1\n  sstore\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4227:4273  RandomnessProviderUpdated(_randomnessProvider) */\n  0x87b050f471f7331bfd8fc9347cd54894f2ae6663e3339e49ca0d8b2dbe792eb2\n  0x00\n  dup1\n  log2\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4094:4284  if (_randomnessProvider != address(0)) {... */\n  0x00\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mstore(0x00, shl(0xe0, 0x1e4fbdf7))\n  0x00\n  0x04\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n  mstore\n  0x24\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  revert\n    /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\ntag_6:\n  0x00\n  dup1\n  revert\ntag_4:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_1:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_6\n  jumpi\n  jump\t// out\nstop\n\nsub_0: assembly {\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_8, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_8:\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x073c74f3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x0efc8865\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x193f453e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x2e1352c3\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x3e06df3d\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6ac56ac0\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x81fb1fb4\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x873f6f9e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xa0cf0aea\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xa14ea2b8\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xb15fbc14\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xbdd415af\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xce9bf5ac\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xe6414e37\n      eq\n      tag_40\n      jumpi\n      0xf2fde38b\n      eq\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      jumpi(tag_46, callvalue)\n      jumpi(tag_46, slt(add(not(0x03), calldatasize), 0x20))\n      tag_48\n      tag_2\n      jump\t// in\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_49\n      tag_7\n      jump\t// in\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_50\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x00\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup4\n      or\n      dup3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      shl(0xe0, 0x1e4fbdf7)\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      mstore(0x04, 0x00)\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      revert\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n    tag_46:\n      0x00\n      dup1\n      revert\n    tag_40:\n      jumpi(tag_46, callvalue)\n      jumpi(tag_46, slt(add(not(0x03), calldatasize), 0x20))\n      tag_56\n      tag_2\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_57\n      tag_7\n      jump\t// in\n    tag_57:\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4776:4822  eligibilityVerifier = IEligibilityVerifier(_v) */\n      0x03\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      dup3\n      or\n      swap1\n      sstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4837:4867  EligibilityVerifierUpdated(_v) */\n      0x523584dd19b074bf12112a06b4ccfc2c91696564a12a6d76cdaa62c87da72868\n      0x00\n      dup1\n      log2\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      stop\n    tag_38:\n      jumpi(tag_46, callvalue)\n      jumpi(tag_46, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1684:1729  IRandomnessProvider public randomnessProvider */\n      0x02\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_36:\n      jumpi(tag_46, callvalue)\n      jumpi(tag_46, slt(add(not(0x03), calldatasize), 0x40))\n      tag_66\n      tag_1\n      jump\t// in\n    tag_66:\n      mstore(0x00, calldataload(0x04))\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":3104:3164  mapping(uint256 => mapping(address => bool)) public isWinner */\n      0x09\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":3104:3164  mapping(uint256 => mapping(address => bool)) public isWinner */\n      swap1\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_34:\n      jumpi(tag_46, callvalue)\n      jumpi(tag_46, slt(add(not(0x03), calldatasize), 0x20))\n      tag_71\n      tag_2\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_72\n      tag_7\n      jump\t// in\n    tag_72:\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4602:4646  randomnessProvider = IRandomnessProvider(_p) */\n      0x02\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      dup3\n      or\n      swap1\n      sstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":4661:4690  RandomnessProviderUpdated(_p) */\n      0x87b050f471f7331bfd8fc9347cd54894f2ae6663e3339e49ca0d8b2dbe792eb2\n      0x00\n      dup1\n      log2\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      stop\n    tag_32:\n      jumpi(tag_46, callvalue)\n      jumpi(tag_46, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1771:1818  IEligibilityVerifier public eligibilityVerifier */\n      0x03\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_30:\n      jumpi(tag_46, callvalue)\n      jumpi(tag_46, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      return\n    tag_28:\n      jumpi(tag_46, callvalue)\n      jumpi(tag_46, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x00)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_26:\n      jumpi(tag_46, callvalue)\n      jumpi(tag_46, slt(add(not(0x03), calldatasize), 0x40))\n      tag_89\n      tag_1\n      jump\t// in\n    tag_89:\n      mstore(0x00, calldataload(0x04))\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":3170:3232  mapping(uint256 => mapping(address => bool)) public hasClaimed */\n      0x0a\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":3170:3232  mapping(uint256 => mapping(address => bool)) public hasClaimed */\n      swap1\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_24:\n      jumpi(tag_46, callvalue)\n      tag_92\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_92:\n      swap1\n      0x00\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":2896:2945  mapping(uint256 => address[]) public participants */\n      0x06\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":2896:2945  mapping(uint256 => address[]) public participants */\n      dup3\n      lt\n      iszero\n      tag_46\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":2896:2945  mapping(uint256 => address[]) public participants */\n      swap2\n      tag_95\n      swap2\n      tag_4\n      jump\t// in\n    tag_95:\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      swap1\n      sload\n      mload(0x40)\n      0x03\n      swap3\n      swap1\n      swap3\n      shl\n      shr\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      return\n    tag_22:\n      jumpi(tag_46, callvalue)\n      jumpi(tag_46, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_100\n      tag_7\n      jump\t// in\n    tag_100:\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x00\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      dup3\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      stop\n    tag_20:\n      jumpi(tag_46, callvalue)\n      jumpi(tag_46, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      sload(0x04)\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_18:\n      jumpi(tag_46, callvalue)\n      jumpi(tag_46, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":2824:2869  mapping(uint256 => Giveaway) public giveaways */\n      0x05\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x20\n      mstore\n      0x01a0\n      keccak256(0x00, 0x40)\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      sload\n      and\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x01\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":2824:2869  mapping(uint256 => Giveaway) public giveaways */\n      dup3\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      sload\n      and\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":2824:2869  mapping(uint256 => Giveaway) public giveaways */\n      swap1\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0xff\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":2824:2869  mapping(uint256 => Giveaway) public giveaways */\n      0x02\n      dup3\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      sload\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":2824:2869  mapping(uint256 => Giveaway) public giveaways */\n      0x03\n      dup4\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      sload\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":2824:2869  mapping(uint256 => Giveaway) public giveaways */\n      swap1\n      0x05\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x04\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":2824:2869  mapping(uint256 => Giveaway) public giveaways */\n      dup6\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      sload\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":2824:2869  mapping(uint256 => Giveaway) public giveaways */\n      swap5\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      sload\n      swap5\n      mload(0x40)\n      swap7\n      dup8\n      mstore\n      0x20\n      dup8\n      add\n      mstore\n      0x40\n      dup7\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      and\n      0x60\n      dup7\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      0x40\n      shr\n      and\n      0x80\n      dup7\n      add\n      mstore\n      0xffffffff\n      dup2\n      0x80\n      shr\n      and\n      0xa0\n      dup7\n      add\n      mstore\n      dup2\n      dup2\n      0xa0\n      shr\n      and\n      iszero\n      iszero\n      0xc0\n      dup7\n      add\n      mstore\n      0xa8\n      shr\n      and\n      iszero\n      iszero\n      0xe0\n      dup5\n      add\n      mstore\n      0x0100\n      dup4\n      add\n      mstore\n      0xffffffff\n      dup2\n      and\n      0x0120\n      dup4\n      add\n      mstore\n      0xffffffff\n      dup2\n      0x20\n      shr\n      and\n      0x0140\n      dup4\n      add\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      dup2\n      0x40\n      shr\n      and\n      0x0160\n      dup4\n      add\n      mstore\n      0xa0\n      shr\n      0x0180\n      dup3\n      add\n      mstore\n      return\n    tag_16:\n      jumpi(tag_46, slt(add(not(0x03), calldatasize), 0xa0))\n      tag_111\n      tag_2\n      jump\t// in\n    tag_111:\n      calldataload(0x24)\n      calldataload(0x44)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      and\n      swap2\n      dup3\n      dup3\n      sub\n      tag_46\n      jumpi\n      calldataload(0x64)\n      swap4\n      sub(shl(0x40, 0x01), 0x01)\n      dup6\n      and\n      dup1\n      swap6\n      sub\n      tag_46\n      jumpi\n      calldataload(0x84)\n      swap3\n      0xffffffff\n      dup5\n      and\n      dup1\n      swap5\n      sub\n      tag_46\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5251:5261  amount > 0 */\n      swap4\n      dup3\n      iszero\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      tag_118\n      jumpi\n      0x01\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5292:5307  maxWinners >= 1 */\n      dup5\n      lt\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      tag_120\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5339:5351  endTime == 0 */\n      dup6\n      iszero\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5339:5374  endTime == 0 || endTime > startTime */\n      dup1\n      iszero\n      tag_122\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n    tag_123:\n      iszero\n      tag_124\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5397:5411  startTime == 0 */\n      iszero\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5393:5448  if (startTime == 0) startTime = uint64(block.timestamp) */\n      tag_126\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5485:5500  token == NATIVE */\n      dup3\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      tag_128\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5524:5533  msg.value */\n      dup2\n      callvalue\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5524:5543  msg.value == amount */\n      sub\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      tag_130\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5481:5711  if (token == NATIVE) {... */\n    tag_132:\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      sload(0x04)\n      swap5\n      not(0x00)\n      dup7\n      eq\n      tag_133\n      jumpi\n      0x01\n      0x20\n      swap7\n      add\n      swap5\n      dup6\n      0x04\n      sstore\n      0x00\n      dup1\n      dup1\n      dup9\n      0xffffffff\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5752:5761  giveaways */\n      0x05\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      mload(0x40)\n      tag_135\n      dup2\n      tag_5\n      jump\t// in\n    tag_135:\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5800:5810  msg.sender */\n      caller\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5768:6167  Giveaway({... */\n      dup14\n      dup2\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      dup13\n      dup2\n      mstore\n      0x40\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5768:6167  Giveaway({... */\n      dup3\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      swap9\n      dup13\n      dup11\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      0x60\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5768:6167  Giveaway({... */\n      dup5\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      swap2\n      and\n      swap10\n      dup11\n      dup3\n      mstore\n      0x80\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5768:6167  Giveaway({... */\n      dup5\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      swap1\n      dup13\n      dup3\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5768:6167  Giveaway({... */\n      dup14\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0xa0\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5768:6167  Giveaway({... */\n      dup7\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5768:6167  Giveaway({... */\n      0xc0\n      dup7\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      swap1\n      dup11\n      dup3\n      mstore\n      0xe0\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5768:6167  Giveaway({... */\n      dup8\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      swap3\n      dup12\n      dup5\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5768:6167  Giveaway({... */\n      0x0100\n      dup9\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      swap7\n      dup13\n      dup9\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5768:6167  Giveaway({... */\n      0x0120\n      dup10\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      swap15\n      dup16\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5768:6167  Giveaway({... */\n      0x0140\n      dup10\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      swap14\n      dup15\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5768:6167  Giveaway({... */\n      0x0160\n      dup10\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      swap12\n      dup14\n      dup14\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5768:6167  Giveaway({... */\n      0x0180\n      dup11\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      swap14\n      dup15\n      mstore\n      0x00\n      mstore\n      0x20\n      dup11\n      swap1\n      mstore\n      keccak256(0x00, 0x40)\n      swap9\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      mload\n      and\n      and\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      dup11\n      sload\n      and\n      or\n      dup10\n      sstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      mload\n      and\n      0x01\n      dup10\n      add\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      mload\n      0x02\n      dup9\n      add\n      sstore\n      sub(shl(0x40, 0x01), 0x01)\n      0x03\n      dup9\n      add\n      swap6\n      mload\n      and\n      swap1\n      0xffffffffffffffff0000000000000000\n      dup7\n      sload\n      swap6\n      mload\n      0x40\n      shl\n      and\n      swap1\n      dup11\n      0x80\n      shl\n      swap1\n      mload\n      0x80\n      shl\n      and\n      swap3\n      mload\n      iszero\n      iszero\n      0xa0\n      shl\n      swap4\n      shl(0xa8, 0xff)\n      swap1\n      mload\n      iszero\n      iszero\n      0xa8\n      shl\n      and\n      swap5\n      not(shl(0xa8, 0xff))\n      swap3\n      not(shl(0xa0, 0xff))\n      swap2\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      and\n      or\n      and\n      or\n      and\n      or\n      swap1\n      shl(0xa0, 0xff)\n      and\n      or\n      or\n      swap1\n      sstore\n      mload\n      0x04\n      dup3\n      add\n      sstore\n      add\n      swap5\n      mload\n      and\n      swap3\n      0xffffffffffffffffffffffff0000000000000000\n      0xffffffff00000000\n      dup7\n      sload\n      swap3\n      mload\n      dup15\n      shl\n      and\n      swap3\n      mload\n      0x40\n      shl\n      and\n      swap3\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      swap1\n      mload\n      0xa0\n      shl\n      and\n      swap4\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap2\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      and\n      or\n      and\n      or\n      or\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap4\n      dup5\n      mstore\n      dup7\n      dup5\n      add\n      mstore\n      0x40\n      dup4\n      add\n      mstore\n      0x60\n      dup3\n      add\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5800:5810  msg.sender */\n      dup3\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6183:6261  GiveawayCreated(id, msg.sender, token, amount, startTime, endTime, maxWinners) */\n      0x962c97b71f3c7f35b27f4570b64d7b71858ecd66da4ad735b2b15ad782cc69d7\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x80\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5800:5810  msg.sender */\n      caller\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6183:6261  GiveawayCreated(id, msg.sender, token, amount, startTime, endTime, maxWinners) */\n      swap4\n      log4\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_133:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_130:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x09\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb8, 0x6261642076616c7565)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5481:5711  if (token == NATIVE) {... */\n    tag_128:\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x20\n      0x00\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup3\n      dup2\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup3\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5619:5629  msg.sender */\n      caller\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x24\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup3\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5639:5643  this */\n      address\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x44\n      dup3\n      add\n      mstore\n      dup6\n      0x64\n      dup3\n      add\n      mstore\n      0x64\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup2\n      mstore\n      tag_136\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x84\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup3\n      tag_6\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      swap1\n      dup3\n      dup8\n      gas\n      call\n      iszero\n      tag_137\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      pop\n      dup3\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      tag_142\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5675:5684  msg.value */\n      callvalue\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      iszero\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5481:5711  if (token == NATIVE) {... */\n      tag_132\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x06\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xd3, 0x0dcde40cae8d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      dup3\n      shl(0xe0, 0x5274afe7)\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x04\n      mstore\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_139:\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_141)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n    tag_137:\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      returndatasize\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5393:5448  if (startTime == 0) startTime = uint64(block.timestamp) */\n    tag_126:\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5432:5447  block.timestamp */\n      timestamp\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      and\n      swap4\n      pop\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5393:5448  if (startTime == 0) startTime = uint64(block.timestamp) */\n      jump(tag_127)\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n    tag_124:\n      0x64\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x04\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xe0, 0x74696d65)\n      0x44\n      dup3\n      add\n      mstore\n      revert\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5339:5374  endTime == 0 || endTime > startTime */\n    tag_122:\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5355:5374  endTime > startTime */\n      pop\n      dup1\n      dup7\n      gt\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":5339:5374  endTime == 0 || endTime > startTime */\n      jump(tag_123)\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n    tag_120:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x09\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xbc, 0x077696e6e6572733d3)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_118:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x08\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xc4, 0x0616d6f756e743d3)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_14:\n      jumpi(tag_46, callvalue)\n      jumpi(tag_46, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup1\n      0x00\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6378:6387  giveaways */\n      0x05\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      tag_150\n      dup2\n      tag_5\n      jump\t// in\n    tag_150:\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      sload\n      and\n      dup1\n      dup3\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x01\n      dup5\n      add\n      sload\n      and\n      0x20\n      dup4\n      add\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      0x40\n      dup4\n      add\n      mstore\n      0x03\n      dup4\n      add\n      sload\n      0x60\n      dup4\n      add\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      and\n      dup4\n      mstore\n      0x80\n      dup5\n      add\n      swap4\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      0x40\n      shr\n      and\n      dup6\n      mstore\n      0xffffffff\n      dup4\n      0x80\n      shr\n      and\n      0xa0\n      dup3\n      add\n      mstore\n      0x0180\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6378:6387  giveaways */\n      0x05\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0xc0\n      dup4\n      add\n      swap8\n      0xff\n      dup7\n      0xa0\n      shr\n      and\n      iszero\n      iszero\n      dup10\n      mstore\n      0xff\n      0xe0\n      dup6\n      add\n      swap7\n      0xa8\n      shr\n      and\n      iszero\n      iszero\n      dup7\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x0100\n      dup6\n      add\n      mstore\n      add\n      sload\n      0xffffffff\n      dup2\n      and\n      0x0120\n      dup5\n      add\n      mstore\n      0xffffffff\n      dup2\n      0x20\n      shr\n      and\n      0x0140\n      dup5\n      add\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      dup2\n      0x40\n      shr\n      and\n      0x0160\n      dup5\n      add\n      mstore\n      0xa0\n      shr\n      swap2\n      add\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6409:6432  g.creator != address(0) */\n      iszero\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      tag_151\n      jumpi\n      mload\n      tag_153\n      jumpi\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n      and\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6508:6523  block.timestamp */\n      timestamp\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6508:6538  block.timestamp >= g.startTime */\n      lt\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      tag_155\n      jumpi\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup1\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6564:6630  if (g.endTime != 0) require(block.timestamp <= g.endTime, \"ended\") */\n      tag_157\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n    tag_158:\n      pop\n      mload\n      tag_159\n      jumpi\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n      dup1\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6717:6859  if (address(eligibilityVerifier) != address(0)) {... */\n      tag_161\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n    tag_162:\n      pop\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6878:6888  hasEntered */\n      0x07\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6893:6903  msg.sender */\n      caller\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_163\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6878:6888  hasEntered */\n      0x07\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6893:6903  msg.sender */\n      caller\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n      dup4\n      dup4\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6969:6981  participants */\n      0x06\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x010000000000000000\n      dup2\n      lt\n      iszero\n      tag_165\n      jumpi\n      tag_167\n      swap2\n      0x01\n      dup3\n      add\n      dup2\n      sstore\n      tag_4\n      jump\t// in\n    tag_167:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      0x03\n      swap3\n      swap1\n      swap3\n      shl\n      swap2\n      dup3\n      shl\n      not\n      and\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6893:6903  msg.sender */\n      caller\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      swap2\n      dup3\n      swap1\n      shl\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6893:6903  msg.sender */\n      swap1\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":7018:7041  Entered(id, msg.sender) */\n      0xb6fd8c45cc3179470a3187d092b90e5c003137b502dee828ed4aba08d714cec6\n      0x00\n      dup1\n      log3\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      stop\n    tag_165:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_163:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6878:6888  hasEntered */\n      0x07\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xc8, 0x616c7265616479)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6717:6859  if (address(eligibilityVerifier) != address(0)) {... */\n    tag_161:\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6787:6833  eligibilityVerifier.isEligible(id, msg.sender) */\n      0x44\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      swap2\n      mload(0x40)\n      swap3\n      dup4\n      dup1\n      swap3\n      shl(0xe9, 0x2c9707)\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6787:6833  eligibilityVerifier.isEligible(id, msg.sender) */\n      dup3\n      mstore\n      dup7\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x04\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6787:6833  eligibilityVerifier.isEligible(id, msg.sender) */\n      dup4\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6822:6832  msg.sender */\n      caller\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x24\n      dup4\n      add\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6787:6833  eligibilityVerifier.isEligible(id, msg.sender) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_137\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6787:6833  eligibilityVerifier.isEligible(id, msg.sender) */\n      swap2\n      tag_170\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6717:6859  if (address(eligibilityVerifier) != address(0)) {... */\n    tag_171:\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      pop\n      iszero\n      tag_172\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6717:6859  if (address(eligibilityVerifier) != address(0)) {... */\n      dup2\n      jump(tag_162)\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n    tag_172:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb0, 0x696e656c696769626c65)\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6787:6833  eligibilityVerifier.isEligible(id, msg.sender) */\n      0x44\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6787:6833  eligibilityVerifier.isEligible(id, msg.sender) */\n    tag_170:\n      swap1\n      pop\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6787:6833  eligibilityVerifier.isEligible(id, msg.sender) */\n      dup2\n      returndatasize\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6787:6833  eligibilityVerifier.isEligible(id, msg.sender) */\n      gt\n      tag_174\n      jumpi\n    tag_175:\n      dup2\n      tag_176\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6787:6833  eligibilityVerifier.isEligible(id, msg.sender) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_176:\n      dup2\n      add\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      sub\n      slt\n      tag_46\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_46\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6787:6833  eligibilityVerifier.isEligible(id, msg.sender) */\n      dup3\n      jump(tag_171)\n    tag_174:\n      returndatasize\n      swap2\n      pop\n      jump(tag_175)\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n    tag_159:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x99, 0x30b63932b0b23c90323930bbb7)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6564:6630  if (g.endTime != 0) require(block.timestamp <= g.endTime, \"ended\") */\n    tag_157:\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6508:6523  block.timestamp */\n      timestamp\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6592:6620  block.timestamp <= g.endTime */\n      gt\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      tag_181\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6564:6630  if (g.endTime != 0) require(block.timestamp <= g.endTime, \"ended\") */\n      dup3\n      jump(tag_158)\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n    tag_181:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":6378:6387  giveaways */\n      0x05\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xda, 0x195b991959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_155:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0b\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xaa, 0x1b9bdd081cdd185c9d1959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_153:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x09\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xba, 0x18d85b98d95b1b1959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_151:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x09\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xba, 0x1b9bdd08199bdd5b99)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_12:\n      jumpi(tag_46, callvalue)\n      tag_185\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_185:\n      swap1\n      0x00\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":3054:3098  mapping(uint256 => address[]) public winners */\n      0x08\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":3054:3098  mapping(uint256 => address[]) public winners */\n      dup3\n      lt\n      iszero\n      tag_46\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":3054:3098  mapping(uint256 => address[]) public winners */\n      swap2\n      tag_95\n      swap2\n      tag_4\n      jump\t// in\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n    tag_10:\n      jumpi(tag_46, callvalue)\n      jumpi(tag_46, slt(add(not(0x03), calldatasize), 0x40))\n      tag_193\n      tag_1\n      jump\t// in\n    tag_193:\n      mstore(0x00, calldataload(0x04))\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":2951:3013  mapping(uint256 => mapping(address => bool)) public hasEntered */\n      0x07\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":2951:3013  mapping(uint256 => mapping(address => bool)) public hasEntered */\n      swap1\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_1:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_46\n      jumpi\n      jump\t// out\n    tag_2:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_46\n      jumpi\n      jump\t// out\n    tag_3:\n      0x40\n      swap1\n      not(0x03)\n      add\n      slt\n      tag_46\n      jumpi\n      calldataload(0x04)\n      swap1\n      calldataload(0x24)\n      swap1\n      jump\t// out\n    tag_4:\n      dup1\n      sload\n      dup3\n      lt\n      iszero\n      tag_200\n      jumpi\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_200:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_5:\n      0x01a0\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_165\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_6:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_165\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      shl(0xe0, 0x118cdaa7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n        /* \"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":1512:7089  contract GiveawayManager is Ownable, ReentrancyGuard {... */\n      mstore\n      0x24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      revert\n\n    auxdata: 0xa2646970667358221220c95868233aac021db50fdaeb9d20b25d35839abf2354a57d2d74d394050c20b764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x1F PUSH2 0x100B CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x15F JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x15B JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x173 JUMP JUMPDEST SWAP3 ADD PUSH2 0x173 JUMP JUMPDEST CALLER ISZERO PUSH2 0x148 JUMPI PUSH0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP5 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x10C JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xD0 JUMPI JUMPDEST POP PUSH2 0xE83 SWAP1 DUP2 PUSH2 0x188 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x523584DD19B074BF12112A06B4CCFC2C91696564A12A6D76CDAA62C87DA72868 PUSH0 DUP1 LOG2 PUSH0 PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x87B050F471F7331BFD8FC9347CD54894F2AE6663E3339E49CA0D8B2DBE792EB2 PUSH0 DUP1 LOG2 PUSH0 PUSH2 0xB3 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15B JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73C74F3 EQ PUSH2 0xD36 JUMPI DUP1 PUSH4 0xEFC8865 EQ PUSH2 0xD07 JUMPI DUP1 PUSH4 0x193F453E EQ PUSH2 0x92B JUMPI DUP1 PUSH4 0x2E1352C3 EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0x3E06DF3D EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x6AC56AC0 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x81FB1FB4 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x873F6F9E EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xA0CF0AEA EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xA14EA2B8 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xB15FBC14 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xBDD415AF EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xCE9BF5AC EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xE6414E37 EQ PUSH2 0x15D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH2 0xED PUSH2 0xD95 JUMP JUMPDEST PUSH2 0xF5 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x146 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH2 0x176 PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x17E PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH32 0x523584DD19B074BF12112A06B4CCFC2C91696564A12A6D76CDAA62C87DA72868 PUSH0 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH2 0x204 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH2 0x24D PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x255 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH32 0x87B050F471F7331BFD8FC9347CD54894F2AE6663E3339E49CA0D8B2DBE792EB2 PUSH0 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH2 0x31C PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x35A CALLDATASIZE PUSH2 0xDAB JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x159 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x37B SWAP2 PUSH2 0xDC1 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH2 0x3AC PUSH2 0xE27 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x1A0 PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD SWAP1 PUSH1 0x5 PUSH1 0x4 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x40 SHR AND PUSH1 0x80 DUP7 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 PUSH1 0x80 SHR AND PUSH1 0xA0 DUP7 ADD MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x120 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 PUSH1 0x20 SHR AND PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 PUSH1 0x40 SHR AND PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xA0 SHR PUSH2 0x180 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH2 0x508 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP2 DUP3 DUP3 SUB PUSH2 0x159 JUMPI PUSH1 0x64 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND DUP1 SWAP6 SUB PUSH2 0x159 JUMPI PUSH1 0x84 CALLDATALOAD SWAP3 PUSH4 0xFFFFFFFF DUP5 AND DUP1 SWAP5 SUB PUSH2 0x159 JUMPI SWAP4 DUP3 ISZERO PUSH2 0x8FB JUMPI PUSH1 0x1 DUP5 LT PUSH2 0x8CA JUMPI DUP6 ISZERO DUP1 ISZERO PUSH2 0x8C1 JUMPI JUMPDEST ISZERO PUSH2 0x896 JUMPI ISZERO PUSH2 0x885 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 PUSH2 0x7DA JUMPI DUP2 CALLVALUE SUB PUSH2 0x7A9 JUMPI JUMPDEST PUSH1 0x4 SLOAD SWAP5 PUSH0 NOT DUP7 EQ PUSH2 0x795 JUMPI PUSH1 0x1 PUSH1 0x20 SWAP7 ADD SWAP5 DUP6 PUSH1 0x4 SSTORE PUSH0 DUP1 DUP1 DUP9 PUSH4 0xFFFFFFFF PUSH1 0x5 PUSH1 0x40 MLOAD PUSH2 0x5AF DUP2 PUSH2 0xDEA JUMP JUMPDEST CALLER DUP2 MSTORE DUP14 DUP2 ADD DUP13 DUP2 MSTORE PUSH1 0x40 DUP3 ADD SWAP9 DUP13 DUP11 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x60 DUP5 ADD SWAP2 AND SWAP10 DUP11 DUP3 MSTORE PUSH1 0x80 DUP5 ADD SWAP1 DUP13 DUP3 MSTORE DUP14 PUSH1 0xA0 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD SWAP1 DUP11 DUP3 MSTORE PUSH1 0xE0 DUP8 ADD SWAP3 DUP12 DUP5 MSTORE PUSH2 0x100 DUP9 ADD SWAP7 DUP13 DUP9 MSTORE PUSH2 0x120 DUP10 ADD SWAP15 DUP16 MSTORE PUSH2 0x140 DUP10 ADD SWAP14 DUP15 MSTORE PUSH2 0x160 DUP10 ADD SWAP12 DUP14 DUP14 MSTORE PUSH2 0x180 DUP11 ADD SWAP14 DUP15 MSTORE PUSH0 MSTORE PUSH1 0x20 DUP11 SWAP1 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP11 SLOAD AND OR DUP10 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x1 DUP10 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP9 ADD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x3 DUP9 ADD SWAP6 MLOAD AND SWAP1 PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 DUP7 SLOAD SWAP6 MLOAD PUSH1 0x40 SHL AND SWAP1 DUP11 PUSH1 0x80 SHL SWAP1 MLOAD PUSH1 0x80 SHL AND SWAP3 MLOAD ISZERO ISZERO PUSH1 0xA0 SHL SWAP4 PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 MLOAD ISZERO ISZERO PUSH1 0xA8 SHL AND SWAP5 PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP3 PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL AND OR AND OR AND OR SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL AND OR OR SWAP1 SSTORE MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP5 MLOAD AND SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 PUSH8 0xFFFFFFFF00000000 DUP7 SLOAD SWAP3 MLOAD DUP15 SHL AND SWAP3 MLOAD PUSH1 0x40 SHL AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP1 MLOAD PUSH1 0xA0 SHL AND SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL AND OR AND OR OR OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH32 0x962C97B71F3C7F35B27F4570B64D7B71858ECD66DA4AD735B2B15AD782CC69D7 PUSH1 0x80 CALLER SWAP4 LOG4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6261642076616C7565 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 PUSH0 PUSH1 0x40 MLOAD DUP3 DUP2 ADD SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE DUP6 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH2 0x80F PUSH1 0x84 DUP3 PUSH2 0xE06 JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP8 GAS CALL ISZERO PUSH2 0x87A JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x871 JUMPI POP DUP3 EXTCODESIZE ISZERO JUMPDEST PUSH2 0x85E JUMPI CALLVALUE ISZERO PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0xDCDE40CAE8D PUSH1 0xD3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP4 POP PUSH2 0x56A JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4 PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x74696D65 PUSH1 0xE0 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 DUP7 GT PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x77696E6E6572733D3 PUSH1 0xBC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x616D6F756E743D3 PUSH1 0xC4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x957 DUP2 PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND DUP1 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP5 ADD SLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP4 MSTORE PUSH1 0x80 DUP5 ADD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 PUSH1 0x40 SHR AND DUP6 MSTORE PUSH4 0xFFFFFFFF DUP4 PUSH1 0x80 SHR AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x180 PUSH1 0x5 PUSH1 0xC0 DUP4 ADD SWAP8 PUSH1 0xFF DUP7 PUSH1 0xA0 SHR AND ISZERO ISZERO DUP10 MSTORE PUSH1 0xFF PUSH1 0xE0 DUP6 ADD SWAP7 PUSH1 0xA8 SHR AND ISZERO ISZERO DUP7 MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x120 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 PUSH1 0x20 SHR AND PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 PUSH1 0x40 SHR AND PUSH2 0x160 DUP5 ADD MSTORE PUSH1 0xA0 SHR SWAP2 ADD MSTORE ISZERO PUSH2 0xCD6 JUMPI MLOAD PUSH2 0xCA5 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT PUSH2 0xC72 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP1 PUSH2 0xC39 JUMPI JUMPDEST POP MLOAD PUSH2 0xC04 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xB5A JUMPI JUMPDEST POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB2B JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP4 DUP4 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xB17 JUMPI PUSH2 0xAD2 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0xDC1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP2 DUP3 SWAP1 SHL OR SWAP1 SWAP2 SSTORE SWAP1 PUSH32 0xB6FD8C45CC3179470A3187D092B90E5C003137B502DEE828ED4ABA08D714CEC6 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x616C7265616479 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x44 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH3 0x2C9707 PUSH1 0xE9 SHL DUP3 MSTORE DUP7 PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x87A JUMPI PUSH0 SWAP2 PUSH2 0xBC9 JUMPI JUMPDEST POP ISZERO PUSH2 0xB97 JUMPI DUP2 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x696E656C696769626C65 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xBFC JUMPI JUMPDEST DUP2 PUSH2 0xBE4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xE06 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x159 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x159 JUMPI DUP3 PUSH2 0xB8B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x30B63932B0B23C90323930BBB7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST TIMESTAMP GT PUSH2 0xC45 JUMPI DUP3 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x195B991959 PUSH1 0xDA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x1B9BDD081CDD185C9D1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x18D85B98D95B1B1959 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x1B9BDD08199BDD5B99 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0xD15 CALLDATASIZE PUSH2 0xDAB JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x159 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x37B SWAP2 PUSH2 0xDC1 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH2 0xD4F PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x159 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x159 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xDD6 JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1A0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xB17 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xB17 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE3A JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PC PUSH9 0x233AAC021DB50FDAEB SWAP14 KECCAK256 0xB2 TSTORE CALLDATALOAD DUP4 SWAP11 0xBF 0x23 SLOAD 0xA5 PUSH30 0x2D74D394050C20B764736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1512:5577:9:-:0;;;;;;;;;;;;;-1:-1:-1;;1512:5577:9;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;4072:10;1273:26:0;1269:95;;-1:-1:-1;1512:5577:9;;4072:10;-1:-1:-1;;;;;;1512:5577:9;;;;;;;;;;4072:10;;-1:-1:-1;;;;;1512:5577:9;;3052:40:0;;-1:-1:-1;3052:40:0;1716:1:4;;;-1:-1:-1;;;;;1512:5577:9;;4094:190;;-1:-1:-1;;;;;;;1512:5577:9;;4293:196;;-1:-1:-1;1512:5577:9;;;;;;;;4293:196;4347:64;1512:5577;;-1:-1:-1;;;;;;1512:5577:9;;;;;4430:48;-1:-1:-1;;4430:48:9;4293:196;;;4094:190;4147:61;1512:5577;;-1:-1:-1;;;;;;1512:5577:9;;;;;4227:46;-1:-1:-1;;4227:46:9;4094:190;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;1512:5577:9;;-1:-1:-1;1322:31:0;1512:5577:9;-1:-1:-1;1512:5577:9;;;;;;-1:-1:-1;1512:5577:9;;;;;-1:-1:-1;1512:5577:9;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 3477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_12678": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_uint256t_uint256": {
									"entryPoint": 3499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"finalize_allocation": {
									"entryPoint": 3590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_12680": {
									"entryPoint": 3562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkOwner": {
									"entryPoint": 3623,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"storage_array_index_access_address_dyn": {
									"entryPoint": 3521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361015610011575f80fd5b5f3560e01c8063073c74f314610d365780630efc886514610d07578063193f453e1461092b5780632e1352c3146104f45780633e06df3d146104085780636ac56ac0146103eb578063715018a61461039457806381fb1fb41461034c578063873f6f9e146103035780638da5cb5b146102dc578063a0cf0aea146102c2578063a14ea2b81461029a578063b15fbc1414610234578063bdd415af146101eb578063ce9bf5ac146101c3578063e6414e371461015d5763f2fde38b146100d4575f80fd5b34610159576020366003190112610159576100ed610d95565b6100f5610e27565b6001600160a01b03168015610146575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b3461015957602036600319011261015957610176610d95565b61017e610e27565b600380546001600160a01b0319166001600160a01b039290921691821790557f523584dd19b074bf12112a06b4ccfc2c91696564a12a6d76cdaa62c87da728685f80a2005b34610159575f366003190112610159576002546040516001600160a01b039091168152602090f35b3461015957604036600319011261015957610204610d7f565b6004355f52600960205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346101595760203660031901126101595761024d610d95565b610255610e27565b600280546001600160a01b0319166001600160a01b039290921691821790557f87b050f471f7331bfd8fc9347cd54894f2ae6663e3339e49ca0d8b2dbe792eb25f80a2005b34610159575f366003190112610159576003546040516001600160a01b039091168152602090f35b34610159575f3660031901126101595760206040515f8152f35b34610159575f366003190112610159575f546040516001600160a01b039091168152602090f35b346101595760403660031901126101595761031c610d7f565b6004355f52600a60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346101595761035a36610dab565b905f52600660205260405f2080548210156101595760209161037b91610dc1565b905460405160039290921b1c6001600160a01b03168152f35b34610159575f366003190112610159576103ac610e27565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610159575f366003190112610159576020600454604051908152f35b34610159576020366003190112610159576004355f5260056020526101a060405f2060018060a01b038154169060018060a01b036001820154169060ff60028201546003830154906005600485015494015494604051968752602087015260408601526001600160401b03811660608601526001600160401b038160401c16608086015263ffffffff8160801c1660a0860152818160a01c16151560c086015260a81c16151560e084015261010083015263ffffffff811661012083015263ffffffff8160201c166101408301526001600160601b038160401c1661016083015260a01c610180820152f35b60a036600319011261015957610508610d95565b6024356044356001600160401b0381169182820361015957606435936001600160401b038516809503610159576084359263ffffffff8416809403610159579382156108fb57600184106108ca57851580156108c1575b156108965715610885575b6001600160a01b031691826107da578134036107a9575b600454945f1986146107955760016020960194856004555f80808863ffffffff60056040516105af81610dea565b3381528d81018c815260408201988c8a526001600160401b03606084019116998a825260808401908c82528d60a0860190815260c08601908a825260e08701928b84526101008801968c885261012089019e8f5261014089019d8e5261016089019b8d8d526101808a019d8e525f5260208a905260405f209860018060a01b039060018060a01b03905116166001600160601b0360a01b8a541617895560018060a01b03905116600189019060018060a01b03166001600160601b0360a01b8254161790555160028801556001600160401b0360038801955116906fffffffffffffffff00000000000000008654955160401b16908a60801b905160801b169251151560a01b9360ff60a81b9051151560a81b169460ff60a81b199260ff60a01b19916001600160601b0360a01b1617161716179060ff60a01b1617179055516004820155019451169273ffffffffffffffffffffffff000000000000000067ffffffff00000000865492518e1b16925160401b16926001600160601b0360a01b905160a01b169360018060a01b03916001600160601b0360a01b16171617171790556040519384528684015260408301526060820152827f962c97b71f3c7f35b27f4570b64d7b71858ecd66da4ad735b2b15ad782cc69d760803393a4604051908152f35b634e487b7160e01b5f52601160045260245ffd5b60405162461bcd60e51b81526020600482015260096024820152686261642076616c756560b81b6044820152606490fd5b60205f604051828101906323b872dd60e01b82523360248201523060448201528560648201526064815261080f608482610e06565b519082875af11561087a575f513d6108715750823b155b61085e5734156105815760405162461bcd60e51b81526020600482015260066024820152650dcde40cae8d60d31b6044820152606490fd5b82635274afe760e01b5f5260045260245ffd5b60011415610826565b6040513d5f823e3d90fd5b426001600160401b0316935061056a565b606460405162461bcd60e51b815260206004820152600460248201526374696d6560e01b6044820152fd5b5080861161055f565b60405162461bcd60e51b8152602060048201526009602482015268077696e6e6572733d360bc1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260086024820152670616d6f756e743d360c41b6044820152606490fd5b3461015957602036600319011261015957600435805f52600560205260405f2060405161095781610dea565b60018060a01b0382541680825260018060a01b03600184015416602083015260028301546040830152600383015460608301916001600160401b038216835260808401936001600160401b038360401c16855263ffffffff8360801c1660a0820152610180600560c083019760ff8660a01c161515895260ff60e085019660a81c16151586526004810154610100850152015463ffffffff811661012084015263ffffffff8160201c166101408401526001600160601b038160401c1661016084015260a01c91015215610cd65751610ca557516001600160401b03164210610c7257516001600160401b031680610c39575b5051610c04576003546001600160a01b031680610b5a575b505f81815260076020908152604080832033845290915290205460ff16610b2b575f8181526007602090815260408083203384528252808320805460ff1916600117905583835260069091529020805468010000000000000000811015610b1757610ad291600182018155610dc1565b81546001600160a01b0360039290921b91821b1916339182901b17909155907fb6fd8c45cc3179470a3187d092b90e5c003137b502dee828ed4aba08d714cec65f80a3005b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b8152602060048201526007602482015266616c726561647960c81b6044820152606490fd5b602060449160405192838092622c970760e91b82528660048301523360248301525afa90811561087a575f91610bc9575b5015610b975781610a62565b60405162461bcd60e51b815260206004820152600a602482015269696e656c696769626c6560b01b6044820152606490fd5b90506020813d602011610bfc575b81610be460209383610e06565b81010312610159575180151581036101595782610b8b565b3d9150610bd7565b60405162461bcd60e51b815260206004820152600d60248201526c30b63932b0b23c90323930bbb760991b6044820152606490fd5b4211610c455782610a4a565b60405162461bcd60e51b8152602060048201526005602482015264195b99195960da1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600b60248201526a1b9bdd081cdd185c9d195960aa1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600960248201526818d85b98d95b1b195960ba1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260096024820152681b9bdd08199bdd5b9960ba1b6044820152606490fd5b3461015957610d1536610dab565b905f52600860205260405f2080548210156101595760209161037b91610dc1565b3461015957604036600319011261015957610d4f610d7f565b6004355f52600760205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b602435906001600160a01b038216820361015957565b600435906001600160a01b038216820361015957565b6040906003190112610159576004359060243590565b8054821015610dd6575f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b6101a081019081106001600160401b03821117610b1757604052565b90601f801991011681019081106001600160401b03821117610b1757604052565b5f546001600160a01b03163303610e3a57565b63118cdaa760e01b5f523360045260245ffdfea2646970667358221220c95868233aac021db50fdaeb9d20b25d35839abf2354a57d2d74d394050c20b764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73C74F3 EQ PUSH2 0xD36 JUMPI DUP1 PUSH4 0xEFC8865 EQ PUSH2 0xD07 JUMPI DUP1 PUSH4 0x193F453E EQ PUSH2 0x92B JUMPI DUP1 PUSH4 0x2E1352C3 EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0x3E06DF3D EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x6AC56AC0 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x81FB1FB4 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x873F6F9E EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xA0CF0AEA EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xA14EA2B8 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xB15FBC14 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xBDD415AF EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xCE9BF5AC EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xE6414E37 EQ PUSH2 0x15D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH2 0xED PUSH2 0xD95 JUMP JUMPDEST PUSH2 0xF5 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x146 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH2 0x176 PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x17E PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH32 0x523584DD19B074BF12112A06B4CCFC2C91696564A12A6D76CDAA62C87DA72868 PUSH0 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH2 0x204 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH2 0x24D PUSH2 0xD95 JUMP JUMPDEST PUSH2 0x255 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH32 0x87B050F471F7331BFD8FC9347CD54894F2AE6663E3339E49CA0D8B2DBE792EB2 PUSH0 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH2 0x31C PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x35A CALLDATASIZE PUSH2 0xDAB JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x159 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x37B SWAP2 PUSH2 0xDC1 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH2 0x3AC PUSH2 0xE27 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x1A0 PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD SWAP1 PUSH1 0x5 PUSH1 0x4 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x40 SHR AND PUSH1 0x80 DUP7 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 PUSH1 0x80 SHR AND PUSH1 0xA0 DUP7 ADD MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x120 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 PUSH1 0x20 SHR AND PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 PUSH1 0x40 SHR AND PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xA0 SHR PUSH2 0x180 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH2 0x508 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP2 DUP3 DUP3 SUB PUSH2 0x159 JUMPI PUSH1 0x64 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND DUP1 SWAP6 SUB PUSH2 0x159 JUMPI PUSH1 0x84 CALLDATALOAD SWAP3 PUSH4 0xFFFFFFFF DUP5 AND DUP1 SWAP5 SUB PUSH2 0x159 JUMPI SWAP4 DUP3 ISZERO PUSH2 0x8FB JUMPI PUSH1 0x1 DUP5 LT PUSH2 0x8CA JUMPI DUP6 ISZERO DUP1 ISZERO PUSH2 0x8C1 JUMPI JUMPDEST ISZERO PUSH2 0x896 JUMPI ISZERO PUSH2 0x885 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 PUSH2 0x7DA JUMPI DUP2 CALLVALUE SUB PUSH2 0x7A9 JUMPI JUMPDEST PUSH1 0x4 SLOAD SWAP5 PUSH0 NOT DUP7 EQ PUSH2 0x795 JUMPI PUSH1 0x1 PUSH1 0x20 SWAP7 ADD SWAP5 DUP6 PUSH1 0x4 SSTORE PUSH0 DUP1 DUP1 DUP9 PUSH4 0xFFFFFFFF PUSH1 0x5 PUSH1 0x40 MLOAD PUSH2 0x5AF DUP2 PUSH2 0xDEA JUMP JUMPDEST CALLER DUP2 MSTORE DUP14 DUP2 ADD DUP13 DUP2 MSTORE PUSH1 0x40 DUP3 ADD SWAP9 DUP13 DUP11 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x60 DUP5 ADD SWAP2 AND SWAP10 DUP11 DUP3 MSTORE PUSH1 0x80 DUP5 ADD SWAP1 DUP13 DUP3 MSTORE DUP14 PUSH1 0xA0 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD SWAP1 DUP11 DUP3 MSTORE PUSH1 0xE0 DUP8 ADD SWAP3 DUP12 DUP5 MSTORE PUSH2 0x100 DUP9 ADD SWAP7 DUP13 DUP9 MSTORE PUSH2 0x120 DUP10 ADD SWAP15 DUP16 MSTORE PUSH2 0x140 DUP10 ADD SWAP14 DUP15 MSTORE PUSH2 0x160 DUP10 ADD SWAP12 DUP14 DUP14 MSTORE PUSH2 0x180 DUP11 ADD SWAP14 DUP15 MSTORE PUSH0 MSTORE PUSH1 0x20 DUP11 SWAP1 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP11 SLOAD AND OR DUP10 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x1 DUP10 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP9 ADD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x3 DUP9 ADD SWAP6 MLOAD AND SWAP1 PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 DUP7 SLOAD SWAP6 MLOAD PUSH1 0x40 SHL AND SWAP1 DUP11 PUSH1 0x80 SHL SWAP1 MLOAD PUSH1 0x80 SHL AND SWAP3 MLOAD ISZERO ISZERO PUSH1 0xA0 SHL SWAP4 PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 MLOAD ISZERO ISZERO PUSH1 0xA8 SHL AND SWAP5 PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP3 PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL AND OR AND OR AND OR SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL AND OR OR SWAP1 SSTORE MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP5 MLOAD AND SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 PUSH8 0xFFFFFFFF00000000 DUP7 SLOAD SWAP3 MLOAD DUP15 SHL AND SWAP3 MLOAD PUSH1 0x40 SHL AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP1 MLOAD PUSH1 0xA0 SHL AND SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL AND OR AND OR OR OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH32 0x962C97B71F3C7F35B27F4570B64D7B71858ECD66DA4AD735B2B15AD782CC69D7 PUSH1 0x80 CALLER SWAP4 LOG4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6261642076616C7565 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 PUSH0 PUSH1 0x40 MLOAD DUP3 DUP2 ADD SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE DUP6 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH2 0x80F PUSH1 0x84 DUP3 PUSH2 0xE06 JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP8 GAS CALL ISZERO PUSH2 0x87A JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x871 JUMPI POP DUP3 EXTCODESIZE ISZERO JUMPDEST PUSH2 0x85E JUMPI CALLVALUE ISZERO PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0xDCDE40CAE8D PUSH1 0xD3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP4 POP PUSH2 0x56A JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4 PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x74696D65 PUSH1 0xE0 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 DUP7 GT PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x77696E6E6572733D3 PUSH1 0xBC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x616D6F756E743D3 PUSH1 0xC4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x957 DUP2 PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND DUP1 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP5 ADD SLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP4 MSTORE PUSH1 0x80 DUP5 ADD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 PUSH1 0x40 SHR AND DUP6 MSTORE PUSH4 0xFFFFFFFF DUP4 PUSH1 0x80 SHR AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x180 PUSH1 0x5 PUSH1 0xC0 DUP4 ADD SWAP8 PUSH1 0xFF DUP7 PUSH1 0xA0 SHR AND ISZERO ISZERO DUP10 MSTORE PUSH1 0xFF PUSH1 0xE0 DUP6 ADD SWAP7 PUSH1 0xA8 SHR AND ISZERO ISZERO DUP7 MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x120 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 PUSH1 0x20 SHR AND PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 PUSH1 0x40 SHR AND PUSH2 0x160 DUP5 ADD MSTORE PUSH1 0xA0 SHR SWAP2 ADD MSTORE ISZERO PUSH2 0xCD6 JUMPI MLOAD PUSH2 0xCA5 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT PUSH2 0xC72 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP1 PUSH2 0xC39 JUMPI JUMPDEST POP MLOAD PUSH2 0xC04 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xB5A JUMPI JUMPDEST POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB2B JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP4 DUP4 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xB17 JUMPI PUSH2 0xAD2 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0xDC1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP2 DUP3 SWAP1 SHL OR SWAP1 SWAP2 SSTORE SWAP1 PUSH32 0xB6FD8C45CC3179470A3187D092B90E5C003137B502DEE828ED4ABA08D714CEC6 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x616C7265616479 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x44 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH3 0x2C9707 PUSH1 0xE9 SHL DUP3 MSTORE DUP7 PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x87A JUMPI PUSH0 SWAP2 PUSH2 0xBC9 JUMPI JUMPDEST POP ISZERO PUSH2 0xB97 JUMPI DUP2 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x696E656C696769626C65 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xBFC JUMPI JUMPDEST DUP2 PUSH2 0xBE4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xE06 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x159 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x159 JUMPI DUP3 PUSH2 0xB8B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x30B63932B0B23C90323930BBB7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST TIMESTAMP GT PUSH2 0xC45 JUMPI DUP3 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x195B991959 PUSH1 0xDA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x1B9BDD081CDD185C9D1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x18D85B98D95B1B1959 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x1B9BDD08199BDD5B99 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0xD15 CALLDATASIZE PUSH2 0xDAB JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x159 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x37B SWAP2 PUSH2 0xDC1 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH2 0xD4F PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x159 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x159 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x159 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xDD6 JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1A0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xB17 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xB17 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE3A JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PC PUSH9 0x233AAC021DB50FDAEB SWAP14 KECCAK256 0xB2 TSTORE CALLDATALOAD DUP4 SWAP11 0xBF 0x23 SLOAD 0xA5 PUSH30 0x2D74D394050C20B764736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1512:5577:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1512:5577:9;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;1512:5577:9;2627:22:0;;2623:91;;1512:5577:9;;;-1:-1:-1;;;;;;1512:5577:9;;;;;;-1:-1:-1;;;;;1512:5577:9;;3052:40:0;;1512:5577:9;3052:40:0;1512:5577:9;2623:91:0;2672:31;;;1512:5577:9;2672:31:0;1512:5577:9;;;;;2672:31:0;1512:5577:9;;;;;;;;;;-1:-1:-1;;1512:5577:9;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;4776:46:9;1512:5577;;-1:-1:-1;;;;;;1512:5577:9;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;4837:30;-1:-1:-1;;4837:30:9;1512:5577;;;;;;;-1:-1:-1;;1512:5577:9;;;;1684:45;1512:5577;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;;;;;-1:-1:-1;;1512:5577:9;;;;;;:::i;:::-;;;;;3104:60;1512:5577;;;;;3104:60;1512:5577;;;;;;-1:-1:-1;1512:5577:9;;;;;;-1:-1:-1;1512:5577:9;;;;;;;;;;;;;;;;;-1:-1:-1;;1512:5577:9;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;4602:44:9;1512:5577;;-1:-1:-1;;;;;;1512:5577:9;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;4661:29;-1:-1:-1;;4661:29:9;1512:5577;;;;;;;-1:-1:-1;;1512:5577:9;;;;1771:47;1512:5577;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;;;;;-1:-1:-1;;1512:5577:9;;;;;;;;;;;;;;;;;-1:-1:-1;;1512:5577:9;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;;;;;-1:-1:-1;;1512:5577:9;;;;;;:::i;:::-;;;;;3170:62;1512:5577;;;;;3170:62;1512:5577;;;;;;-1:-1:-1;1512:5577:9;;;;;;-1:-1:-1;1512:5577:9;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2896:49;1512:5577;;;;;;;2896:49;;;;;1512:5577;2896:49;;;;:::i;:::-;1512:5577;;;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;-1:-1:-1;;1512:5577:9;;;;1500:62:0;;:::i;:::-;1512:5577:9;;;-1:-1:-1;;;;;;1512:5577:9;;;;-1:-1:-1;;;;;1512:5577:9;3052:40:0;1512:5577:9;;3052:40:0;1512:5577:9;;;;;;;-1:-1:-1;;1512:5577:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1512:5577:9;;;;;;;;2824:45;1512:5577;;;;;;;;;;;;;;;;;;;;;2824:45;;1512:5577;;2824:45;1512:5577;2824:45;;;1512:5577;2824:45;;;1512:5577;2824:45;;1512:5577;2824:45;;1512:5577;2824:45;;1512:5577;;;;;;;;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;;;;;;;;;-1:-1:-1;;1512:5577:9;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;;;;;;;;;5251:10;;;1512:5577;;;5292:15;;1512:5577;;5339:12;;:35;;;;1512:5577;;;;5397:14;5393:55;;1512:5577;-1:-1:-1;;;;;1512:5577:9;;5485:15;1512:5577;;5524:9;;:19;1512:5577;;5481:230;1512:5577;;;-1:-1:-1;;1512:5577:9;;;;;;;;;;;;;;;;;5752:9;1512:5577;;;;;:::i;:::-;5800:10;1512:5577;;5768:399;;;1512:5577;;;;5768:399;;1512:5577;;;;-1:-1:-1;;;;;1512:5577:9;5768:399;;1512:5577;;;;;;;5768:399;;1512:5577;;;;5768:399;1512:5577;5768:399;;1512:5577;;;5768:399;;;1512:5577;;;;;5768:399;;1512:5577;;;;5768:399;;;1512:5577;;;;5768:399;;;1512:5577;;;5768:399;;;1512:5577;;;5768:399;;;1512:5577;;;;5768:399;;;1512:5577;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;;;;;;;;;;;;;;;;;;5800:10;6183:78;1512:5577;5800:10;6183:78;;1512:5577;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1512:5577:9;;;;;;;;;;;;-1:-1:-1;;;1512:5577:9;;;;;;;5481:230;1512:5577;;;;1745:53:6;;;1512:5577:9;;;;1745:53:6;;5619:10:9;1512:5577;1745:53:6;;1512:5577:9;5639:4;1512:5577;;;;;;;;;;1745:53:6;;;1512:5577:9;1745:53:6;;:::i;:::-;8507:421;;;;;;;;;1512:5577:9;8507:421:6;;8942:15;;8960:26;;;:31;8942:68;8938:146;;5675:9:9;1512:5577;5481:230;1512:5577;;;-1:-1:-1;;;1512:5577:9;;;;;;;;;;;;-1:-1:-1;;;1512:5577:9;;;;;;;8938:146:6;9033:40;;;;1512:5577:9;9033:40:6;1512:5577:9;;;;9033:40:6;8942:68;1512:5577:9;8994:16:6;;8942:68;;8507:421;1512:5577:9;8507:421:6;;1512:5577:9;8507:421:6;;;;;5393:55:9;5432:15;-1:-1:-1;;;;;1512:5577:9;;-1:-1:-1;5393:55:9;;1512:5577;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1512:5577:9;;;;;5339:35;5355:19;;;;5339:35;;1512:5577;;;-1:-1:-1;;;1512:5577:9;;;;;;;;;;;;-1:-1:-1;;;1512:5577:9;;;;;;;;;;-1:-1:-1;;;1512:5577:9;;;;;;;;;;;;-1:-1:-1;;;1512:5577:9;;;;;;;;;;;;;-1:-1:-1;;1512:5577:9;;;;;;;;;6378:9;1512:5577;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;;;;;;;6378:9;1512:5577;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;;;;6409:23;1512:5577;;;;;;-1:-1:-1;;;;;1512:5577:9;6508:15;:30;1512:5577;;;-1:-1:-1;;;;;1512:5577:9;;6564:66;;1512:5577;;;;;;;-1:-1:-1;;;;;1512:5577:9;;6717:142;;1512:5577;-1:-1:-1;1512:5577:9;;;;6878:10;1512:5577;;;;;;;;6893:10;1512:5577;;;;;;;;;;;;;;;;6878:10;1512:5577;;;;;;;;6893:10;1512:5577;;;;;;;;;-1:-1:-1;;1512:5577:9;;;;;;;;6969:12;1512:5577;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;;;;6893:10;1512:5577;;;;;;;;6893:10;7018:23;-1:-1:-1;;7018:23:9;1512:5577;;;;;;;;;;;;;;;;-1:-1:-1;;;1512:5577:9;;;;;;;6878:10;1512:5577;;;;-1:-1:-1;;;1512:5577:9;;;;;;;6717:142;1512:5577;6787:46;1512:5577;;;;;;;;;;6787:46;;;1512:5577;6787:46;;1512:5577;6822:10;1512:5577;;;;6787:46;;;;;;;1512:5577;6787:46;;;6717:142;1512:5577;;;;6717:142;;;1512:5577;;;-1:-1:-1;;;1512:5577:9;;;;;;;;;;;;-1:-1:-1;;;6787:46:9;1512:5577;;;;;;6787:46;;;1512:5577;6787:46;;1512:5577;6787:46;;;;;;1512:5577;6787:46;;;:::i;:::-;;;1512:5577;;;;;;;;;;;;6787:46;;;;;;-1:-1:-1;6787:46:9;;1512:5577;;;-1:-1:-1;;;1512:5577:9;;;;;;;;;;;;-1:-1:-1;;;1512:5577:9;;;;;;;6564:66;6508:15;6592:28;1512:5577;;6564:66;;;1512:5577;;;-1:-1:-1;;;1512:5577:9;;;;;;;6378:9;1512:5577;;;;-1:-1:-1;;;1512:5577:9;;;;;;;;;;-1:-1:-1;;;1512:5577:9;;;;;;;;;;;;-1:-1:-1;;;1512:5577:9;;;;;;;;;;-1:-1:-1;;;1512:5577:9;;;;;;;;;;;;-1:-1:-1;;;1512:5577:9;;;;;;;;;;-1:-1:-1;;;1512:5577:9;;;;;;;;;;;;-1:-1:-1;;;1512:5577:9;;;;;;;;;;;;;;:::i;:::-;;;;3054:44;1512:5577;;;;;;;3054:44;;;;;1512:5577;3054:44;;;;:::i;1512:5577::-;;;;;;-1:-1:-1;;1512:5577:9;;;;;;:::i;:::-;;;;;2951:62;1512:5577;;;;;2951:62;1512:5577;;;;;;-1:-1:-1;1512:5577:9;;;;;;-1:-1:-1;1512:5577:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;1512:5577:9;;-1:-1:-1;1512:5577:9;;;-1:-1:-1;1512:5577:9;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1512:5577:9;;;;;;;:::o;1796:162:0:-;1710:6;1512:5577:9;-1:-1:-1;;;;;1512:5577:9;735:10:7;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:7;1901:40:0;1512:5577:9;;1710:6:0;1901:40"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "743000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"NATIVE()": "364",
								"createGiveaway(address,uint256,uint64,uint64,uint32)": "infinite",
								"eligibilityVerifier()": "2514",
								"enterGiveaway(uint256)": "infinite",
								"giveaways(uint256)": "13336",
								"hasClaimed(uint256,address)": "2653",
								"hasEntered(uint256,address)": "2477",
								"isWinner(uint256,address)": "2763",
								"nextGiveawayId()": "2358",
								"owner()": "2469",
								"participants(uint256,uint256)": "6882",
								"randomnessProvider()": "2580",
								"renounceOwnership()": "28174",
								"setEligibilityVerifier(address)": "28086",
								"setRandomnessProvider(address)": "28020",
								"transferOwnership(address)": "28511",
								"winners(uint256,uint256)": "6750"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1512,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1512,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4072,
									"end": 4082,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4072,
									"end": 4082,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4072,
									"end": 4082,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4072,
									"end": 4082,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4094,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 4094,
									"end": 4284,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "13"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4293,
									"end": 4489,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 4293,
									"end": 4489,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "15"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "RETURN",
									"source": 9
								},
								{
									"begin": 4293,
									"end": 4489,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 4293,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4347,
									"end": 4411,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4430,
									"end": 4478,
									"name": "PUSH",
									"source": 9,
									"value": "523584DD19B074BF12112A06B4CCFC2C91696564A12A6D76CDAA62C87DA72868"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 4430,
									"end": 4478,
									"name": "LOG2",
									"source": 9
								},
								{
									"begin": 4293,
									"end": 4489,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4293,
									"end": 4489,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 4293,
									"end": 4489,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4094,
									"end": 4284,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 4094,
									"end": 4284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4147,
									"end": 4208,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4227,
									"end": 4273,
									"name": "PUSH",
									"source": 9,
									"value": "87B050F471F7331BFD8FC9347CD54894F2AE6663E3339E49CA0D8B2DBE792EB2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 4227,
									"end": 4273,
									"name": "LOG2",
									"source": 9
								},
								{
									"begin": 4094,
									"end": 4284,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4094,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 4094,
									"end": 4284,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1512,
									"end": 7089,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 7089,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c95868233aac021db50fdaeb9d20b25d35839abf2354a57d2d74d394050c20b764736f6c634300081a0033",
									".code": [
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "73C74F3"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "EFC8865"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "193F453E"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "2E1352C3"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "3E06DF3D"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "6AC56AC0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "81FB1FB4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "873F6F9E"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0CF0AEA"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A14EA2B8"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "B15FBC14"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "BDD415AF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "CE9BF5AC"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "E6414E37"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF7"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4776,
											"end": 4822,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "PUSH",
											"source": 9,
											"value": "523584DD19B074BF12112A06B4CCFC2C91696564A12A6D76CDAA62C87DA72868"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1729,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3164,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3164,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4646,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4661,
											"end": 4690,
											"name": "PUSH",
											"source": 9,
											"value": "87B050F471F7331BFD8FC9347CD54894F2AE6663E3339E49CA0D8B2DBE792EB2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4661,
											"end": 4690,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1818,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3232,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3232,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2945,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2945,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2945,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2945,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2896,
											"end": 2945,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2896,
											"end": 2945,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2896,
											"end": 2945,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2896,
											"end": 2945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2945,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2896,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2869,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2824,
											"end": 2869,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2869,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2869,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2824,
											"end": 2869,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2824,
											"end": 2869,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2869,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2869,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2824,
											"end": 2869,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2869,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2869,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2869,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2824,
											"end": 2869,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2869,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2869,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2869,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A8"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5251,
											"end": 5261,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5251,
											"end": 5261,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5251,
											"end": 5261,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5292,
											"end": 5307,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5292,
											"end": 5307,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5339,
											"end": 5351,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5339,
											"end": 5351,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5339,
											"end": 5374,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5339,
											"end": 5374,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5339,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 5339,
											"end": 5374,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 5393,
											"end": 5448,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5485,
											"end": 5500,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5533,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5533,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5543,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5481,
											"end": 5711,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 5481,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5800,
											"end": 5810,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP15",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP16",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP14",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP12",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "PUSH",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP14",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF0000000000000000"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A8"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A8"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A8"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5800,
											"end": 5810,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6183,
											"end": 6261,
											"name": "PUSH",
											"source": 9,
											"value": "962C97B71F3C7F35B27F4570B64D7B71858ECD66DA4AD735B2B15AD782CC69D7"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5800,
											"end": 5810,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6183,
											"end": 6261,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6183,
											"end": 6261,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6261642076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5481,
											"end": 5711,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 5481,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5619,
											"end": 5629,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5639,
											"end": 5643,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5675,
											"end": 5684,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5481,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DCDE40CAE8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE7"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5448,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 5393,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5447,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5393,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 5393,
											"end": 5448,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "461BCD"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "E5"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "74696D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5339,
											"end": 5374,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 5339,
											"end": 5374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5355,
											"end": 5374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5355,
											"end": 5374,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5355,
											"end": 5374,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5355,
											"end": 5374,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5339,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 5339,
											"end": 5374,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "77696E6E6572733D3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616D6F756E743D3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A8"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6409,
											"end": 6432,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6508,
											"end": 6523,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 6508,
											"end": 6538,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 6564,
											"end": 6630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6717,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 6717,
											"end": 6859,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6878,
											"end": 6888,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6893,
											"end": 6903,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6878,
											"end": 6888,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6893,
											"end": 6903,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6969,
											"end": 6981,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "10000000000000000"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6893,
											"end": 6903,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6893,
											"end": 6903,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7018,
											"end": 7041,
											"name": "PUSH",
											"source": 9,
											"value": "B6FD8C45CC3179470A3187D092B90E5C003137B502DEE828ED4ABA08D714CEC6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 7018,
											"end": 7041,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6878,
											"end": 6888,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C7265616479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6717,
											"end": 6859,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 6717,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "2C9707"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "E9"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6822,
											"end": 6832,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6717,
											"end": 6859,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 6717,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6717,
											"end": 6859,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6717,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 6717,
											"end": 6859,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E656C696769626C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6787,
											"end": 6833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 6787,
											"end": 6833,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B63932B0B23C90323930BBB7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6630,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 6564,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6508,
											"end": 6523,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 6592,
											"end": 6620,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6630,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 6564,
											"end": 6630,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195B991959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD081CDD185C9D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18D85B98D95B1B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD08199BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3098,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3098,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3098,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3054,
											"end": 3098,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3098,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 3054,
											"end": 3098,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3054,
											"end": 3098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 3013,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 3013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1A0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "LT",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "LT",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA7"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NATIVE()": "a0cf0aea",
							"createGiveaway(address,uint256,uint64,uint64,uint32)": "2e1352c3",
							"eligibilityVerifier()": "a14ea2b8",
							"enterGiveaway(uint256)": "193f453e",
							"giveaways(uint256)": "3e06df3d",
							"hasClaimed(uint256,address)": "873f6f9e",
							"hasEntered(uint256,address)": "073c74f3",
							"isWinner(uint256,address)": "bdd415af",
							"nextGiveawayId()": "6ac56ac0",
							"owner()": "8da5cb5b",
							"participants(uint256,uint256)": "81fb1fb4",
							"randomnessProvider()": "ce9bf5ac",
							"renounceOwnership()": "715018a6",
							"setEligibilityVerifier(address)": "e6414e37",
							"setRandomnessProvider(address)": "b15fbc14",
							"transferOwnership(address)": "f2fde38b",
							"winners(uint256,uint256)": "0efc8865"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_randomnessProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_eligibilityVerifier\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Cancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"EligibilityVerifierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Entered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"maxWinners\",\"type\":\"uint32\"}],\"name\":\"GiveawayCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"randomWord\",\"type\":\"uint256\"}],\"name\":\"RandomnessFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"RandomnessProviderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"reqId\",\"type\":\"bytes32\"}],\"name\":\"RandomnessRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RemainderSwept\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"winnersCount\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"perWinner\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"remainder\",\"type\":\"uint96\"}],\"name\":\"WinnersFinalized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"maxWinners\",\"type\":\"uint32\"}],\"name\":\"createGiveaway\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eligibilityVerifier\",\"outputs\":[{\"internalType\":\"contract IEligibilityVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"enterGiveaway\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"giveaways\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"maxWinners\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"drawn\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancelled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"randomWord\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"winnersCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"claims\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"perWinner\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"remainder\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasEntered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWinner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextGiveawayId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"participants\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomnessProvider\",\"outputs\":[{\"internalType\":\"contract IRandomnessProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_v\",\"type\":\"address\"}],\"name\":\"setEligibilityVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_p\",\"type\":\"address\"}],\"name\":\"setRandomnessProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createGiveaway(address,uint256,uint64,uint64,uint32)\":{\"notice\":\"Create a giveaway. For ERC20, prior approve is required. For native, send `amount` as msg.value.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":\"GiveawayManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":{\"keccak256\":\"0xaab57c2030779ea8ab5ae9b4b0ca260c39e3beb29ae3a9eb638e73f95b7dc198\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c0430b6a46359c75242e17a8c6a9ab59353e8a8d21d98669138fa00d27bfa17\",\"dweb:/ipfs/QmaydABNWeFsKCrgFdLF993vH3GuFS84QQVmzytJncZPys\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 933,
								"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
								"label": "randomnessProvider",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IRandomnessProvider)916"
							},
							{
								"astId": 936,
								"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
								"label": "eligibilityVerifier",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IEligibilityVerifier)907"
							},
							{
								"astId": 973,
								"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
								"label": "nextGiveawayId",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 978,
								"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
								"label": "giveaways",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(Giveaway)971_storage)"
							},
							{
								"astId": 983,
								"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
								"label": "participants",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
							},
							{
								"astId": 989,
								"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
								"label": "hasEntered",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 994,
								"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
								"label": "winners",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
							},
							{
								"astId": 1000,
								"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
								"label": "isWinner",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1006,
								"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
								"label": "hasClaimed",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IEligibilityVerifier)907": {
								"encoding": "inplace",
								"label": "contract IEligibilityVerifier",
								"numberOfBytes": "20"
							},
							"t_contract(IRandomnessProvider)916": {
								"encoding": "inplace",
								"label": "contract IRandomnessProvider",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_uint256,t_struct(Giveaway)971_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct GiveawayManager.Giveaway)",
								"numberOfBytes": "32",
								"value": "t_struct(Giveaway)971_storage"
							},
							"t_struct(Giveaway)971_storage": {
								"encoding": "inplace",
								"label": "struct GiveawayManager.Giveaway",
								"members": [
									{
										"astId": 946,
										"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
										"label": "creator",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 948,
										"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
										"label": "token",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 950,
										"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
										"label": "totalAmount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 952,
										"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
										"label": "startTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint64"
									},
									{
										"astId": 954,
										"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
										"label": "endTime",
										"offset": 8,
										"slot": "3",
										"type": "t_uint64"
									},
									{
										"astId": 956,
										"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
										"label": "maxWinners",
										"offset": 16,
										"slot": "3",
										"type": "t_uint32"
									},
									{
										"astId": 958,
										"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
										"label": "drawn",
										"offset": 20,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 960,
										"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
										"label": "cancelled",
										"offset": 21,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 962,
										"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
										"label": "randomWord",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 964,
										"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
										"label": "winnersCount",
										"offset": 0,
										"slot": "5",
										"type": "t_uint32"
									},
									{
										"astId": 966,
										"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
										"label": "claims",
										"offset": 4,
										"slot": "5",
										"type": "t_uint32"
									},
									{
										"astId": 968,
										"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
										"label": "perWinner",
										"offset": 8,
										"slot": "5",
										"type": "t_uint96"
									},
									{
										"astId": 970,
										"contract": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol:GiveawayManager",
										"label": "remainder",
										"offset": 20,
										"slot": "5",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createGiveaway(address,uint256,uint64,uint64,uint32)": {
								"notice": "Create a giveaway. For ERC20, prior approve is required. For native, send `amount` as msg.value."
							}
						},
						"version": 1
					}
				},
				"IEligibilityVerifier": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "giveawayId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "isEligible",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isEligible(uint256,address)": "592e0e00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"giveawayId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isEligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isEligible(uint256,address)\":{\"notice\":\"Return true if `user` is eligible to enter the given giveaway.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":\"IEligibilityVerifier\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":{\"keccak256\":\"0xaab57c2030779ea8ab5ae9b4b0ca260c39e3beb29ae3a9eb638e73f95b7dc198\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c0430b6a46359c75242e17a8c6a9ab59353e8a8d21d98669138fa00d27bfa17\",\"dweb:/ipfs/QmaydABNWeFsKCrgFdLF993vH3GuFS84QQVmzytJncZPys\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"isEligible(uint256,address)": {
								"notice": "Return true if `user` is eligible to enter the given giveaway."
							}
						},
						"version": 1
					}
				},
				"IRandomnessProvider": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "giveawayId",
									"type": "uint256"
								}
							],
							"name": "requestRandomness",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "reqId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"requestRandomness(uint256)": "7363ae1f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"giveawayId\",\"type\":\"uint256\"}],\"name\":\"requestRandomness\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"reqId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"requestRandomness(uint256)\":{\"notice\":\"Called by GiveawayManager to request randomness. Should arrange a later callback.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":\"IRandomnessProvider\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol\":{\"keccak256\":\"0xaab57c2030779ea8ab5ae9b4b0ca260c39e3beb29ae3a9eb638e73f95b7dc198\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c0430b6a46359c75242e17a8c6a9ab59353e8a8d21d98669138fa00d27bfa17\",\"dweb:/ipfs/QmaydABNWeFsKCrgFdLF993vH3GuFS84QQVmzytJncZPys\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"requestRandomness(uint256)": {
								"notice": "Called by GiveawayManager to request randomness. Should arrange a later callback."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 875,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 874,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								874
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							886
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 886,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								886,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 887,
							"src": "133:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "132:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "140:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 380,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 380,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 380,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 380,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 380,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 380,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 844,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 844,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 469,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 471,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 467,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 465,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 464,
												"id": 476,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 844,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 497,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 499,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 500,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 502,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 495,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 493,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 492,
												"id": 505,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 844,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 524,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 520,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 509,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 844,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															550
														],
														"declarations": [
															{
																"constant": false,
																"id": 550,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 579,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 559,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 555,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 553,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 557,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 561,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 570,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 569,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 564,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 565,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 566,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 563,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 568,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 572,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 573,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 574,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 575,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 571,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 578,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 844,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 592,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 596,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 598,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 594,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 604,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 605,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 603,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 609,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 612,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 614,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 587,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 615,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 616,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 608,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 621,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 622,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 620,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 583,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 380,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 844,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 641,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 655,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 657,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 653,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 668,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 667,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 663,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 660,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 666,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 648,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 649,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 646,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 630,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 844,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 686,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 701,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 703,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 704,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 715,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 714,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 710,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 675,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 708,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 707,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 713,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 692,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 693,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 694,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 691,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 844,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 731,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 747,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 743,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 758,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 757,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 753,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 751,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 750,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 756,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 737,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 738,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 739,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 736,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 741,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 844,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 771,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 774,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 776,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 777,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 788,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 782,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 780,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 795,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 793,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 792,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 798,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 844,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 813,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 814,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 824,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 835,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 829,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 806,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 827,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 839,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 812,
												"id": 841,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 380,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 844,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 845,
							"src": "698:9376:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 852,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 851,
												"id": 854,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 874,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 861,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 860,
												"id": 863,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 874,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 869,
												"id": 871,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 874,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 875,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 877,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 886,
							"linearizedBaseContracts": [
								886
							],
							"name": "IERC165",
							"nameLocation": "433:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "819:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 879,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:8"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "862:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:8"
									},
									"scope": 886,
									"src": "792:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 887,
							"src": "423:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:8"
				},
				"id": 8
			},
			"src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol": {
				"ast": {
					"absolutePath": "src/Contract Architecture/P2P & Social Transfers/GiveawayManager.sol",
					"exportedSymbols": {
						"GiveawayManager": [
							1397
						],
						"IERC20": [
							380
						],
						"IEligibilityVerifier": [
							907
						],
						"IRandomnessProvider": [
							916
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							844
						]
					},
					"id": 1398,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 888,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1398,
							"sourceUnit": 148,
							"src": "782:67:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 889,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "790:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1398,
							"sourceUnit": 303,
							"src": "850:85:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 891,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 302,
										"src": "858:15:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 894,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1398,
							"sourceUnit": 381,
							"src": "936:70:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 893,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "944:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 896,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1398,
							"sourceUnit": 845,
							"src": "1007:82:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 895,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 844,
										"src": "1015:9:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEligibilityVerifier",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 907,
							"linearizedBaseContracts": [
								907
							],
							"name": "IEligibilityVerifier",
							"nameLocation": "1101:20:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "1128:74:9",
										"text": "@notice Return true if `user` is eligible to enter the given giveaway."
									},
									"functionSelector": "592e0e00",
									"id": 906,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isEligible",
									"nameLocation": "1216:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "giveawayId",
												"nameLocation": "1235:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "1227:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1255:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "1247:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:34:9"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "1284:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 903,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1284:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:6:9"
									},
									"scope": 907,
									"src": "1207:83:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1398,
							"src": "1091:201:9",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRandomnessProvider",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 916,
							"linearizedBaseContracts": [
								916
							],
							"name": "IRandomnessProvider",
							"nameLocation": "1304:19:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "1330:93:9",
										"text": "@notice Called by GiveawayManager to request randomness. Should arrange a later callback."
									},
									"functionSelector": "7363ae1f",
									"id": 915,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestRandomness",
									"nameLocation": "1437:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "giveawayId",
												"nameLocation": "1463:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "1455:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:20:9"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "reqId",
												"nameLocation": "1501:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "1493:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 912,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:15:9"
									},
									"scope": 916,
									"src": "1428:80:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1398,
							"src": "1294:216:9",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 917,
										"name": "Ownable",
										"nameLocations": [
											"1540:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1540:7:9"
									},
									"id": 918,
									"nodeType": "InheritanceSpecifier",
									"src": "1540:7:9"
								},
								{
									"baseName": {
										"id": 919,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1549:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "1549:15:9"
									},
									"id": 920,
									"nodeType": "InheritanceSpecifier",
									"src": "1549:15:9"
								}
							],
							"canonicalName": "GiveawayManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1397,
							"linearizedBaseContracts": [
								1397,
								302,
								147,
								874
							],
							"name": "GiveawayManager",
							"nameLocation": "1521:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 924,
									"libraryName": {
										"id": 921,
										"name": "SafeERC20",
										"nameLocations": [
											"1577:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "1577:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "1571:27:9",
									"typeName": {
										"id": 923,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 922,
											"name": "IERC20",
											"nameLocations": [
												"1591:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "1591:6:9"
										},
										"referencedDeclaration": 380,
										"src": "1591:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "a0cf0aea",
									"id": 930,
									"mutability": "constant",
									"name": "NATIVE",
									"nameLocation": "1628:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "1604:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 925,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1604:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 928,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1645:1:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 927,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1637:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 926,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:9",
												"typeDescriptions": {}
											}
										},
										"id": 929,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1637:10:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ce9bf5ac",
									"id": 933,
									"mutability": "mutable",
									"name": "randomnessProvider",
									"nameLocation": "1711:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "1684:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IRandomnessProvider_$916",
										"typeString": "contract IRandomnessProvider"
									},
									"typeName": {
										"id": 932,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 931,
											"name": "IRandomnessProvider",
											"nameLocations": [
												"1684:19:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 916,
											"src": "1684:19:9"
										},
										"referencedDeclaration": 916,
										"src": "1684:19:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IRandomnessProvider_$916",
											"typeString": "contract IRandomnessProvider"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a14ea2b8",
									"id": 936,
									"mutability": "mutable",
									"name": "eligibilityVerifier",
									"nameLocation": "1799:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "1771:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IEligibilityVerifier_$907",
										"typeString": "contract IEligibilityVerifier"
									},
									"typeName": {
										"id": 935,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 934,
											"name": "IEligibilityVerifier",
											"nameLocations": [
												"1771:20:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 907,
											"src": "1771:20:9"
										},
										"referencedDeclaration": 907,
										"src": "1771:20:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IEligibilityVerifier_$907",
											"typeString": "contract IEligibilityVerifier"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "87b050f471f7331bfd8fc9347cd54894f2ae6663e3339e49ca0d8b2dbe792eb2",
									"id": 940,
									"name": "RandomnessProviderUpdated",
									"nameLocation": "1863:25:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "1905:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "1889:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1889:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1888:26:9"
									},
									"src": "1857:58:9"
								},
								{
									"anonymous": false,
									"eventSelector": "523584dd19b074bf12112a06b4ccfc2c91696564a12a6d76cdaa62c87da72868",
									"id": 944,
									"name": "EligibilityVerifierUpdated",
									"nameLocation": "1926:26:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"indexed": true,
												"mutability": "mutable",
												"name": "verifier",
												"nameLocation": "1969:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1953:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:26:9"
									},
									"src": "1920:59:9"
								},
								{
									"canonicalName": "GiveawayManager.Giveaway",
									"id": 971,
									"members": [
										{
											"constant": false,
											"id": 946,
											"mutability": "mutable",
											"name": "creator",
											"nameLocation": "2049:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "2041:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 945,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2041:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 948,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "2074:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "2066:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 947,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2066:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 950,
											"mutability": "mutable",
											"name": "totalAmount",
											"nameLocation": "2138:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "2130:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 949,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2130:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 952,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "2180:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "2172:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 951,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2172:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 954,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "2226:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "2218:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 953,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2218:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 956,
											"mutability": "mutable",
											"name": "maxWinners",
											"nameLocation": "2272:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "2264:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 955,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2264:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 958,
											"mutability": "mutable",
											"name": "drawn",
											"nameLocation": "2309:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "2301:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 957,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2301:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 960,
											"mutability": "mutable",
											"name": "cancelled",
											"nameLocation": "2359:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "2351:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 959,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2351:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 962,
											"mutability": "mutable",
											"name": "randomWord",
											"nameLocation": "2422:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "2414:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 961,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2414:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 964,
											"mutability": "mutable",
											"name": "winnersCount",
											"nameLocation": "2478:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "2470:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 963,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2470:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 966,
											"mutability": "mutable",
											"name": "claims",
											"nameLocation": "2566:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "2558:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 965,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2558:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 968,
											"mutability": "mutable",
											"name": "perWinner",
											"nameLocation": "2629:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "2621:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 967,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "2621:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 970,
											"mutability": "mutable",
											"name": "remainder",
											"nameLocation": "2697:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "2689:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 969,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "2689:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Giveaway",
									"nameLocation": "2022:8:9",
									"nodeType": "StructDefinition",
									"scope": 1397,
									"src": "2015:768:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6ac56ac0",
									"id": 973,
									"mutability": "mutable",
									"name": "nextGiveawayId",
									"nameLocation": "2804:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "2789:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 972,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2789:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3e06df3d",
									"id": 978,
									"mutability": "mutable",
									"name": "giveaways",
									"nameLocation": "2860:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "2824:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Giveaway_$971_storage_$",
										"typeString": "mapping(uint256 => struct GiveawayManager.Giveaway)"
									},
									"typeName": {
										"id": 977,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 974,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2832:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2824:28:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Giveaway_$971_storage_$",
											"typeString": "mapping(uint256 => struct GiveawayManager.Giveaway)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 976,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 975,
												"name": "Giveaway",
												"nameLocations": [
													"2843:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 971,
												"src": "2843:8:9"
											},
											"referencedDeclaration": 971,
											"src": "2843:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Giveaway_$971_storage_ptr",
												"typeString": "struct GiveawayManager.Giveaway"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "81fb1fb4",
									"id": 983,
									"mutability": "mutable",
									"name": "participants",
									"nameLocation": "2933:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "2896:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(uint256 => address[])"
									},
									"typeName": {
										"id": 982,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 979,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2904:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2896:29:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(uint256 => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 980,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2915:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 981,
											"nodeType": "ArrayTypeName",
											"src": "2915:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "073c74f3",
									"id": 989,
									"mutability": "mutable",
									"name": "hasEntered",
									"nameLocation": "3003:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "2951:62:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(address => bool))"
									},
									"typeName": {
										"id": 988,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 984,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2959:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2951:44:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 987,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 985,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2978:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2970:24:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 986,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2989:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0efc8865",
									"id": 994,
									"mutability": "mutable",
									"name": "winners",
									"nameLocation": "3091:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "3054:44:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(uint256 => address[])"
									},
									"typeName": {
										"id": 993,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 990,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3062:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3054:29:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(uint256 => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 991,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3073:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 992,
											"nodeType": "ArrayTypeName",
											"src": "3073:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bdd415af",
									"id": 1000,
									"mutability": "mutable",
									"name": "isWinner",
									"nameLocation": "3156:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "3104:60:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(address => bool))"
									},
									"typeName": {
										"id": 999,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 995,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3112:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3104:44:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 998,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 996,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3131:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3123:24:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 997,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3142:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "873f6f9e",
									"id": 1006,
									"mutability": "mutable",
									"name": "hasClaimed",
									"nameLocation": "3222:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1397,
									"src": "3170:62:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(address => bool))"
									},
									"typeName": {
										"id": 1005,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1001,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3178:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3170:44:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1004,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1002,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3197:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3189:24:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1003,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3208:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "962c97b71f3c7f35b27f4570b64d7b71858ecd66da4ad735b2b15ad782cc69d7",
									"id": 1022,
									"name": "GiveawayCreated",
									"nameLocation": "3267:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3308:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "3292:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3292:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "3336:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "3320:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3369:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "3353:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3353:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3392:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "3384:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "3415:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "3408:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1015,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3408:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "3441:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "3434:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1017,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3434:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxWinners",
												"nameLocation": "3465:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "3458:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1019,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3458:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3282:199:9"
									},
									"src": "3261:221:9"
								},
								{
									"anonymous": false,
									"eventSelector": "b6fd8c45cc3179470a3187d092b90e5c003137b502dee828ed4aba08d714cec6",
									"id": 1028,
									"name": "Entered",
									"nameLocation": "3493:7:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3517:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "3501:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3537:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "3521:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:42:9"
									},
									"src": "3487:56:9"
								},
								{
									"anonymous": false,
									"eventSelector": "c41d93b8bfbf9fd7cf5bfe271fd649ab6a6fec0ea101c23b82a2a28eca2533a9",
									"id": 1032,
									"name": "Cancelled",
									"nameLocation": "3554:9:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3580:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "3564:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:20:9"
									},
									"src": "3548:36:9"
								},
								{
									"anonymous": false,
									"eventSelector": "587602b661da57eff43c58d2ebb4b7c66d08862f786faf29f390136b3309a128",
									"id": 1038,
									"name": "RandomnessRequested",
									"nameLocation": "3595:19:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3631:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "3615:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3615:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": false,
												"mutability": "mutable",
												"name": "reqId",
												"nameLocation": "3643:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "3635:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1035,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3614:35:9"
									},
									"src": "3589:61:9"
								},
								{
									"anonymous": false,
									"eventSelector": "546aca7b2683440b8f02fa95faeb8efc79dd0f16af3d815a002742ea6f76116c",
									"id": 1044,
									"name": "RandomnessFulfilled",
									"nameLocation": "3661:19:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3697:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3681:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3681:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"indexed": false,
												"mutability": "mutable",
												"name": "randomWord",
												"nameLocation": "3709:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3701:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3701:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3680:40:9"
									},
									"src": "3655:66:9"
								},
								{
									"anonymous": false,
									"eventSelector": "db1bd99861bb69e2f1f6eb27043e6cb1ae44ee889fdcc7bbb481ba64ba6fcc8a",
									"id": 1054,
									"name": "WinnersFinalized",
									"nameLocation": "3732:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3765:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "3749:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"indexed": false,
												"mutability": "mutable",
												"name": "winnersCount",
												"nameLocation": "3776:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "3769:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1047,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3769:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"indexed": false,
												"mutability": "mutable",
												"name": "perWinner",
												"nameLocation": "3797:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "3790:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1049,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3790:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"indexed": false,
												"mutability": "mutable",
												"name": "remainder",
												"nameLocation": "3815:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "3808:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1051,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3808:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:77:9"
									},
									"src": "3726:100:9"
								},
								{
									"anonymous": false,
									"eventSelector": "4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed026",
									"id": 1062,
									"name": "Claimed",
									"nameLocation": "3837:7:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3861:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "3845:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "3881:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "3865:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3897:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "3889:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3889:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3844:60:9"
									},
									"src": "3831:74:9"
								},
								{
									"anonymous": false,
									"eventSelector": "e880b2e7a4defa627529a709c776b1b6d00944f3211710ef833fb3243d9ae394",
									"id": 1070,
									"name": "RemainderSwept",
									"nameLocation": "3916:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3947:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "3931:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3931:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3967:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "3951:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3951:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3979:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "3971:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3971:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3930:56:9"
									},
									"src": "3910:77:9"
								},
								{
									"body": {
										"id": 1117,
										"nodeType": "Block",
										"src": "4084:411:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1081,
														"name": "_randomnessProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "4098:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4129:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4121:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1082,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4121:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4121:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4098:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1098,
												"nodeType": "IfStatement",
												"src": "4094:190:9",
												"trueBody": {
													"id": 1097,
													"nodeType": "Block",
													"src": "4133:151:9",
													"statements": [
														{
															"expression": {
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1087,
																	"name": "randomnessProvider",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "4147:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IRandomnessProvider_$916",
																		"typeString": "contract IRandomnessProvider"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1089,
																			"name": "_randomnessProvider",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1072,
																			"src": "4188:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1088,
																		"name": "IRandomnessProvider",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "4168:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IRandomnessProvider_$916_$",
																			"typeString": "type(contract IRandomnessProvider)"
																		}
																	},
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4168:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IRandomnessProvider_$916",
																		"typeString": "contract IRandomnessProvider"
																	}
																},
																"src": "4147:61:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IRandomnessProvider_$916",
																	"typeString": "contract IRandomnessProvider"
																}
															},
															"id": 1092,
															"nodeType": "ExpressionStatement",
															"src": "4147:61:9"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1094,
																		"name": "_randomnessProvider",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1072,
																		"src": "4253:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1093,
																	"name": "RandomnessProviderUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "4227:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4227:46:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1096,
															"nodeType": "EmitStatement",
															"src": "4222:51:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1099,
														"name": "_eligibilityVerifier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "4297:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4329:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4321:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1100,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4321:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4321:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4297:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1116,
												"nodeType": "IfStatement",
												"src": "4293:196:9",
												"trueBody": {
													"id": 1115,
													"nodeType": "Block",
													"src": "4333:156:9",
													"statements": [
														{
															"expression": {
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1105,
																	"name": "eligibilityVerifier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "4347:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IEligibilityVerifier_$907",
																		"typeString": "contract IEligibilityVerifier"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1107,
																			"name": "_eligibilityVerifier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1074,
																			"src": "4390:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1106,
																		"name": "IEligibilityVerifier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "4369:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IEligibilityVerifier_$907_$",
																			"typeString": "type(contract IEligibilityVerifier)"
																		}
																	},
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4369:42:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IEligibilityVerifier_$907",
																		"typeString": "contract IEligibilityVerifier"
																	}
																},
																"src": "4347:64:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IEligibilityVerifier_$907",
																	"typeString": "contract IEligibilityVerifier"
																}
															},
															"id": 1110,
															"nodeType": "ExpressionStatement",
															"src": "4347:64:9"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1112,
																		"name": "_eligibilityVerifier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1074,
																		"src": "4457:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1111,
																	"name": "EligibilityVerifierUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "4430:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4430:48:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1114,
															"nodeType": "EmitStatement",
															"src": "4425:53:9"
														}
													]
												}
											}
										]
									},
									"id": 1118,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1077,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4072:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4076:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4072:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1079,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1076,
												"name": "Ownable",
												"nameLocations": [
													"4064:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "4064:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4064:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "_randomnessProvider",
												"nameLocation": "4013:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "4005:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4005:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "_eligibilityVerifier",
												"nameLocation": "4042:20:9",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "4034:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4034:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:59:9"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4084:0:9"
									},
									"scope": 1397,
									"src": "3993:502:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "4592:105:9",
										"statements": [
											{
												"expression": {
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1125,
														"name": "randomnessProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "4602:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRandomnessProvider_$916",
															"typeString": "contract IRandomnessProvider"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1127,
																"name": "_p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "4643:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1126,
															"name": "IRandomnessProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "4623:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IRandomnessProvider_$916_$",
																"typeString": "type(contract IRandomnessProvider)"
															}
														},
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4623:23:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRandomnessProvider_$916",
															"typeString": "contract IRandomnessProvider"
														}
													},
													"src": "4602:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRandomnessProvider_$916",
														"typeString": "contract IRandomnessProvider"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "4602:44:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1132,
															"name": "_p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "4687:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1131,
														"name": "RandomnessProviderUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "4661:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4661:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "EmitStatement",
												"src": "4656:34:9"
											}
										]
									},
									"functionSelector": "b15fbc14",
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1123,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1122,
												"name": "onlyOwner",
												"nameLocations": [
													"4582:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4582:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4582:9:9"
										}
									],
									"name": "setRandomnessProvider",
									"nameLocation": "4539:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "_p",
												"nameLocation": "4569:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "4561:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4561:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4560:12:9"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4592:0:9"
									},
									"scope": 1397,
									"src": "4530:167:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "4766:108:9",
										"statements": [
											{
												"expression": {
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1143,
														"name": "eligibilityVerifier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "4776:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IEligibilityVerifier_$907",
															"typeString": "contract IEligibilityVerifier"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1145,
																"name": "_v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "4819:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1144,
															"name": "IEligibilityVerifier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "4798:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IEligibilityVerifier_$907_$",
																"typeString": "type(contract IEligibilityVerifier)"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4798:24:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IEligibilityVerifier_$907",
															"typeString": "contract IEligibilityVerifier"
														}
													},
													"src": "4776:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEligibilityVerifier_$907",
														"typeString": "contract IEligibilityVerifier"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "4776:46:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1150,
															"name": "_v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "4864:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1149,
														"name": "EligibilityVerifierUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "4837:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4837:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "EmitStatement",
												"src": "4832:35:9"
											}
										]
									},
									"functionSelector": "e6414e37",
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1141,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1140,
												"name": "onlyOwner",
												"nameLocations": [
													"4756:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4756:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4756:9:9"
										}
									],
									"name": "setEligibilityVerifier",
									"nameLocation": "4712:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "_v",
												"nameLocation": "4743:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4735:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:12:9"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4766:0:9"
									},
									"scope": 1397,
									"src": "4703:171:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "5233:1035:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1171,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "5251:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5260:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5251:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e743d30",
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5263:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f3d43be4c9366c654b499981ff1784f2a478610bb1c0dd88ef60d1ec3f7ab21f",
																"typeString": "literal_string \"amount=0\""
															},
															"value": "amount=0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f3d43be4c9366c654b499981ff1784f2a478610bb1c0dd88ef60d1ec3f7ab21f",
																"typeString": "literal_string \"amount=0\""
															}
														],
														"id": 1170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5243:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5243:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "5243:31:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1178,
																"name": "maxWinners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "5292:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5306:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "5292:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77696e6e6572733d30",
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5309:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00f161a052a8cde7b2ddddc776e694d1c4d1b8481a64ce4b01c595b7feba5b3b",
																"typeString": "literal_string \"winners=0\""
															},
															"value": "winners=0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00f161a052a8cde7b2ddddc776e694d1c4d1b8481a64ce4b01c595b7feba5b3b",
																"typeString": "literal_string \"winners=0\""
															}
														],
														"id": 1177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5284:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5284:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1183,
												"nodeType": "ExpressionStatement",
												"src": "5284:37:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1185,
																	"name": "endTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "5339:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5350:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5339:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1188,
																	"name": "endTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "5355:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1189,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "5365:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "5355:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5339:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "74696d65",
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5376:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_112c413de07a110ce0a9ace0c01e41b5b59462770325b042f0dc72c337f55f2f",
																"typeString": "literal_string \"time\""
															},
															"value": "time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_112c413de07a110ce0a9ace0c01e41b5b59462770325b042f0dc72c337f55f2f",
																"typeString": "literal_string \"time\""
															}
														],
														"id": 1184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5331:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5331:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "5331:52:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1195,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "5397:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5410:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5397:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1206,
												"nodeType": "IfStatement",
												"src": "5393:55:9",
												"trueBody": {
													"expression": {
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1198,
															"name": "startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "5413:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"expression": {
																		"id": 1201,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5432:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5438:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5432:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5425:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint64_$",
																	"typeString": "type(uint64)"
																},
																"typeName": {
																	"id": 1199,
																	"name": "uint64",
																	"nodeType": "ElementaryTypeName",
																	"src": "5425:6:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5425:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "5413:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1205,
													"nodeType": "ExpressionStatement",
													"src": "5413:35:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1207,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "5485:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1208,
														"name": "NATIVE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "5494:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5485:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1240,
													"nodeType": "Block",
													"src": "5574:137:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1223,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5619:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5623:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5619:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1227,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5639:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_GiveawayManager_$1397",
																					"typeString": "contract GiveawayManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_GiveawayManager_$1397",
																					"typeString": "contract GiveawayManager"
																				}
																			],
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1225,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1229,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "5646:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1220,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1157,
																				"src": "5595:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1219,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "5588:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5588:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5602:16:9",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 452,
																	"src": "5588:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5588:65:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1231,
															"nodeType": "ExpressionStatement",
															"src": "5588:65:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1233,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5675:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5679:5:9",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "5675:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5688:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5675:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "6e6f20657468",
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5691:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4152017945c1527fdb3bb32a34907e3cea442439d79680122ef55ce36de01c25",
																			"typeString": "literal_string \"no eth\""
																		},
																		"value": "no eth"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_4152017945c1527fdb3bb32a34907e3cea442439d79680122ef55ce36de01c25",
																			"typeString": "literal_string \"no eth\""
																		}
																	],
																	"id": 1232,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5667:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5667:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1239,
															"nodeType": "ExpressionStatement",
															"src": "5667:33:9"
														}
													]
												},
												"id": 1241,
												"nodeType": "IfStatement",
												"src": "5481:230:9",
												"trueBody": {
													"id": 1218,
													"nodeType": "Block",
													"src": "5502:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1211,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5524:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5528:5:9",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "5524:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1213,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "5537:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5524:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "6261642076616c7565",
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5545:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f2e5165a60eaee1c6ee52001c1676df358076a1b284b14778190ce620dad8ad7",
																			"typeString": "literal_string \"bad value\""
																		},
																		"value": "bad value"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_f2e5165a60eaee1c6ee52001c1676df358076a1b284b14778190ce620dad8ad7",
																			"typeString": "literal_string \"bad value\""
																		}
																	],
																	"id": 1210,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5516:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5516:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1217,
															"nodeType": "ExpressionStatement",
															"src": "5516:41:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1242,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "5721:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5726:16:9",
														"subExpression": {
															"id": 1243,
															"name": "nextGiveawayId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "5728:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5721:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "5721:21:9"
											},
											{
												"expression": {
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1247,
															"name": "giveaways",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "5752:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Giveaway_$971_storage_$",
																"typeString": "mapping(uint256 => struct GiveawayManager.Giveaway storage ref)"
															}
														},
														"id": 1249,
														"indexExpression": {
															"id": 1248,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "5762:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5752:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Giveaway_$971_storage",
															"typeString": "struct GiveawayManager.Giveaway storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1251,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5800:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5804:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5800:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1253,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1157,
																"src": "5831:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1254,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "5863:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1255,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "5894:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"id": 1256,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "5926:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"id": 1257,
																"name": "maxWinners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "5959:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5990:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "66616c7365",
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6020:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6051:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6080:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6103:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6129:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6155:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1250,
															"name": "Giveaway",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "5768:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Giveaway_$971_storage_ptr_$",
																"typeString": "type(struct GiveawayManager.Giveaway storage pointer)"
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"5791:7:9",
															"5824:5:9",
															"5850:11:9",
															"5883:9:9",
															"5917:7:9",
															"5947:10:9",
															"5983:5:9",
															"6009:9:9",
															"6039:10:9",
															"6066:12:9",
															"6095:6:9",
															"6118:9:9",
															"6144:9:9"
														],
														"names": [
															"creator",
															"token",
															"totalAmount",
															"startTime",
															"endTime",
															"maxWinners",
															"drawn",
															"cancelled",
															"randomWord",
															"winnersCount",
															"claims",
															"perWinner",
															"remainder"
														],
														"nodeType": "FunctionCall",
														"src": "5768:399:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Giveaway_$971_memory_ptr",
															"typeString": "struct GiveawayManager.Giveaway memory"
														}
													},
													"src": "5752:415:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Giveaway_$971_storage",
														"typeString": "struct GiveawayManager.Giveaway storage ref"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "5752:415:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1269,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "6199:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1270,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6203:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6207:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6203:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1272,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "6215:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1273,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "6222:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1274,
															"name": "startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "6230:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 1275,
															"name": "endTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "6241:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 1276,
															"name": "maxWinners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "6250:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 1268,
														"name": "GiveawayCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "6183:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint64_$_t_uint64_$_t_uint32_$returns$__$",
															"typeString": "function (uint256,address,address,uint256,uint64,uint64,uint32)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6183:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "EmitStatement",
												"src": "6178:83:9"
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "4910:123:9",
										"text": " @notice Create a giveaway. For ERC20, prior approve is required. For native, send `amount` as msg.value."
									},
									"functionSelector": "2e1352c3",
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createGiveaway",
									"nameLocation": "5047:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5079:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "5071:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5071:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5102:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "5094:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5094:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "5126:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "5118:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1160,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5118:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "5153:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "5145:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1162,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5145:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "maxWinners",
												"nameLocation": "5178:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "5170:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1164,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "5170:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5061:133:9"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5229:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "5221:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5221:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5220:12:9"
									},
									"scope": 1397,
									"src": "5038:1230:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "6348:700:9",
										"statements": [
											{
												"assignments": [
													1287
												],
												"declarations": [
													{
														"constant": false,
														"id": 1287,
														"mutability": "mutable",
														"name": "g",
														"nameLocation": "6374:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 1395,
														"src": "6358:17:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Giveaway_$971_memory_ptr",
															"typeString": "struct GiveawayManager.Giveaway"
														},
														"typeName": {
															"id": 1286,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1285,
																"name": "Giveaway",
																"nameLocations": [
																	"6358:8:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 971,
																"src": "6358:8:9"
															},
															"referencedDeclaration": 971,
															"src": "6358:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Giveaway_$971_storage_ptr",
																"typeString": "struct GiveawayManager.Giveaway"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1291,
												"initialValue": {
													"baseExpression": {
														"id": 1288,
														"name": "giveaways",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "6378:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Giveaway_$971_storage_$",
															"typeString": "mapping(uint256 => struct GiveawayManager.Giveaway storage ref)"
														}
													},
													"id": 1290,
													"indexExpression": {
														"id": 1289,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "6388:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6378:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Giveaway_$971_storage",
														"typeString": "struct GiveawayManager.Giveaway storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6358:33:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1293,
																	"name": "g",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "6409:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Giveaway_$971_memory_ptr",
																		"typeString": "struct GiveawayManager.Giveaway memory"
																	}
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6411:7:9",
																"memberName": "creator",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 946,
																"src": "6409:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6430:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6422:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1295,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6422:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6422:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6409:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420666f756e64",
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6434:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b887cfddc434e3cf41b666954131afc611b880c7637aac66ca1f629f8984c5b",
																"typeString": "literal_string \"not found\""
															},
															"value": "not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b887cfddc434e3cf41b666954131afc611b880c7637aac66ca1f629f8984c5b",
																"typeString": "literal_string \"not found\""
															}
														],
														"id": 1292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6401:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6401:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "6401:45:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6464:12:9",
															"subExpression": {
																"expression": {
																	"id": 1304,
																	"name": "g",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "6465:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Giveaway_$971_memory_ptr",
																		"typeString": "struct GiveawayManager.Giveaway memory"
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6467:9:9",
																"memberName": "cancelled",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 960,
																"src": "6465:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e63656c6c6564",
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6478:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e59e9111f1b9511a1ea11943d5b8f06ca0a56004b3dce0c2ac827247ee014552",
																"typeString": "literal_string \"cancelled\""
															},
															"value": "cancelled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e59e9111f1b9511a1ea11943d5b8f06ca0a56004b3dce0c2ac827247ee014552",
																"typeString": "literal_string \"cancelled\""
															}
														],
														"id": 1303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6456:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6456:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "6456:34:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1311,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6508:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6514:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6508:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1313,
																	"name": "g",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "6527:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Giveaway_$971_memory_ptr",
																		"typeString": "struct GiveawayManager.Giveaway memory"
																	}
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6529:9:9",
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 952,
																"src": "6527:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "6508:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742073746172746564",
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6540:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694",
																"typeString": "literal_string \"not started\""
															},
															"value": "not started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e77010d1cd84746d4d55bc64a3553056b308493098e3085151b4455976f44694",
																"typeString": "literal_string \"not started\""
															}
														],
														"id": 1310,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6500:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6500:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1318,
												"nodeType": "ExpressionStatement",
												"src": "6500:54:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1319,
															"name": "g",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "6568:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Giveaway_$971_memory_ptr",
																"typeString": "struct GiveawayManager.Giveaway memory"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6570:7:9",
														"memberName": "endTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "6568:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6581:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6568:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1332,
												"nodeType": "IfStatement",
												"src": "6564:66:9",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1324,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6592:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6598:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6592:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1326,
																		"name": "g",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "6611:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Giveaway_$971_memory_ptr",
																			"typeString": "struct GiveawayManager.Giveaway memory"
																		}
																	},
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6613:7:9",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 954,
																	"src": "6611:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "6592:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"hexValue": "656e646564",
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6622:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38",
																	"typeString": "literal_string \"ended\""
																},
																"value": "ended"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_stringliteral_eda95f959a2930889a9a5ac20593327fae0cbcf35fa43e612c4ff964430edb38",
																	"typeString": "literal_string \"ended\""
																}
															],
															"id": 1323,
															"name": "require",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967278,
																4294967278,
																4294967278
															],
															"referencedDeclaration": 4294967278,
															"src": "6584:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (bool,string memory) pure"
															}
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6584:46:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1331,
													"nodeType": "ExpressionStatement",
													"src": "6584:46:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6648:8:9",
															"subExpression": {
																"expression": {
																	"id": 1334,
																	"name": "g",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "6649:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Giveaway_$971_memory_ptr",
																		"typeString": "struct GiveawayManager.Giveaway memory"
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6651:5:9",
																"memberName": "drawn",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 958,
																"src": "6649:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c726561647920647261776e",
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6658:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b6386fdb54dbe64bb848e44e6595219c529bc195e4c85520ece4f96062123c4",
																"typeString": "literal_string \"already drawn\""
															},
															"value": "already drawn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b6386fdb54dbe64bb848e44e6595219c529bc195e4c85520ece4f96062123c4",
																"typeString": "literal_string \"already drawn\""
															}
														],
														"id": 1333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6640:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6640:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "6640:34:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1342,
																"name": "eligibilityVerifier",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "6729:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IEligibilityVerifier_$907",
																	"typeString": "contract IEligibilityVerifier"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IEligibilityVerifier_$907",
																	"typeString": "contract IEligibilityVerifier"
																}
															],
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6721:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1340,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6721:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6721:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6761:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6753:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1344,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6753:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6753:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6721:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1360,
												"nodeType": "IfStatement",
												"src": "6717:142:9",
												"trueBody": {
													"id": 1359,
													"nodeType": "Block",
													"src": "6765:94:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1352,
																				"name": "id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1282,
																				"src": "6818:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 1353,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "6822:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6826:6:9",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "6822:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 1350,
																				"name": "eligibilityVerifier",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 936,
																				"src": "6787:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IEligibilityVerifier_$907",
																					"typeString": "contract IEligibilityVerifier"
																				}
																			},
																			"id": 1351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6807:10:9",
																			"memberName": "isEligible",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 906,
																			"src": "6787:30:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (uint256,address) view external returns (bool)"
																			}
																		},
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6787:46:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "696e656c696769626c65",
																		"id": 1356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6835:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_33b9205e59caa2b7922525c13ed073f00f7aa3f4cebb07b68fcb0633031c0650",
																			"typeString": "literal_string \"ineligible\""
																		},
																		"value": "ineligible"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_33b9205e59caa2b7922525c13ed073f00f7aa3f4cebb07b68fcb0633031c0650",
																			"typeString": "literal_string \"ineligible\""
																		}
																	],
																	"id": 1349,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6779:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6779:69:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1358,
															"nodeType": "ExpressionStatement",
															"src": "6779:69:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6877:27:9",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1362,
																		"name": "hasEntered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "6878:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(address => bool))"
																		}
																	},
																	"id": 1364,
																	"indexExpression": {
																		"id": 1363,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1282,
																		"src": "6889:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6878:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1367,
																"indexExpression": {
																	"expression": {
																		"id": 1365,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6893:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6897:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6893:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6878:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c7265616479",
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6906:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4d68d74f0eb71ad33b0461f9e93dd42c23615ec558b78fd521e288d1779313d9",
																"typeString": "literal_string \"already\""
															},
															"value": "already"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4d68d74f0eb71ad33b0461f9e93dd42c23615ec558b78fd521e288d1779313d9",
																"typeString": "literal_string \"already\""
															}
														],
														"id": 1361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6869:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6869:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "6869:47:9"
											},
											{
												"expression": {
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1372,
																"name": "hasEntered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "6926:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 1376,
															"indexExpression": {
																"id": 1373,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1282,
																"src": "6937:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6926:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1377,
														"indexExpression": {
															"expression": {
																"id": 1374,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6941:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6945:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6941:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6926:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6955:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6926:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "6926:33:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1385,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6991:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6995:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6991:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1381,
																"name": "participants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "6969:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(uint256 => address[] storage ref)"
																}
															},
															"id": 1383,
															"indexExpression": {
																"id": 1382,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1282,
																"src": "6982:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6969:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6986:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6969:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6969:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "6969:33:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1390,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "7026:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1391,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7030:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7034:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7030:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1389,
														"name": "Entered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "7018:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7018:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1394,
												"nodeType": "EmitStatement",
												"src": "7013:28:9"
											}
										]
									},
									"functionSelector": "193f453e",
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enterGiveaway",
									"nameLocation": "6313:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6335:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "6327:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6327:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6326:12:9"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6348:0:9"
									},
									"scope": 1397,
									"src": "6304:744:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1398,
							"src": "1512:5577:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								940,
								944,
								1022,
								1028,
								1032,
								1038,
								1044,
								1054,
								1062,
								1070
							]
						}
					],
					"src": "32:7057:9"
				},
				"id": 9
			}
		}
	}
}