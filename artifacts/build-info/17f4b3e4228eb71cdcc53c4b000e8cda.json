{
	"id": "17f4b3e4228eb71cdcc53c4b000e8cda",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"src/Contract Architecture/P2P & Social Transfers/EligibilityVerifier.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title EligibilityVerifier\n * @notice Minimal contract to enforce per-user eligibility rules for modules.\n *         Can be extended with token/NFT gating or external verifiers.\n */\ncontract EligibilityVerifier {\n    mapping(address => bool) public isEligible;\n\n    event EligibilitySet(address indexed user, bool eligible);\n\n    modifier onlyEligible(address user) {\n        require(isEligible[user], \"EligibilityVerifier: user not eligible\");\n        _;\n    }\n\n    function setEligibility(address user, bool eligible) external {\n        // In production, replace `external` with proper admin access (Ownable / AccessControl)\n        isEligible[user] = eligible;\n        emit EligibilitySet(user, eligible);\n    }\n\n    function checkEligibility(address user) external view returns (bool) {\n        return isEligible[user];\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"src/Contract Architecture/P2P & Social Transfers/EligibilityVerifier.sol": {
				"EligibilityVerifier": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "eligible",
									"type": "bool"
								}
							],
							"name": "EligibilitySet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "checkEligibility",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isEligible",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "eligible",
									"type": "bool"
								}
							],
							"name": "setEligibility",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "EligibilityVerifier",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Contract Architecture/P2P & Social Transfers/EligibilityVerifier.sol\":247:896  contract EligibilityVerifier {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"src/Contract Architecture/P2P & Social Transfers/EligibilityVerifier.sol\":247:896  contract EligibilityVerifier {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_2, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_2:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x2d63294d\n      eq\n      tag_4\n      jumpi\n      pop\n      dup1\n      0x66e305fd\n      eq\n      tag_8\n      jumpi\n      0x7723bafb\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      jumpi(tag_12, callvalue)\n      jumpi(tag_12, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_14\n      tag_1\n      jump\t// in\n    tag_14:\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_12:\n      0x00\n      dup1\n      revert\n    tag_4:\n      jumpi(tag_12, callvalue)\n      jumpi(tag_12, slt(add(not(0x03), calldatasize), 0x40))\n      tag_24\n      tag_1\n      jump\t// in\n    tag_24:\n      swap1\n      calldataload(0x24)\n      swap2\n      dup3\n      iszero\n      iszero\n      dup1\n      swap4\n      sub\n      tag_12\n      jumpi\n        /* \"src/Contract Architecture/P2P & Social Transfers/EligibilityVerifier.sol\":742:772  EligibilitySet(user, eligible) */\n      0x84491124de7d287ce3f02c6f49337e6bc1e12b50ab8f8f58c93ea2e14f6f3511\n        /* \"src/Contract Architecture/P2P & Social Transfers/EligibilityVerifier.sol\":247:896  contract EligibilityVerifier {... */\n      swap2\n      0x20\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap4\n      dup5\n      0x00\n      mstore\n      0x00\n      dup4\n      mstore\n      keccak256(0x00, 0x40)\n      not(0xff)\n      dup2\n      sload\n      and\n      0xff\n      dup4\n      and\n      or\n      swap1\n      sstore\n      dup2\n      mstore\n        /* \"src/Contract Architecture/P2P & Social Transfers/EligibilityVerifier.sol\":742:772  EligibilitySet(user, eligible) */\n      log2\n        /* \"src/Contract Architecture/P2P & Social Transfers/EligibilityVerifier.sol\":247:896  contract EligibilityVerifier {... */\n      stop\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_12\n      jumpi\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209ba4138d8af4d5b59479f9cf756e782bf148c65280239dd7fdf19d4a0e92f8a164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460155761013b908161001a8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c9081632d63294d1461007d5750806366e305fd1461003d57637723bafb1461003d575f80fd5b34610079576020366003190112610079576001600160a01b0361005e6100ef565b165f525f602052602060ff60405f2054166040519015158152f35b5f80fd5b34610079576040366003190112610079576100966100ef565b9060243591821515809303610079577f84491124de7d287ce3f02c6f49337e6bc1e12b50ab8f8f58c93ea2e14f6f35119160209160018060a01b031693845f525f835260405f2060ff1981541660ff83161790558152a2005b600435906001600160a01b03821682036100795756fea26469706673582212209ba4138d8af4d5b59479f9cf756e782bf148c65280239dd7fdf19d4a0e92f8a164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x13B SWAP1 DUP2 PUSH2 0x1A DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2D63294D EQ PUSH2 0x7D JUMPI POP DUP1 PUSH4 0x66E305FD EQ PUSH2 0x3D JUMPI PUSH4 0x7723BAFB EQ PUSH2 0x3D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x79 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x79 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5E PUSH2 0xEF JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x79 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x79 JUMPI PUSH2 0x96 PUSH2 0xEF JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x79 JUMPI PUSH32 0x84491124DE7D287CE3F02C6F49337E6BC1E12B50AB8F8F58C93EA2E14F6F3511 SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 PUSH0 MSTORE PUSH0 DUP4 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE DUP2 MSTORE LOG2 STOP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x79 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 LOG4 SGT DUP14 DUP11 DELEGATECALL 0xD5 0xB5 SWAP5 PUSH26 0xF9CF756E782BF148C65280239DD7FDF19D4A0E92F8A164736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "247:649:0:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 239,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c9081632d63294d1461007d5750806366e305fd1461003d57637723bafb1461003d575f80fd5b34610079576020366003190112610079576001600160a01b0361005e6100ef565b165f525f602052602060ff60405f2054166040519015158152f35b5f80fd5b34610079576040366003190112610079576100966100ef565b9060243591821515809303610079577f84491124de7d287ce3f02c6f49337e6bc1e12b50ab8f8f58c93ea2e14f6f35119160209160018060a01b031693845f525f835260405f2060ff1981541660ff83161790558152a2005b600435906001600160a01b03821682036100795756fea26469706673582212209ba4138d8af4d5b59479f9cf756e782bf148c65280239dd7fdf19d4a0e92f8a164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2D63294D EQ PUSH2 0x7D JUMPI POP DUP1 PUSH4 0x66E305FD EQ PUSH2 0x3D JUMPI PUSH4 0x7723BAFB EQ PUSH2 0x3D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x79 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x79 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5E PUSH2 0xEF JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x79 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x79 JUMPI PUSH2 0x96 PUSH2 0xEF JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x79 JUMPI PUSH32 0x84491124DE7D287CE3F02C6F49337E6BC1E12B50AB8F8F58C93EA2E14F6F3511 SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 PUSH0 MSTORE PUSH0 DUP4 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE DUP2 MSTORE LOG2 STOP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x79 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 LOG4 SGT DUP14 DUP11 DELEGATECALL 0xD5 0xB5 SWAP5 PUSH26 0xF9CF756E782BF148C65280239DD7FDF19D4A0E92F8A164736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "247:649:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;247:649:0;;;;-1:-1:-1;;;;;247:649:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;247:649:0;;;;;;:::i;:::-;;;;;;;;;;;;;742:30;247:649;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:30;247:649;;;;;-1:-1:-1;;;;;247:649:0;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "63000",
								"executionCost": "117",
								"totalCost": "63117"
							},
							"external": {
								"checkEligibility(address)": "2458",
								"isEligible(address)": "2439",
								"setEligibility(address,bool)": "25960"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 247,
									"end": 896,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 247,
									"end": 896,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 247,
									"end": 896,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 247,
									"end": 896,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 247,
									"end": 896,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 247,
									"end": 896,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 247,
									"end": 896,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 247,
									"end": 896,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 247,
									"end": 896,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 247,
									"end": 896,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 247,
									"end": 896,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 247,
									"end": 896,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 247,
									"end": 896,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 247,
									"end": 896,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 247,
									"end": 896,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 247,
									"end": 896,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 247,
									"end": 896,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 247,
									"end": 896,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 247,
									"end": 896,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ba4138d8af4d5b59479f9cf756e782bf148c65280239dd7fdf19d4a0e92f8a164736f6c634300081a0033",
									".code": [
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "2D63294D"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "66E305FD"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "7723BAFB"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 247,
											"end": 896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 247,
											"end": 896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 247,
											"end": 896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 247,
											"end": 896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 742,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "84491124DE7D287CE3F02C6F49337E6BC1E12B50AB8F8F58C93EA2E14F6F3511"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 742,
											"end": 772,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 247,
											"end": 896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"src/Contract Architecture/P2P & Social Transfers/EligibilityVerifier.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"checkEligibility(address)": "7723bafb",
							"isEligible(address)": "66e305fd",
							"setEligibility(address,bool)": "2d63294d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"eligible\",\"type\":\"bool\"}],\"name\":\"EligibilitySet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"checkEligibility\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isEligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"eligible\",\"type\":\"bool\"}],\"name\":\"setEligibility\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"EligibilityVerifier\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Minimal contract to enforce per-user eligibility rules for modules.         Can be extended with token/NFT gating or external verifiers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/P2P & Social Transfers/EligibilityVerifier.sol\":\"EligibilityVerifier\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/Contract Architecture/P2P & Social Transfers/EligibilityVerifier.sol\":{\"keccak256\":\"0x87e1f6d583d6242a6883b7568f25eb8fe56dcf7ade176c5df55984cd01d28fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd0e664678f559b059703cbd2e498ce375ba41d2efb46312177e7326defede9\",\"dweb:/ipfs/QmY3T9gUDwTz68m1ydn5Uau58QX71YUGa1gn774AJEnGFn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "src/Contract Architecture/P2P & Social Transfers/EligibilityVerifier.sol:EligibilityVerifier",
								"label": "isEligible",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Minimal contract to enforce per-user eligibility rules for modules.         Can be extended with token/NFT gating or external verifiers.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/Contract Architecture/P2P & Social Transfers/EligibilityVerifier.sol": {
				"ast": {
					"absolutePath": "src/Contract Architecture/P2P & Social Transfers/EligibilityVerifier.sol",
					"exportedSymbols": {
						"EligibilityVerifier": [
							57
						]
					},
					"id": 58,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EligibilityVerifier",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:188:0",
								"text": " @title EligibilityVerifier\n @notice Minimal contract to enforce per-user eligibility rules for modules.\n         Can be extended with token/NFT gating or external verifiers."
							},
							"fullyImplemented": true,
							"id": 57,
							"linearizedBaseContracts": [
								57
							],
							"name": "EligibilityVerifier",
							"nameLocation": "256:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "66e305fd",
									"id": 6,
									"mutability": "mutable",
									"name": "isEligible",
									"nameLocation": "314:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 57,
									"src": "282:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 5,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "290:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "282:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 4,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "301:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "84491124de7d287ce3f02c6f49337e6bc1e12b50ab8f8f58c93ea2e14f6f3511",
									"id": 12,
									"name": "EligibilitySet",
									"nameLocation": "337:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "368:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "352:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": false,
												"mutability": "mutable",
												"name": "eligible",
												"nameLocation": "379:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "374:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "351:37:0"
									},
									"src": "331:58:0"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "431:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 17,
																"name": "isEligible",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "449:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 19,
															"indexExpression": {
																"id": 18,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "460:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "449:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456c69676962696c69747956657269666965723a2075736572206e6f7420656c696769626c65",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "467:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cdfc717db6c351f168c494ccfd2263dcbcda400ae7bfa273cb86f49f5e8ffe4",
																"typeString": "literal_string \"EligibilityVerifier: user not eligible\""
															},
															"value": "EligibilityVerifier: user not eligible"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cdfc717db6c351f168c494ccfd2263dcbcda400ae7bfa273cb86f49f5e8ffe4",
																"typeString": "literal_string \"EligibilityVerifier: user not eligible\""
															}
														],
														"id": 16,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "441:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "441:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "441:67:0"
											},
											{
												"id": 23,
												"nodeType": "PlaceholderStatement",
												"src": "518:1:0"
											}
										]
									},
									"id": 25,
									"name": "onlyEligible",
									"nameLocation": "404:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "425:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "417:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:14:0"
									},
									"src": "395:131:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "594:185:0",
										"statements": [
											{
												"expression": {
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 32,
															"name": "isEligible",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "700:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 34,
														"indexExpression": {
															"id": 33,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "711:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "700:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 35,
														"name": "eligible",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "719:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "700:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "700:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 39,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "757:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 40,
															"name": "eligible",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "763:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 38,
														"name": "EligibilitySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "742:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "742:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "EmitStatement",
												"src": "737:35:0"
											}
										]
									},
									"functionSelector": "2d63294d",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setEligibility",
									"nameLocation": "541:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "564:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "556:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "eligible",
												"nameLocation": "575:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "570:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 28,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "570:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:29:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:0:0"
									},
									"scope": 57,
									"src": "532:247:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "854:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 51,
														"name": "isEligible",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "871:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 53,
													"indexExpression": {
														"id": 52,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "882:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "871:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 50,
												"id": 54,
												"nodeType": "Return",
												"src": "864:23:0"
											}
										]
									},
									"functionSelector": "7723bafb",
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkEligibility",
									"nameLocation": "794:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "819:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "811:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "810:14:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "848:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "848:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:6:0"
									},
									"scope": 57,
									"src": "785:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 58,
							"src": "247:649:0",
							"usedErrors": [],
							"usedEvents": [
								12
							]
						}
					],
					"src": "32:865:0"
				},
				"id": 0
			}
		}
	}
}