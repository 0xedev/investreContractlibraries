{
	"id": "bd522dbff1083709ba23805ce2d8f956",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/cryptography/ECDSA.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n\n// File: src/Contract Architecture/Core Infrastructure/ActionExecutor.sol\n\n\npragma solidity ^0.8.24;\n\n/**\n * @title ActionExecutor\n * @notice Central onchain dispatcher that executes module actions from user vaults.\n *         Uses EIP-712 signed approvals by the vault owner to allow a relayer/bot to\n *         call `executeModuleActionWithSig(...)` which will call `UserVault.executeCall(...)`.\n *CA: 0x2288B1E75e90B62012d527068A07bebE5F89be9d\n * Flow:\n *  1. Vault owner signs an EIP-712 message approving a module action for their vault.\n *  2. Offchain relayer (bot) pushes the signature and params to this contract.\n *  3. This contract validates signature, checks module whitelist, increments nonce,\n *     and calls `UserVault(vault).executeCall(module, value, data)`.\n *\n * Security notes:\n *  - The UserVault must whitelist this ActionExecutor via `setExecutorAllowed(executor, true)`\n *    for the call to succeed (UserVault enforces that).\n *  - Nonces are per-vault to prevent replay attacks.\n *  - Modules must be registered by the contract owner.\n */\n\n\n\ninterface IUserVault {\n    function executeCall(address target, uint256 value, bytes calldata data) external returns (bytes memory);\n    function owner() external view returns (address);\n}\n\nerror ZeroAddress();\nerror ModuleNotRegistered();\nerror SignatureExpired();\nerror InvalidSigner();\nerror ExecutionFailed();\nerror ModuleAlreadyRegistered();\nerror ModuleNotFound();\n\ncontract ActionExecutor is Ownable {\n    using ECDSA for bytes32;\n\n    /// ========== EVENTS ==========\n    event ModuleRegistered(bytes32 indexed moduleId, address indexed module);\n    event ModuleUnregistered(bytes32 indexed moduleId, address indexed module);\n    event ActionExecuted(\n        address indexed vault,\n        address indexed owner,\n        bytes32 indexed moduleId,\n        address module,\n        uint256 value,\n        bytes data,\n        bytes result\n    );\n\n    /// ========== MODULE REGISTRY ==========\n    /// moduleId => moduleAddress\n    mapping(bytes32 => address) public modules;\n\n    /// ========== NONCES ==========\n    /// vault => nonce\n    mapping(address => uint256) public nonces;\n\n    /// EIP-712 domain separator parameters\n    bytes32 public immutable DOMAIN_SEPARATOR;\n\n    // keccak256(\"Action(address vault,bytes32 moduleId,uint256 value,bytes data,uint256 nonce,uint256 deadline)\")\n    bytes32 public constant ACTION_TYPEHASH = keccak256(\"Action(address vault,bytes32 moduleId,uint256 value,bytes data,uint256 nonce,uint256 deadline)\");\n\n    constructor() Ownable(msg.sender) {\n        uint256 chainId;\n        assembly {\n            chainId := chainid()\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                // EIP-712 Domain: name + version + chainId + verifyingContract\n                keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                keccak256(bytes(\"ActionExecutor\")),\n                keccak256(bytes(\"1\")),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    /// ========== MODULE ADMIN ==========\n    function registerModule(bytes32 moduleId, address module) external onlyOwner {\n        if (module == address(0)) revert ZeroAddress();\n        if (modules[moduleId] != address(0)) revert ModuleAlreadyRegistered();\n        modules[moduleId] = module;\n        emit ModuleRegistered(moduleId, module);\n    }\n\n    function unregisterModule(bytes32 moduleId) external onlyOwner {\n        address mod = modules[moduleId];\n        if (mod == address(0)) revert ModuleNotFound();\n        delete modules[moduleId];\n        emit ModuleUnregistered(moduleId, mod);\n    }\n\n    /// ========== META-TX / EXECUTION ==========\n    /**\n     * @notice Execute a registered module's action on behalf of user vault, authorized by owner's signature.\n     *\n     * @param moduleId Registered module id (bytes32)\n     * @param vault Address of the UserVault clone\n     * @param value ETH value to forward from vault to module (in wei)\n     * @param data Calldata to pass to module (executed from vault context)\n     * @param deadline Timestamp after which the signature is invalid\n     * @param sig EIP-191 signature (65 bytes) from vault owner approving this action\n     */\n    function executeModuleActionWithSig(\n        bytes32 moduleId,\n        address vault,\n        uint256 value,\n        bytes calldata data,\n        uint256 deadline,\n        bytes calldata sig\n    ) external returns (bytes memory result) {\n        address module = modules[moduleId];\n        if (module == address(0)) revert ModuleNotRegistered();\n        if (vault == address(0)) revert ZeroAddress();\n        if (block.timestamp > deadline) revert SignatureExpired();\n\n        // Recreate digest\n        uint256 nonce = nonces[vault];\n        bytes32 structHash = keccak256(abi.encode(ACTION_TYPEHASH, vault, moduleId, value, keccak256(data), nonce, deadline));\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash));\n\n        // Recover signer\n        address signer = digest.recover(sig);\n        // Ensure signer is owner of the vault\n        address vaultOwner = IUserVault(vault).owner();\n        if (signer == address(0) || signer != vaultOwner) revert InvalidSigner();\n\n        // increment nonce\n        nonces[vault] = nonce + 1;\n\n        // Call the vault to execute the action (vault must whitelist this executor)\n        bytes memory res;\n        try IUserVault(vault).executeCall(module, value, data) returns (bytes memory r) {\n            res = r;\n        } catch (bytes memory reason) {\n            // Bubble revert if available\n            if (reason.length > 0) {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n            revert ExecutionFailed();\n        }\n\n        emit ActionExecuted(vault, signer, moduleId, module, value, data, res);\n        return res;\n    }\n\n    /// @notice Admin fallback: owner of this contract can execute module actions directly (no signature).\n    /// Useful for governance-driven or emergency operations.\n    function executeModuleActionByOwner(\n        bytes32 moduleId,\n        address vault,\n        uint256 value,\n        bytes calldata data\n    ) external onlyOwner returns (bytes memory) {\n        address module = modules[moduleId];\n        if (module == address(0)) revert ModuleNotRegistered();\n        if (vault == address(0)) revert ZeroAddress();\n\n        bytes memory res;\n        try IUserVault(vault).executeCall(module, value, data) returns (bytes memory r) {\n            res = r;\n        } catch (bytes memory reason) {\n            if (reason.length > 0) {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n            revert ExecutionFailed();\n        }\n\n        // Owner is executing as a privileged op — vault owner unknown here.\n        emit ActionExecuted(vault, address(0), moduleId, module, value, data, res);\n        return res;\n    }\n\n    /// ========== HELPERS / VIEWS ==========\n    function getModule(bytes32 moduleId) external view returns (address) {\n        return modules[moduleId];\n    }\n\n    function getNonce(address vault) external view returns (uint256) {\n        return nonces[vault];\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol": {
				"ActionExecutor": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExecutionFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ModuleAlreadyRegistered",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ModuleNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ModuleNotRegistered",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SignatureExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "moduleId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "module",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"name": "ActionExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "moduleId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "module",
									"type": "address"
								}
							],
							"name": "ModuleRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "moduleId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "module",
									"type": "address"
								}
							],
							"name": "ModuleUnregistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ACTION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "moduleId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "executeModuleActionByOwner",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "moduleId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "executeModuleActionWithSig",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "moduleId",
									"type": "bytes32"
								}
							],
							"name": "getModule",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "getNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "modules",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "moduleId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "module",
									"type": "address"
								}
							],
							"name": "registerModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "moduleId",
									"type": "bytes32"
								}
							],
							"name": "unregisterModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"executeModuleActionWithSig(bytes32,address,uint256,bytes,uint256,bytes)": {
								"params": {
									"data": "Calldata to pass to module (executed from vault context)",
									"deadline": "Timestamp after which the signature is invalid",
									"moduleId": "Registered module id (bytes32)",
									"sig": "EIP-191 signature (65 bytes) from vault owner approving this action",
									"value": "ETH value to forward from vault to module (in wei)",
									"vault": "Address of the UserVault clone"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  0xa0\n  0x40\n  swap1\n  dup1\n  dup3\n  mstore\n  jumpi(tag_2, callvalue)\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":14461:14471  msg.sender */\n  caller\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2235:2261  initialOwner == address(0) */\n  iszero\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2231:2326  if (initialOwner == address(0)) {... */\n  tag_4\n  jumpi\n  pop\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2259:2260  0 */\n  0x00\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  dup1\n  sload\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":14461:14471  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  dup3\n  and\n  dup2\n  or\n  dup4\n  sstore\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":14461:14471  msg.sender */\n  swap2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":4014:4054  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2259:2260  0 */\n  dup1\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":4014:4054  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  0x0e\n  0x20\n  dup3\n  mload\n  tag_6\n  dup2\n  tag_1\n  jump\t// in\ntag_6:\n  dup3\n  dup2\n  mstore\n  add\n  shl(0x91, 0x20b1ba34b7b722bc32b1baba37b9)\n  dup2\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":14833:14867  keccak256(bytes(\"ActionExecutor\")) */\n  keccak256\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  0x01\n  0x20\n  dup4\n  mload\n  tag_7\n  dup2\n  tag_1\n  jump\t// in\ntag_7:\n  dup3\n  dup2\n  mstore\n  add\n  shl(0xf8, 0x31)\n  dup2\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":14885:14906  keccak256(bytes(\"1\")) */\n  keccak256\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  dup3\n  mload\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":14612:14976  abi.encode(... */\n  swap1\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  0x20\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":14612:14976  abi.encode(... */\n  dup3\n  add\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  swap3\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":14720:14815  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  dup5\n  mstore\n  dup5\n  dup4\n  add\n  mstore\n  0x60\n  dup3\n  add\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":14508:14561  assembly {... */\n  chainid\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  0x80\n  dup3\n  add\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":14957:14961  this */\n  address\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  0xa0\n  dup3\n  add\n  mstore\n  0xa0\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":14612:14976  abi.encode(... */\n  dup2\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  0xc0\n  dup2\n  add\n  swap3\n  dup2\n  dup5\n  lt\n  0x01\n  dup1\n  0x40\n  shl\n  sub\n  dup6\n  gt\n  or\n  tag_8\n  jumpi\n  dup4\n  swap1\n  mstore\n  mload\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":14589:14986  keccak256(... */\n  swap1\n  keccak256\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  0x80\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":14570:14986  DOMAIN_SEPARATOR = keccak256(... */\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  mload(0x80)\n  dup2\n  assignImmutable(\"0x370d4a29255586406ab90f2fe1a237739249ae659f6973b0316c9bd15a3e8f14\")\n  return\ntag_8:\n  shl(0xe0, 0x4e487b71)\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2259:2260  0 */\n  0x00\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  mstore\n  mstore(0x04, 0x41)\n  0x24\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2259:2260  0 */\n  0x00\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  revert\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2231:2326  if (initialOwner == address(0)) {... */\ntag_4:\n  shl(0xe0, 0x1e4fbdf7)\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2284:2315  OwnableInvalidOwner(address(0)) */\n  dup2\n  mstore\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2259:2260  0 */\n  0x00\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2284:2315  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n  mstore\n  0x24\n  swap1\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2284:2315  OwnableInvalidOwner(address(0)) */\n  revert\n    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\ntag_2:\n  0x00\n  dup1\n  revert\ntag_1:\n  0x40\n  dup2\n  add\n  swap1\n  dup2\n  lt\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  or\n  tag_8\n  jumpi\n  0x40\n  mstore\n  jump\t// out\nstop\n\nsub_0: assembly {\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_43, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_43:\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x16ca96f4\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x2d0335ab\n      eq\n      tag_59\n      jumpi\n      dup1\n      0x2dac633b\n      eq\n      tag_49\n      jumpi\n      dup1\n      0x3595945d\n      eq\n      tag_51\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_53\n      jumpi\n      dup1\n      0x5a35b84a\n      eq\n      tag_55\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_57\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_59\n      jumpi\n      dup1\n      0x85acd641\n      eq\n      tag_67\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_63\n      jumpi\n      dup1\n      0xa78e922b\n      eq\n      tag_65\n      jumpi\n      dup1\n      0xb0b6cc1a\n      eq\n      tag_67\n      jumpi\n      0xf2fde38b\n      eq\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      tag_20\n      jump\t// in\n    tag_67:\n      tag_16\n      jump\t// in\n    tag_65:\n      tag_18\n      jump\t// in\n    tag_63:\n      tag_17\n      jump\t// in\n    tag_59:\n      tag_9\n      jump\t// in\n    tag_57:\n      tag_14\n      jump\t// in\n    tag_55:\n      tag_13\n      jump\t// in\n    tag_53:\n      tag_12\n      jump\t// in\n    tag_51:\n      tag_11\n      jump\t// in\n    tag_49:\n      tag_10\n      jump\t// in\n    tag_45:\n      tag_7\n      jump\t// in\n    tag_2:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      sub\n      tag_71\n      jumpi\n      jump\t// out\n    tag_71:\n      0x00\n      dup1\n      revert\n    tag_3:\n      swap2\n      dup2\n      0x1f\n      dup5\n      add\n      slt\n      iszero\n      tag_71\n      jumpi\n      dup3\n      calldataload\n      swap2\n      0xffffffffffffffff\n      dup4\n      gt\n      tag_71\n      jumpi\n      0x20\n      dup4\n      dup2\n      dup7\n      add\n      swap6\n      add\n      add\n      gt\n      tag_71\n      jumpi\n      jump\t// out\n    tag_4:\n      0x00\n    tag_79:\n      dup4\n      dup2\n      lt\n      tag_80\n      jumpi\n      pop\n      pop\n      0x00\n      swap2\n      add\n      mstore\n      jump\t// out\n    tag_80:\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_79)\n    tag_5:\n      swap1\n      0x20\n      swap2\n      tag_82\n      dup2\n      mload\n      dup1\n      swap3\n      dup2\n      dup6\n      mstore\n      dup6\n      dup1\n      dup7\n      add\n      swap2\n      add\n      tag_4\n      jump\t// in\n    tag_82:\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_6:\n      swap1\n      0x20\n      tag_83\n      swap3\n      dup2\n      dup2\n      mstore\n      add\n      swap1\n      tag_5\n      jump\t// in\n    tag_83:\n      swap1\n      jump\t// out\n    tag_7:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0xc0))\n      tag_88\n      calldataload(0x24)\n      tag_2\n      jump\t// in\n    tag_88:\n      calldataload(0x44)\n      0xffffffffffffffff\n      calldataload(0x64)\n      dup2\n      dup2\n      gt\n      tag_71\n      jumpi\n      tag_91\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_91:\n      swap3\n      swap1\n      swap2\n      calldataload(0xa4)\n      swap1\n      dup2\n      gt\n      tag_71\n      jumpi\n      tag_94\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_94:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16461:16478  modules[moduleId] */\n      tag_95\n      tag_96\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mstore(0x00, calldataload(0x04))\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18278:18285  modules */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16461:16478  modules[moduleId] */\n    tag_96:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16461:16478  modules[moduleId] */\n    tag_95:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16492:16512  module == address(0) */\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16488:16542  if (module == address(0)) revert ModuleNotRegistered() */\n      tag_97\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      and(sub(shl(0xa0, 0x01), 0x01), calldataload(0x24))\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16556:16575  vault == address(0) */\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16552:16597  if (vault == address(0)) revert ZeroAddress() */\n      tag_99\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      calldataload(0x84)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16611:16626  block.timestamp */\n      timestamp\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16611:16637  block.timestamp > deadline */\n      gt\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16607:16664  if (block.timestamp > deadline) revert SignatureExpired() */\n      tag_101\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      calldataload(0x24)\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16718:16724  nonces */\n      0x02\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17008:17027  digest.recover(sig) */\n      tag_103\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      swap1\n      tag_104\n      swap1\n      sload\n      swap5\n      tag_106\n      calldatasize\n      dup11\n      dup11\n      tag_25\n      jump\t// in\n    tag_106:\n      dup1\n      mload\n      0x20\n      swap2\n      dup3\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16824:16839  keccak256(data) */\n      keccak256\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x40\n      dup1\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":14325:14432  keccak256(\"Action(address vault,bytes32 moduleId,uint256 value,bytes data,uint256 nonce,uint256 deadline)\") */\n      0x2eaaf47f5d8d55bbdfc0070d3bf4e5c48f0e169aeb82b023197c8b2c69c6a338\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16772:16857  abi.encode(ACTION_TYPEHASH, vault, moduleId, value, keccak256(data), nonce, deadline) */\n      swap4\n      dup2\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      swap4\n      dup5\n      mstore\n      and(sub(shl(0xa0, 0x01), 0x01), calldataload(0x24))\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      calldataload(0x04)\n      0x60\n      dup3\n      add\n      mstore\n      0x80\n      dup2\n      add\n      dup11\n      swap1\n      mstore\n      0xa0\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0xc0\n      dup2\n      add\n      dup9\n      swap1\n      mstore\n      calldataload(0x84)\n      0xe0\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16772:16857  abi.encode(ACTION_TYPEHASH, vault, moduleId, value, keccak256(data), nonce, deadline) */\n      dup2\n      mstore\n      not(0x1f)\n      swap2\n      swap1\n      tag_108\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x0100\n      dup3\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16772:16857  abi.encode(ACTION_TYPEHASH, vault, moduleId, value, keccak256(data), nonce, deadline) */\n      tag_23\n      jump\t// in\n    tag_108:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16762:16858  keccak256(abi.encode(ACTION_TYPEHASH, vault, moduleId, value, keccak256(data), nonce, deadline)) */\n      swap1\n      keccak256\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xf0, 0x1901)\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16895:16953  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      dup3\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16924:16940  DOMAIN_SEPARATOR */\n      immutable(\"0x370d4a29255586406ab90f2fe1a237739249ae659f6973b0316c9bd15a3e8f14\")\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x22\n      dup4\n      add\n      mstore\n      0x42\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x62\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16895:16953  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      swap3\n      dup4\n      add\n      dup2\n      mstore\n      swap1\n      swap2\n      tag_109\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup3\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16895:16953  abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash) */\n      tag_23\n      jump\t// in\n    tag_109:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16885:16954  keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash)) */\n      swap1\n      keccak256\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      swap3\n      calldatasize\n      swap2\n      tag_25\n      jump\t// in\n    tag_104:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17008:17027  digest.recover(sig) */\n      swap1\n      tag_37\n      jump\t// in\n    tag_103:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x8da5cb5b)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17105:17130  IUserVault(vault).owner() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      swap3\n      swap1\n      0x20\n      dup5\n      0x04\n      dup2\n      and(sub(shl(0xa0, 0x01), 0x01), calldataload(0x24))\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17105:17130  IUserVault(vault).owner() */\n      gas\n      staticcall\n      swap4\n      dup5\n      iszero\n      tag_111\n      jumpi\n      0x00\n      swap5\n      tag_113\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n    tag_114:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap3\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17144:17164  signer == address(0) */\n      dup4\n      iszero\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17144:17188  signer == address(0) || signer != vaultOwner */\n      dup2\n      iszero\n      tag_115\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n    tag_116:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17140:17212  if (signer == address(0) || signer != vaultOwner) revert InvalidSigner() */\n      pop\n      tag_117\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17266:17275  nonce + 1 */\n      tag_119\n      swap1\n      tag_30\n      jump\t// in\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      calldataload(0x24)\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16718:16724  nonces */\n      0x02\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sstore\n      mload(0x40)\n      shl(0xe0, 0x9e5d4c49)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17401:17451  IUserVault(vault).executeCall(module, value, data) */\n      dup2\n      mstore\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup2\n      dup1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17401:17451  IUserVault(vault).executeCall(module, value, data) */\n      tag_121\n      dup10\n      dup10\n      dup10\n      dup9\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x04\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17401:17451  IUserVault(vault).executeCall(module, value, data) */\n      dup7\n      add\n      tag_33\n      jump\t// in\n    tag_121:\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup2\n      dup4\n      and(sub(shl(0xa0, 0x01), 0x01), calldataload(0x24))\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17401:17451  IUserVault(vault).executeCall(module, value, data) */\n      gas\n      call\n      0x00\n      swap2\n      dup2\n      tag_122\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n    tag_123:\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17397:17784  try IUserVault(vault).executeCall(module, value, data) returns (bytes memory r) {... */\n      tag_124\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17510:17784  catch (bytes memory reason) {... */\n      tag_126\n      tag_34\n      jump\t// in\n    tag_126:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup1\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17598:17615  reason.length > 0 */\n      swap1\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17594:17736  if (reason.length > 0) {... */\n      tag_127\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe2, 0x2b3f6d11)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17756:17773  ExecutionFailed() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x04\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17756:17773  ExecutionFailed() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17594:17736  if (reason.length > 0) {... */\n    tag_127:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17635:17722  assembly {... */\n      add\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17397:17784  try IUserVault(vault).executeCall(module, value, data) returns (bytes memory r) {... */\n    tag_124:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      tag_129\n      swap7\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17491:17498  res = r */\n      swap2\n      swap6\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      calldataload(0x04)\n      swap6\n      and(sub(shl(0xa0, 0x01), 0x01), calldataload(0x24))\n      swap5\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17799:17864  ActionExecuted(vault, signer, moduleId, module, value, data, res) */\n      0xbdc4e709cee662270d6b1f3b98b847541936a3762b56f7229d50448d83476e24\n      swap5\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup5\n      swap4\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17799:17864  ActionExecuted(vault, signer, moduleId, module, value, data, res) */\n      tag_130\n      swap4\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17491:17498  res = r */\n      dup12\n      swap4\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup7\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17799:17864  ActionExecuted(vault, signer, moduleId, module, value, data, res) */\n      tag_35\n      jump\t// in\n    tag_130:\n      sub\n      swap1\n      log4\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_6\n      jump\t// in\n    tag_129:\n      sub\n      swap1\n      return\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17401:17451  IUserVault(vault).executeCall(module, value, data) */\n    tag_122:\n      tag_131\n      swap2\n      swap3\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup4\n      returndatacopy\n      tag_132\n      dup2\n      dup4\n      tag_23\n      jump\t// in\n    tag_132:\n      dup2\n      add\n      swap1\n      tag_31\n      jump\t// in\n    tag_131:\n      swap1\n      0x00\n      jump(tag_123)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17140:17212  if (signer == address(0) || signer != vaultOwner) revert InvalidSigner() */\n    tag_117:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe2, 0x20578759)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17197:17212  InvalidSigner() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x04\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17197:17212  InvalidSigner() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17144:17188  signer == address(0) || signer != vaultOwner */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17168:17188  signer != vaultOwner */\n      dup5\n      eq\n      iszero\n      swap1\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17144:17188  signer == address(0) || signer != vaultOwner */\n      0x00\n      jump(tag_116)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17105:17130  IUserVault(vault).owner() */\n    tag_113:\n      tag_133\n      swap2\n      swap5\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17105:17130  IUserVault(vault).owner() */\n      returndatasize\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x20\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":17105:17130  IUserVault(vault).owner() */\n      gt\n      tag_134\n      jumpi\n    tag_135:\n      tag_136\n      dup2\n      dup4\n      tag_23\n      jump\t// in\n    tag_136:\n      dup2\n      add\n      swap1\n      tag_28\n      jump\t// in\n    tag_133:\n      swap3\n      0x00\n      jump(tag_114)\n    tag_134:\n      pop\n      returndatasize\n      jump(tag_135)\n    tag_111:\n      tag_29\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16607:16664  if (block.timestamp > deadline) revert SignatureExpired() */\n    tag_101:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x0819bdcd)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16646:16664  SignatureExpired() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x04\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16646:16664  SignatureExpired() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16552:16597  if (vault == address(0)) revert ZeroAddress() */\n    tag_99:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16584:16597  ZeroAddress() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x04\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16584:16597  ZeroAddress() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16488:16542  if (module == address(0)) revert ModuleNotRegistered() */\n    tag_97:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe1, 0x4e25774f)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16521:16542  ModuleNotRegistered() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x04\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16521:16542  ModuleNotRegistered() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n    tag_9:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      tag_141\n      dup2\n      tag_2\n      jump\t// in\n    tag_141:\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":19236:19242  nonces */\n      0x02\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      0x20\n      sload(keccak256(0x00, 0x40))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_10:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x80))\n      0x04\n      calldataload(0x24)\n      dup2\n      calldataload\n      tag_146\n      dup3\n      tag_2\n      jump\t// in\n    tag_146:\n      calldataload(0x44)\n      swap2\n      calldataload(0x64)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_71\n      jumpi\n      tag_149\n      swap1\n      calldatasize\n      swap1\n      dup7\n      add\n      tag_3\n      jump\t// in\n    tag_149:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2462:2524  modifier onlyOwner() {... */\n      swap4\n      swap1\n      swap2\n      tag_150\n      tag_38\n      jump\t// in\n    tag_150:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18278:18295  modules[moduleId] */\n      tag_151\n      tag_96\n      dup6\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x00\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18278:18285  modules */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18278:18295  modules[moduleId] */\n    tag_151:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      dup4\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18309:18329  module == address(0) */\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18305:18359  if (module == address(0)) revert ModuleNotRegistered() */\n      tag_153\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18373:18392  vault == address(0) */\n      swap3\n      dup4\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18369:18414  if (vault == address(0)) revert ZeroAddress() */\n      tag_155\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup3\n      0x00\n      dup4\n      dup10\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18455:18505  IUserVault(vault).executeCall(module, value, data) */\n      tag_157\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup11\n      dup7\n      mload(0x40)\n      swap7\n      dup8\n      swap6\n      dup7\n      swap6\n      shl(0xe0, 0x9e5d4c49)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18455:18505  IUserVault(vault).executeCall(module, value, data) */\n      dup8\n      mstore\n      dup7\n      add\n      tag_33\n      jump\t// in\n    tag_157:\n      sub\n      dup2\n      dup4\n      dup10\n      gas\n      call\n      0x00\n      swap2\n      dup2\n      tag_158\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n    tag_159:\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18451:18796  try IUserVault(vault).executeCall(module, value, data) returns (bytes memory r) {... */\n      tag_160\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18564:18796  catch (bytes memory reason) {... */\n      dup8\n      tag_162\n      tag_34\n      jump\t// in\n    tag_162:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup1\n      mload\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18610:18627  reason.length > 0 */\n      swap1\n      dup2\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18606:18748  if (reason.length > 0) {... */\n      tag_127\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe2, 0x2b3f6d11)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18768:18785  ExecutionFailed() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup4\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18768:18785  ExecutionFailed() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18451:18796  try IUserVault(vault).executeCall(module, value, data) returns (bytes memory r) {... */\n    tag_160:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      tag_129\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18545:18552  res = r */\n      swap8\n      pop\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18890:18959  ActionExecuted(vault, address(0), moduleId, module, value, data, res) */\n      tag_130\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18545:18552  res = r */\n      swap6\n      swap5\n      swap3\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18890:18959  ActionExecuted(vault, address(0), moduleId, module, value, data, res) */\n      0xbdc4e709cee662270d6b1f3b98b847541936a3762b56f7229d50448d83476e24\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18545:18552  res = r */\n      swap5\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18451:18796  try IUserVault(vault).executeCall(module, value, data) returns (bytes memory r) {... */\n      swap9\n      dup10\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18890:18959  ActionExecuted(vault, address(0), moduleId, module, value, data, res) */\n      swap6\n      dup7\n      swap6\n      dup7\n      tag_35\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18455:18505  IUserVault(vault).executeCall(module, value, data) */\n    tag_158:\n      tag_167\n      swap2\n      swap3\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup4\n      returndatacopy\n      tag_132\n      dup2\n      dup4\n      tag_23\n      jump\t// in\n    tag_167:\n      swap1\n      0x00\n      jump(tag_159)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18369:18414  if (vault == address(0)) revert ZeroAddress() */\n    tag_155:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18401:18414  ZeroAddress() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup8\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18401:18414  ZeroAddress() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18305:18359  if (module == address(0)) revert ModuleNotRegistered() */\n    tag_153:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe1, 0x4e25774f)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18338:18359  ModuleNotRegistered() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup9\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18338:18359  ModuleNotRegistered() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n    tag_11:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2462:2524  modifier onlyOwner() {... */\n      tag_173\n      tag_38\n      jump\t// in\n    tag_173:\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup2\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15439:15446  modules */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15470:15487  mod == address(0) */\n      dup2\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15466:15512  if (mod == address(0)) revert ModuleNotFound() */\n      tag_174\n      jumpi\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup2\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15439:15446  modules */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15561:15594  ModuleUnregistered(moduleId, mod) */\n      0xc631c273472e359a1548940daca1e146b3b6bf7582363a16e11b9f570783baee\n      swap1\n      dup1\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      stop\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15466:15512  if (mod == address(0)) revert ModuleNotFound() */\n    tag_174:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe2, 0x1c94b023)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15496:15512  ModuleNotFound() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x04\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15496:15512  ModuleNotFound() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n    tag_12:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":14120:14161  bytes32 public immutable DOMAIN_SEPARATOR */\n      immutable(\"0x370d4a29255586406ab90f2fe1a237739249ae659f6973b0316c9bd15a3e8f14\")\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup2\n      mstore\n      return\n    tag_13:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":14325:14432  keccak256(\"Action(address vault,bytes32 moduleId,uint256 value,bytes data,uint256 nonce,uint256 deadline)\") */\n      0x2eaaf47f5d8d55bbdfc0070d3bf4e5c48f0e169aeb82b023197c8b2c69c6a338\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup2\n      mstore\n      return\n    tag_14:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2462:2524  modifier onlyOwner() {... */\n      tag_188\n      tag_38\n      jump\t// in\n    tag_188:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x00\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":4014:4054  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup3\n      dup1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":4014:4054  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      stop\n    tag_16:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":19124:19131  modules */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      0x20\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(keccak256(0x00, 0x40))\n      and\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_17:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x00)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_18:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x24)\n      calldataload(0x04)\n      tag_201\n      dup3\n      tag_2\n      jump\t// in\n    tag_201:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2462:2524  modifier onlyOwner() {... */\n      tag_202\n      tag_38\n      jump\t// in\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup3\n      dup2\n      and\n      swap3\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15133:15153  module == address(0) */\n      dup4\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15129:15175  if (module == address(0)) revert ZeroAddress() */\n      tag_99\n      jumpi\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup4\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15189:15196  modules */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15185:15254  if (modules[moduleId] != address(0)) revert ModuleAlreadyRegistered() */\n      tag_206\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15264:15290  modules[moduleId] = module */\n      tag_208\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15264:15281  modules[moduleId] */\n      swap1\n      tag_209\n      dup4\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x00\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":18278:18285  modules */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15264:15281  modules[moduleId] */\n    tag_209:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      jump\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15264:15290  modules[moduleId] = module */\n    tag_208:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15305:15339  ModuleRegistered(moduleId, module) */\n      0xd63be02155b46636309fb0a4a79647c60971aecaad53cbc83aad90cd75fd9d54\n      0x00\n      dup1\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      stop\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15185:15254  if (modules[moduleId] != address(0)) revert ModuleAlreadyRegistered() */\n    tag_206:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x95b0718d)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15229:15254  ModuleAlreadyRegistered() */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x04\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":15229:15254  ModuleAlreadyRegistered() */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n    tag_20:\n      jumpi(tag_71, callvalue)\n      jumpi(tag_71, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      tag_214\n      dup2\n      tag_2\n      jump\t// in\n    tag_214:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2462:2524  modifier onlyOwner() {... */\n      tag_215\n      tag_38\n      jump\t// in\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      swap1\n      dup2\n      and\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":3589:3611  newOwner == address(0) */\n      dup2\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":3585:3676  if (newOwner == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":3966:3972  _owner */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      sload\n      dup3\n      shl(0xa0, 0xffffffffffffffffffffffff)\n      dup3\n      and\n      or\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":3966:3972  _owner */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      sstore\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":4014:4054  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":3966:3972  _owner */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":4014:4054  OwnershipTransferred(oldOwner, newOwner) */\n      dup1\n      log3\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      stop\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":3585:3676  if (newOwner == address(0)) {... */\n    tag_216:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":3634:3665  OwnableInvalidOwner(address(0)) */\n      dup2\n      mstore\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      0x04\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":3634:3665  OwnableInvalidOwner(address(0)) */\n      dup3\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mstore\n      0x24\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":3634:3665  OwnableInvalidOwner(address(0)) */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n    tag_22:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_23:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_218\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_218:\n      tag_22\n      jump\t// in\n    tag_24:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_218\n      jumpi\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_25:\n      swap3\n      swap2\n      swap3\n      tag_222\n      dup3\n      tag_24\n      jump\t// in\n    tag_222:\n      swap2\n      tag_223\n      mload(0x40)\n      swap4\n      dup5\n      tag_23\n      jump\t// in\n    tag_223:\n      dup3\n      swap5\n      dup2\n      dup5\n      mstore\n      dup2\n      dup4\n      add\n      gt\n      tag_71\n      jumpi\n      dup3\n      dup2\n      0x20\n      swap4\n      dup5\n      0x00\n      swap7\n      add\n      calldatacopy\n      add\n      add\n      mstore\n      jump\t// out\n    tag_28:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_71\n      jumpi\n      mload\n      tag_83\n      dup2\n      tag_2\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_30:\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":16461:16468  modules */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_229\n      jumpi\n      jump\t// out\n    tag_229:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_31:\n      0x20\n      dup2\n      dup4\n      sub\n      slt\n      tag_71\n      jumpi\n      dup1\n      mload\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_71\n      jumpi\n      add\n      dup2\n      0x1f\n      dup3\n      add\n      slt\n      iszero\n      tag_71\n      jumpi\n      dup1\n      mload\n      tag_237\n      dup2\n      tag_24\n      jump\t// in\n    tag_237:\n      swap3\n      tag_238\n      mload(0x40)\n      swap5\n      dup6\n      tag_23\n      jump\t// in\n    tag_238:\n      dup2\n      dup5\n      mstore\n      0x20\n      dup3\n      dup5\n      add\n      add\n      gt\n      tag_71\n      jumpi\n      tag_83\n      swap2\n      0x20\n      dup1\n      dup6\n      add\n      swap2\n      add\n      tag_4\n      jump\t// in\n    tag_32:\n      swap1\n      dup1\n      0x20\n      swap4\n      swap3\n      dup2\n      dup5\n      mstore\n      dup5\n      dup5\n      add\n      calldatacopy\n      0x00\n      dup3\n      dup3\n      add\n      dup5\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_33:\n      tag_83\n      swap5\n      swap3\n      0x60\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      0x40\n      dup3\n      add\n      mstore\n      add\n      swap2\n      tag_32\n      jump\t// in\n    tag_34:\n      jumpi(tag_243, iszero(returndatasize))\n      returndatasize\n      swap1\n      tag_245\n      dup3\n      tag_24\n      jump\t// in\n    tag_245:\n      swap2\n      tag_246\n      mload(0x40)\n      swap4\n      dup5\n      tag_23\n      jump\t// in\n    tag_246:\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump\t// out\n    tag_243:\n      0x60\n      swap1\n      jump\t// out\n    tag_35:\n      swap4\n      tag_248\n      swap3\n      tag_83\n      swap7\n      swap5\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      dup7\n      mstore\n      0x20\n      dup7\n      add\n      mstore\n      0x80\n      0x40\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      swap2\n      tag_32\n      jump\t// in\n    tag_248:\n      swap2\n      0x60\n      dup2\n      dup5\n      sub\n      swap2\n      add\n      mstore\n      tag_5\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":7811:8066  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n    tag_37:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":8024:8032  errorArg */\n      tag_83\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":7811:8066  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":7968:7995  tryRecover(hash, signature) */\n      tag_251\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":7811:8066  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":7968:7995  tryRecover(hash, signature) */\n      tag_39\n      jump\t// in\n    tag_251:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":8024:8032  errorArg */\n      swap1\n      swap3\n      swap2\n      swap3\n      tag_41\n      jump\t// in\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2758:2920  function _checkOwner() internal view virtual {... */\n    tag_38:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2672:2678  _owner */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":757:767  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2817:2840  owner() != _msgSender() */\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2813:2914  if (owner() != _msgSender()) {... */\n      tag_252\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2758:2920  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2813:2914  if (owner() != _msgSender()) {... */\n    tag_252:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2863:2903  OwnableUnauthorizedAccount(_msgSender()) */\n      dup2\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":757:767  msg.sender */\n      caller\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2863:2903  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mstore\n      0x24\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":2863:2903  OwnableUnauthorizedAccount(_msgSender()) */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":6226:7004  function tryRecover(... */\n    tag_39:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup2\n      mload\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":6226:7004  function tryRecover(... */\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":6416:6418  65 */\n      0x41\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":6396:6418  signature.length == 65 */\n      dup4\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":6416:6418  65 */\n      tag_254\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":6848:6873  tryRecover(hash, v, r, s) */\n      tag_256\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":6632:6828  assembly (\"memory-safe\") {... */\n      swap3\n      pop\n      0x20\n      dup3\n      add\n      mload\n      swap1\n      0x60\n      0x40\n      dup5\n      add\n      mload\n      swap4\n      add\n      mload\n      0x00\n      byte\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":6848:6873  tryRecover(hash, v, r, s) */\n      swap1\n      tag_42\n      jump\t// in\n    tag_256:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":6841:6873  return tryRecover(hash, v, r, s) */\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":6392:6998  if (signature.length == 65) {... */\n    tag_254:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":6904:6987  return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length)) */\n      pop\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":6920:6921  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":6904:6987  return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length)) */\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":6924:6959  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":6904:6987  return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length)) */\n      swap2\n      swap1\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n    tag_40:\n      0x04\n      gt\n      iszero\n      tag_257\n      jumpi\n      jump\t// out\n    tag_257:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11377:11909  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_41:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      tag_259\n      dup2\n      tag_40\n      jump\t// in\n    tag_259:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11463:11492  error == RecoverError.NoError */\n      dup1\n      tag_260\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11508:11515  return; */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11459:11903  if (error == RecoverError.NoError) {... */\n    tag_260:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      tag_262\n      dup2\n      tag_40\n      jump\t// in\n    tag_262:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11568:11597  RecoverError.InvalidSignature */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11559:11597  error == RecoverError.InvalidSignature */\n      dup2\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11568:11597  RecoverError.InvalidSignature */\n      tag_263\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0xf645eedf)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11620:11643  ECDSAInvalidSignature() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11555:11903  if (error == RecoverError.InvalidSignature) {... */\n    tag_263:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      tag_265\n      dup2\n      tag_40\n      jump\t// in\n    tag_265:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11673:11708  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11664:11708  error == RecoverError.InvalidSignatureLength */\n      dup2\n      sub\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11673:11708  RecoverError.InvalidSignatureLength */\n      tag_266\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe0, 0xfce698f7)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11731:11777  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup4\n      swap1\n      mstore\n      0x24\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11731:11777  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11660:11903  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_266:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup1\n      tag_269\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11807:11837  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      swap3\n      tag_40\n      jump\t// in\n    tag_269:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11798:11837  error == RecoverError.InvalidSignatureS */\n      eq\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11794:11903  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_270\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11660:11903  if (error == RecoverError.InvalidSignatureLength) {... */\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11377:11909  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11794:11903  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_270:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      mload(0x40)\n      shl(0xe2, 0x35e2f383)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11860:11892  ECDSAInvalidSignatureS(errorArg) */\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      swap2\n      swap1\n      swap2\n      mstore\n      0x24\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":11731:11777  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      revert\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":9300:10851  function tryRecover(... */\n    tag_42:\n      swap2\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10380:10446  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10367:10446  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup5\n      gt\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10363:10527  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      tag_273\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      swap2\n      0x20\n      swap4\n      0x80\n      swap3\n      0xff\n      0x00\n      swap6\n      mload(0x40)\n      swap5\n      dup6\n      mstore\n      and\n      dup7\n      dup5\n      add\n      mstore\n      0x40\n      dup4\n      add\n      mstore\n      0x60\n      dup3\n      add\n      mstore\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10638:10662  ecrecover(hash, v, r, s) */\n      dup3\n      dup1\n      mstore\n      0x01\n      gas\n      staticcall\n      iszero\n      tag_111\n      jumpi\n      mload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":13355:19258  contract ActionExecutor is Ownable {... */\n      dup2\n      and\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10676:10696  signer == address(0) */\n      iszero\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10672:10785  if (signer == address(0)) {... */\n      tag_277\n      jumpi\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10795:10844  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap1\n      0x00\n      swap1\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":9300:10851  function tryRecover(... */\n      swap1\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10672:10785  if (signer == address(0)) {... */\n    tag_277:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10712:10774  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      pop\n      0x00\n      swap1\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10638:10662  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10712:10774  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap1\n      0x00\n      swap1\n      jump\t// out\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10363:10527  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_273:\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10462:10516  return (address(0), RecoverError.InvalidSignatureS, s) */\n      pop\n      pop\n      pop\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10478:10479  0 */\n      0x00\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10462:10516  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap2\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10482:10512  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":10462:10516  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap2\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e1d9110eb0e69e093629ba22bc0fb281d0e929889102c06e97df30a314b0015964736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"finalize_allocation": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040908082523461014257331561012d57505f8054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600e6020825161006681610146565b828152016d20b1ba34b7b722bc32b1baba37b960911b81522060016020835161008e81610146565b82815201603160f81b81522082519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f84528483015260608201524660808201523060a082015260a0815260c081019281841060018060401b0385111761011957839052519020608052610d69908161016282396080518181816102ec01526107520152f35b634e487b7160e01b5f52604160045260245ffd5b631e4fbdf760e01b81525f6004820152602490fd5b5f80fd5b604081019081106001600160401b038211176101195760405256fe60806040526004361015610011575f80fd5b5f3560e01c806316ca96f4146100da5780632d0335ab146100bc5780632dac633b146100d55780633595945d146100d05780633644e515146100cb5780635a35b84a146100c6578063715018a6146100c15780637ecebe00146100bc57806385acd641146100ad5780638da5cb5b146100b7578063a78e922b146100b2578063b0b6cc1a146100ad5763f2fde38b146100a8575f80fd5b610923565b610806565b61085f565b610838565b610522565b6107af565b610775565b61073b565b6106ae565b61055d565b61017c565b6001600160a01b038116036100f057565b5f80fd5b9181601f840112156100f05782359167ffffffffffffffff83116100f057602083818601950101116100f057565b5f5b8381106101335750505f910152565b8181015183820152602001610124565b9060209161015c81518092818552858086019101610122565b601f01601f1916010190565b906020610179928181520190610143565b90565b346100f05760c03660031901126100f0576101986024356100df565b60443567ffffffffffffffff6064358181116100f0576101bc9036906004016100f4565b92909160a4359081116100f0576101d79036906004016100f4565b6101fb6101ee6004355f52600160205260405f2090565b546001600160a01b031690565b906001600160a01b03821615610510576024356001600160a01b0316156104fe5760843542116104ec576001600160a01b03602435165f90815260026020526040902061033c9190610336905494610254368a8a610a08565b8051602091820120604080517f2eaaf47f5d8d55bbdfc0070d3bf4e5c48f0e169aeb82b023197c8b2c69c6a3389381019384526024356001600160a01b0316918101919091526004356060820152608081018a905260a081019190915260c0810188905260843560e0808301919091528152601f1991906102d7610100826109c5565b51902060405161190160f01b602082019081527f00000000000000000000000000000000000000000000000000000000000000006022830152604282019290925260629283018152909161032b90826109c5565b519020923691610a08565b90610b8b565b604051638da5cb5b60e01b815292906020846004816024356001600160a01b03165afa9384156104e7575f946104b6575b506001600160a01b03169283159081156104a2575b506104905761039090610a5e565b6001600160a01b03602435165f90815260026020526040902055604051639e5d4c4960e01b81525f81806103ca8989898860048601610aff565b0381836024356001600160a01b03165af15f918161046c575b5061040f576103f0610b23565b8051908161040a57604051632b3f6d1160e21b8152600490fd5b602001fd5b604051610468969195600435956024356001600160a01b0316947fbdc4e709cee662270d6b1f3b98b847541936a3762b56f7229d50448d83476e24948493610459938b9386610b52565b0390a460405191829182610168565b0390f35b6104899192503d805f833e61048181836109c5565b810190610a80565b905f6103e3565b604051632057875960e21b8152600490fd5b6001600160a01b031684141590505f610382565b6104d991945060203d6020116104e0575b6104d181836109c5565b810190610a3e565b925f61036d565b503d6104c7565b610a53565b604051630819bdcd60e01b8152600490fd5b60405163d92e233d60e01b8152600490fd5b604051634e25774f60e11b8152600490fd5b346100f05760203660031901126100f05760043561053f816100df565b60018060a01b03165f526002602052602060405f2054604051908152f35b346100f05760803660031901126100f0576004602435813561057e826100df565b6044359160643567ffffffffffffffff81116100f0576105a190369086016100f4565b9390916105ac610ba1565b6105c16101ee855f52600160205260405f2090565b906001600160a01b03908183161561069d571692831561068c57825f83896105fd8a866040519687958695639e5d4c4960e01b87528601610aff565b038183895af15f9181610670575b506106325787610619610b23565b8051908161040a57604051632b3f6d1160e21b81528390fd5b6104689750916104595f9594927fbdc4e709cee662270d6b1f3b98b847541936a3762b56f7229d50448d83476e249498899160405195869586610b52565b6106859192503d805f833e61048181836109c5565b905f61060b565b60405163d92e233d60e01b81528790fd5b604051634e25774f60e11b81528890fd5b346100f05760203660031901126100f0576004356106ca610ba1565b5f818152600160205260409020546001600160a01b0316908115610729575f81815260016020526040812080546001600160a01b03191690557fc631c273472e359a1548940daca1e146b3b6bf7582363a16e11b9f570783baee9080a3005b604051631c94b02360e21b8152600490fd5b346100f0575f3660031901126100f05760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346100f0575f3660031901126100f05760206040517f2eaaf47f5d8d55bbdfc0070d3bf4e5c48f0e169aeb82b023197c8b2c69c6a3388152f35b346100f0575f3660031901126100f0576107c7610ba1565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100f05760203660031901126100f0576004355f526001602052602060018060a01b0360405f205416604051908152f35b346100f0575f3660031901126100f0575f546040516001600160a01b039091168152602090f35b346100f05760403660031901126100f05760243560043561087f826100df565b610887610ba1565b6001600160a01b03828116929083156104fe575f83815260016020526040902054166001600160a01b0316610911576108eb906108cc835f52600160205260405f2090565b80546001600160a01b0319166001600160a01b03909216919091179055565b7fd63be02155b46636309fb0a4a79647c60971aecaad53cbc83aad90cd75fd9d545f80a3005b6040516395b0718d60e01b8152600490fd5b346100f05760203660031901126100f057600435610940816100df565b610948610ba1565b6001600160a01b03908116908115610999575f54826bffffffffffffffffffffffff60a01b8216175f55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b604051631e4fbdf760e01b81525f6004820152602490fd5b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff8211176109e757604052565b6109b1565b67ffffffffffffffff81116109e757601f01601f191660200190565b929192610a14826109ec565b91610a2260405193846109c5565b8294818452818301116100f0578281602093845f960137010152565b908160209103126100f05751610179816100df565b6040513d5f823e3d90fd5b9060018201809211610a6c57565b634e487b7160e01b5f52601160045260245ffd5b6020818303126100f05780519067ffffffffffffffff82116100f0570181601f820112156100f0578051610ab3816109ec565b92610ac160405194856109c5565b818452602082840101116100f0576101799160208085019101610122565b908060209392818452848401375f828201840152601f01601f1916010190565b610179949260609260018060a01b0316825260208201528160408201520191610adf565b3d15610b4d573d90610b34826109ec565b91610b4260405193846109c5565b82523d5f602084013e565b606090565b93610b7d9261017996949260018060a01b031686526020860152608060408601526080850191610adf565b916060818403910152610143565b61017991610b9891610bcc565b90929192610c24565b5f546001600160a01b03163303610bb457565b60405163118cdaa760e01b8152336004820152602490fd5b8151919060418303610bfc57610bf59250602082015190606060408401519301515f1a90610cb1565b9192909190565b50505f9160029190565b60041115610c1057565b634e487b7160e01b5f52602160045260245ffd5b610c2d81610c06565b80610c36575050565b610c3f81610c06565b60018103610c595760405163f645eedf60e01b8152600490fd5b610c6281610c06565b60028103610c835760405163fce698f760e01b815260048101839052602490fd5b80610c8f600392610c06565b14610c975750565b6040516335e2f38360e21b81526004810191909152602490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610d28579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa156104e7575f516001600160a01b03811615610d1e57905f905f90565b505f906001905f90565b5050505f916003919056fea2646970667358221220e1d9110eb0e69e093629ba22bc0fb281d0e929889102c06e97df30a314b0015964736f6c63430008180033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE CALLVALUE PUSH2 0x142 JUMPI CALLER ISZERO PUSH2 0x12D JUMPI POP PUSH0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0xE PUSH1 0x20 DUP3 MLOAD PUSH2 0x66 DUP2 PUSH2 0x146 JUMP JUMPDEST DUP3 DUP2 MSTORE ADD PUSH14 0x20B1BA34B7B722BC32B1BABA37B9 PUSH1 0x91 SHL DUP2 MSTORE KECCAK256 PUSH1 0x1 PUSH1 0x20 DUP4 MLOAD PUSH2 0x8E DUP2 PUSH2 0x146 JUMP JUMPDEST DUP3 DUP2 MSTORE ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE KECCAK256 DUP3 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE DUP5 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD SWAP3 DUP2 DUP5 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP6 GT OR PUSH2 0x119 JUMPI DUP4 SWAP1 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE PUSH2 0xD69 SWAP1 DUP2 PUSH2 0x162 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2EC ADD MSTORE PUSH2 0x752 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x119 JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16CA96F4 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x2D0335AB EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x2DAC633B EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x3595945D EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x5A35B84A EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x85ACD641 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xA78E922B EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xB0B6CC1A EQ PUSH2 0xAD JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x923 JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH2 0x73B JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST PUSH2 0x17C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0xF0 JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xF0 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xF0 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0xF0 JUMPI JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x133 JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x15C DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x122 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x179 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x143 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH2 0x198 PUSH1 0x24 CALLDATALOAD PUSH2 0xDF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x64 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xF0 JUMPI PUSH2 0x1BC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF4 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0xA4 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xF0 JUMPI PUSH2 0x1D7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x1FB PUSH2 0x1EE PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x510 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x4FE JUMPI PUSH1 0x84 CALLDATALOAD TIMESTAMP GT PUSH2 0x4EC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x336 SWAP1 SLOAD SWAP5 PUSH2 0x254 CALLDATASIZE DUP11 DUP11 PUSH2 0xA08 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH32 0x2EAAF47F5D8D55BBDFC0070D3BF4E5C48F0E169AEB82B023197C8B2C69C6A338 SWAP4 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xE0 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0x1F NOT SWAP2 SWAP1 PUSH2 0x2D7 PUSH2 0x100 DUP3 PUSH2 0x9C5 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH32 0x0 PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x42 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x62 SWAP3 DUP4 ADD DUP2 MSTORE SWAP1 SWAP2 PUSH2 0x32B SWAP1 DUP3 PUSH2 0x9C5 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 CALLDATASIZE SWAP2 PUSH2 0xA08 JUMP JUMPDEST SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP1 PUSH1 0x20 DUP5 PUSH1 0x4 DUP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x4E7 JUMPI PUSH0 SWAP5 PUSH2 0x4B6 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x4A2 JUMPI JUMPDEST POP PUSH2 0x490 JUMPI PUSH2 0x390 SWAP1 PUSH2 0xA5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x40 MLOAD PUSH4 0x9E5D4C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP2 DUP1 PUSH2 0x3CA DUP10 DUP10 DUP10 DUP9 PUSH1 0x4 DUP7 ADD PUSH2 0xAFF JUMP JUMPDEST SUB DUP2 DUP4 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH0 SWAP2 DUP2 PUSH2 0x46C JUMPI JUMPDEST POP PUSH2 0x40F JUMPI PUSH2 0x3F0 PUSH2 0xB23 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2B3F6D11 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x468 SWAP7 SWAP2 SWAP6 PUSH1 0x4 CALLDATALOAD SWAP6 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH32 0xBDC4E709CEE662270D6B1F3B98B847541936A3762B56F7229D50448D83476E24 SWAP5 DUP5 SWAP4 PUSH2 0x459 SWAP4 DUP12 SWAP4 DUP7 PUSH2 0xB52 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x168 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x489 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x481 DUP2 DUP4 PUSH2 0x9C5 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA80 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20578759 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 EQ ISZERO SWAP1 POP PUSH0 PUSH2 0x382 JUMP JUMPDEST PUSH2 0x4D9 SWAP2 SWAP5 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4E0 JUMPI JUMPDEST PUSH2 0x4D1 DUP2 DUP4 PUSH2 0x9C5 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA3E JUMP JUMPDEST SWAP3 PUSH0 PUSH2 0x36D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x819BDCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4E25774F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x53F DUP2 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 PUSH1 0x24 CALLDATALOAD DUP2 CALLDATALOAD PUSH2 0x57E DUP3 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF0 JUMPI PUSH2 0x5A1 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0xF4 JUMP JUMPDEST SWAP4 SWAP1 SWAP2 PUSH2 0x5AC PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x1EE DUP6 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND ISZERO PUSH2 0x69D JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x68C JUMPI DUP3 PUSH0 DUP4 DUP10 PUSH2 0x5FD DUP11 DUP7 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0x9E5D4C49 PUSH1 0xE0 SHL DUP8 MSTORE DUP7 ADD PUSH2 0xAFF JUMP JUMPDEST SUB DUP2 DUP4 DUP10 GAS CALL PUSH0 SWAP2 DUP2 PUSH2 0x670 JUMPI JUMPDEST POP PUSH2 0x632 JUMPI DUP8 PUSH2 0x619 PUSH2 0xB23 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2B3F6D11 PUSH1 0xE2 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST PUSH2 0x468 SWAP8 POP SWAP2 PUSH2 0x459 PUSH0 SWAP6 SWAP5 SWAP3 PUSH32 0xBDC4E709CEE662270D6B1F3B98B847541936A3762B56F7229D50448D83476E24 SWAP5 SWAP9 DUP10 SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 PUSH2 0xB52 JUMP JUMPDEST PUSH2 0x685 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x481 DUP2 DUP4 PUSH2 0x9C5 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x60B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP8 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4E25774F PUSH1 0xE1 SHL DUP2 MSTORE DUP9 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6CA PUSH2 0xBA1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x729 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH32 0xC631C273472E359A1548940DACA1E146B3B6BF7582363A16E11B9F570783BAEE SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C94B023 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x2EAAF47F5D8D55BBDFC0070D3BF4E5C48F0E169AEB82B023197C8B2C69C6A338 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH2 0x7C7 PUSH2 0xBA1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x87F DUP3 PUSH2 0xDF JUMP JUMPDEST PUSH2 0x887 PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP3 SWAP1 DUP4 ISZERO PUSH2 0x4FE JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x911 JUMPI PUSH2 0x8EB SWAP1 PUSH2 0x8CC DUP4 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0xD63BE02155B46636309FB0A4A79647C60971AECAAD53CBC83AAD90CD75FD9D54 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95B0718D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x940 DUP2 PUSH2 0xDF JUMP JUMPDEST PUSH2 0x948 PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x999 JUMPI PUSH0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9E7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x9E7 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xA14 DUP3 PUSH2 0x9EC JUMP JUMPDEST SWAP2 PUSH2 0xA22 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x9C5 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0xF0 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xF0 JUMPI MLOAD PUSH2 0x179 DUP2 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xA6C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0xF0 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xF0 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xF0 JUMPI DUP1 MLOAD PUSH2 0xAB3 DUP2 PUSH2 0x9EC JUMP JUMPDEST SWAP3 PUSH2 0xAC1 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x9C5 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0xF0 JUMPI PUSH2 0x179 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x122 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x179 SWAP5 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP2 PUSH2 0xADF JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xB4D JUMPI RETURNDATASIZE SWAP1 PUSH2 0xB34 DUP3 PUSH2 0x9EC JUMP JUMPDEST SWAP2 PUSH2 0xB42 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x9C5 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP4 PUSH2 0xB7D SWAP3 PUSH2 0x179 SWAP7 SWAP5 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP2 PUSH2 0xADF JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x143 JUMP JUMPDEST PUSH2 0x179 SWAP2 PUSH2 0xB98 SWAP2 PUSH2 0xBCC JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xC24 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xBB4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0xBFC JUMPI PUSH2 0xBF5 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH0 BYTE SWAP1 PUSH2 0xCB1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0xC10 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xC2D DUP2 PUSH2 0xC06 JUMP JUMPDEST DUP1 PUSH2 0xC36 JUMPI POP POP JUMP JUMPDEST PUSH2 0xC3F DUP2 PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0xC59 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0xC62 DUP2 PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xC8F PUSH1 0x3 SWAP3 PUSH2 0xC06 JUMP JUMPDEST EQ PUSH2 0xC97 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0xD28 JUMPI SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP3 PUSH1 0xFF PUSH0 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x4E7 JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD1E JUMPI SWAP1 PUSH0 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 PUSH1 0x1 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xD9 GT 0xE 0xB0 0xE6 SWAP15 MULMOD CALLDATASIZE 0x29 0xBA 0x22 0xBC 0xF 0xB2 DUP2 0xD0 0xE9 0x29 DUP9 SWAP2 MUL 0xC0 PUSH15 0x97DF30A314B0015964736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "13355:5903:0:-:0;;;;;;;;;14461:10;2235:26;2231:95;;-1:-1:-1;2259:1:0;13355:5903;;14461:10;-1:-1:-1;;;;;;13355:5903:0;;;;;;14461:10;-1:-1:-1;;;;;13355:5903:0;;;;4014:40;;2259:1;4014:40;13355:5903;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;13355:5903:0;;14833:34;13355:5903;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;13355:5903:0;;14885:21;13355:5903;;14612:364;13355:5903;14612:364;;13355:5903;14720:95;13355:5903;;;;;;;;;;14508:53;13355:5903;;;;14957:4;13355:5903;;;;;14612:364;;13355:5903;;;;;;;;;;;;;;;;;;;;;14589:397;;13355:5903;14570:416;13355:5903;;;;;;;;;;;;;;;;;;;;;;2259:1;13355:5903;;;;;2259:1;13355:5903;2231:95;-1:-1:-1;;;2284:31:0;;2259:1;2284:31;;;13355:5903;;;2284:31;13355:5903;;;;;;;;;;;-1:-1:-1;;;;;13355:5903:0;;;;;;;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 2622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 2568,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_bytes_fromMemory": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address_uint256_bytes_calldata": {
									"entryPoint": 2815,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_address_uint256_bytes_calldata_bytes": {
									"entryPoint": 2898,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes32_address_bytes32_uint256_bytes32_uint256_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_bytes_calldata": {
									"entryPoint": 2783,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_bytes_memory_ptr": {
									"entryPoint": 323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_packed_stringliteral_301a_bytes32_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 2540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 2654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 290,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"external_fun_ACTION_TYPEHASH": {
									"entryPoint": 1909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_DOMAIN_SEPARATOR": {
									"entryPoint": 1851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_executeModuleActionByOwner": {
									"entryPoint": 1373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_executeModuleActionWithSig": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getModule": {
									"entryPoint": 2054,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getNonce": {
									"entryPoint": 1314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_owner": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_registerModule": {
									"entryPoint": 2143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_renounceOwnership": {
									"entryPoint": 1967,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_transferOwnership": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_unregisterModule": {
									"entryPoint": 1710,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"extract_returndata": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_checkOwner": {
									"entryPoint": 2977,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_recover": {
									"entryPoint": 2955,
									"id": 277,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_throwError": {
									"entryPoint": 3108,
									"id": 520,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_tryRecover": {
									"entryPoint": 3020,
									"id": 247,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"fun_tryRecover_435": {
									"entryPoint": 3249,
									"id": 435,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"mapping_index_access_mapping_address_uint256_of_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_bytes32_address_of_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"read_from_storage_split_offset_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_forward": {
									"entryPoint": 2643,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"update_storage_value_offsett_address_to_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"validator_assert_enum_RecoverError": {
									"entryPoint": 3078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"601": [
									{
										"length": 32,
										"start": 748
									},
									{
										"length": 32,
										"start": 1874
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361015610011575f80fd5b5f3560e01c806316ca96f4146100da5780632d0335ab146100bc5780632dac633b146100d55780633595945d146100d05780633644e515146100cb5780635a35b84a146100c6578063715018a6146100c15780637ecebe00146100bc57806385acd641146100ad5780638da5cb5b146100b7578063a78e922b146100b2578063b0b6cc1a146100ad5763f2fde38b146100a8575f80fd5b610923565b610806565b61085f565b610838565b610522565b6107af565b610775565b61073b565b6106ae565b61055d565b61017c565b6001600160a01b038116036100f057565b5f80fd5b9181601f840112156100f05782359167ffffffffffffffff83116100f057602083818601950101116100f057565b5f5b8381106101335750505f910152565b8181015183820152602001610124565b9060209161015c81518092818552858086019101610122565b601f01601f1916010190565b906020610179928181520190610143565b90565b346100f05760c03660031901126100f0576101986024356100df565b60443567ffffffffffffffff6064358181116100f0576101bc9036906004016100f4565b92909160a4359081116100f0576101d79036906004016100f4565b6101fb6101ee6004355f52600160205260405f2090565b546001600160a01b031690565b906001600160a01b03821615610510576024356001600160a01b0316156104fe5760843542116104ec576001600160a01b03602435165f90815260026020526040902061033c9190610336905494610254368a8a610a08565b8051602091820120604080517f2eaaf47f5d8d55bbdfc0070d3bf4e5c48f0e169aeb82b023197c8b2c69c6a3389381019384526024356001600160a01b0316918101919091526004356060820152608081018a905260a081019190915260c0810188905260843560e0808301919091528152601f1991906102d7610100826109c5565b51902060405161190160f01b602082019081527f00000000000000000000000000000000000000000000000000000000000000006022830152604282019290925260629283018152909161032b90826109c5565b519020923691610a08565b90610b8b565b604051638da5cb5b60e01b815292906020846004816024356001600160a01b03165afa9384156104e7575f946104b6575b506001600160a01b03169283159081156104a2575b506104905761039090610a5e565b6001600160a01b03602435165f90815260026020526040902055604051639e5d4c4960e01b81525f81806103ca8989898860048601610aff565b0381836024356001600160a01b03165af15f918161046c575b5061040f576103f0610b23565b8051908161040a57604051632b3f6d1160e21b8152600490fd5b602001fd5b604051610468969195600435956024356001600160a01b0316947fbdc4e709cee662270d6b1f3b98b847541936a3762b56f7229d50448d83476e24948493610459938b9386610b52565b0390a460405191829182610168565b0390f35b6104899192503d805f833e61048181836109c5565b810190610a80565b905f6103e3565b604051632057875960e21b8152600490fd5b6001600160a01b031684141590505f610382565b6104d991945060203d6020116104e0575b6104d181836109c5565b810190610a3e565b925f61036d565b503d6104c7565b610a53565b604051630819bdcd60e01b8152600490fd5b60405163d92e233d60e01b8152600490fd5b604051634e25774f60e11b8152600490fd5b346100f05760203660031901126100f05760043561053f816100df565b60018060a01b03165f526002602052602060405f2054604051908152f35b346100f05760803660031901126100f0576004602435813561057e826100df565b6044359160643567ffffffffffffffff81116100f0576105a190369086016100f4565b9390916105ac610ba1565b6105c16101ee855f52600160205260405f2090565b906001600160a01b03908183161561069d571692831561068c57825f83896105fd8a866040519687958695639e5d4c4960e01b87528601610aff565b038183895af15f9181610670575b506106325787610619610b23565b8051908161040a57604051632b3f6d1160e21b81528390fd5b6104689750916104595f9594927fbdc4e709cee662270d6b1f3b98b847541936a3762b56f7229d50448d83476e249498899160405195869586610b52565b6106859192503d805f833e61048181836109c5565b905f61060b565b60405163d92e233d60e01b81528790fd5b604051634e25774f60e11b81528890fd5b346100f05760203660031901126100f0576004356106ca610ba1565b5f818152600160205260409020546001600160a01b0316908115610729575f81815260016020526040812080546001600160a01b03191690557fc631c273472e359a1548940daca1e146b3b6bf7582363a16e11b9f570783baee9080a3005b604051631c94b02360e21b8152600490fd5b346100f0575f3660031901126100f05760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346100f0575f3660031901126100f05760206040517f2eaaf47f5d8d55bbdfc0070d3bf4e5c48f0e169aeb82b023197c8b2c69c6a3388152f35b346100f0575f3660031901126100f0576107c7610ba1565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100f05760203660031901126100f0576004355f526001602052602060018060a01b0360405f205416604051908152f35b346100f0575f3660031901126100f0575f546040516001600160a01b039091168152602090f35b346100f05760403660031901126100f05760243560043561087f826100df565b610887610ba1565b6001600160a01b03828116929083156104fe575f83815260016020526040902054166001600160a01b0316610911576108eb906108cc835f52600160205260405f2090565b80546001600160a01b0319166001600160a01b03909216919091179055565b7fd63be02155b46636309fb0a4a79647c60971aecaad53cbc83aad90cd75fd9d545f80a3005b6040516395b0718d60e01b8152600490fd5b346100f05760203660031901126100f057600435610940816100df565b610948610ba1565b6001600160a01b03908116908115610999575f54826bffffffffffffffffffffffff60a01b8216175f55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b604051631e4fbdf760e01b81525f6004820152602490fd5b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff8211176109e757604052565b6109b1565b67ffffffffffffffff81116109e757601f01601f191660200190565b929192610a14826109ec565b91610a2260405193846109c5565b8294818452818301116100f0578281602093845f960137010152565b908160209103126100f05751610179816100df565b6040513d5f823e3d90fd5b9060018201809211610a6c57565b634e487b7160e01b5f52601160045260245ffd5b6020818303126100f05780519067ffffffffffffffff82116100f0570181601f820112156100f0578051610ab3816109ec565b92610ac160405194856109c5565b818452602082840101116100f0576101799160208085019101610122565b908060209392818452848401375f828201840152601f01601f1916010190565b610179949260609260018060a01b0316825260208201528160408201520191610adf565b3d15610b4d573d90610b34826109ec565b91610b4260405193846109c5565b82523d5f602084013e565b606090565b93610b7d9261017996949260018060a01b031686526020860152608060408601526080850191610adf565b916060818403910152610143565b61017991610b9891610bcc565b90929192610c24565b5f546001600160a01b03163303610bb457565b60405163118cdaa760e01b8152336004820152602490fd5b8151919060418303610bfc57610bf59250602082015190606060408401519301515f1a90610cb1565b9192909190565b50505f9160029190565b60041115610c1057565b634e487b7160e01b5f52602160045260245ffd5b610c2d81610c06565b80610c36575050565b610c3f81610c06565b60018103610c595760405163f645eedf60e01b8152600490fd5b610c6281610c06565b60028103610c835760405163fce698f760e01b815260048101839052602490fd5b80610c8f600392610c06565b14610c975750565b6040516335e2f38360e21b81526004810191909152602490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610d28579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa156104e7575f516001600160a01b03811615610d1e57905f905f90565b505f906001905f90565b5050505f916003919056fea2646970667358221220e1d9110eb0e69e093629ba22bc0fb281d0e929889102c06e97df30a314b0015964736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16CA96F4 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x2D0335AB EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x2DAC633B EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x3595945D EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x5A35B84A EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x85ACD641 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xA78E922B EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xB0B6CC1A EQ PUSH2 0xAD JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x923 JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH2 0x73B JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST PUSH2 0x17C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0xF0 JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xF0 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xF0 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0xF0 JUMPI JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x133 JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x15C DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x122 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x179 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x143 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH2 0x198 PUSH1 0x24 CALLDATALOAD PUSH2 0xDF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x64 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xF0 JUMPI PUSH2 0x1BC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF4 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0xA4 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xF0 JUMPI PUSH2 0x1D7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x1FB PUSH2 0x1EE PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x510 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x4FE JUMPI PUSH1 0x84 CALLDATALOAD TIMESTAMP GT PUSH2 0x4EC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x336 SWAP1 SLOAD SWAP5 PUSH2 0x254 CALLDATASIZE DUP11 DUP11 PUSH2 0xA08 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH32 0x2EAAF47F5D8D55BBDFC0070D3BF4E5C48F0E169AEB82B023197C8B2C69C6A338 SWAP4 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xE0 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0x1F NOT SWAP2 SWAP1 PUSH2 0x2D7 PUSH2 0x100 DUP3 PUSH2 0x9C5 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH32 0x0 PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x42 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x62 SWAP3 DUP4 ADD DUP2 MSTORE SWAP1 SWAP2 PUSH2 0x32B SWAP1 DUP3 PUSH2 0x9C5 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 CALLDATASIZE SWAP2 PUSH2 0xA08 JUMP JUMPDEST SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP1 PUSH1 0x20 DUP5 PUSH1 0x4 DUP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x4E7 JUMPI PUSH0 SWAP5 PUSH2 0x4B6 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x4A2 JUMPI JUMPDEST POP PUSH2 0x490 JUMPI PUSH2 0x390 SWAP1 PUSH2 0xA5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x40 MLOAD PUSH4 0x9E5D4C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP2 DUP1 PUSH2 0x3CA DUP10 DUP10 DUP10 DUP9 PUSH1 0x4 DUP7 ADD PUSH2 0xAFF JUMP JUMPDEST SUB DUP2 DUP4 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH0 SWAP2 DUP2 PUSH2 0x46C JUMPI JUMPDEST POP PUSH2 0x40F JUMPI PUSH2 0x3F0 PUSH2 0xB23 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2B3F6D11 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x468 SWAP7 SWAP2 SWAP6 PUSH1 0x4 CALLDATALOAD SWAP6 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH32 0xBDC4E709CEE662270D6B1F3B98B847541936A3762B56F7229D50448D83476E24 SWAP5 DUP5 SWAP4 PUSH2 0x459 SWAP4 DUP12 SWAP4 DUP7 PUSH2 0xB52 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x168 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x489 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x481 DUP2 DUP4 PUSH2 0x9C5 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA80 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20578759 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 EQ ISZERO SWAP1 POP PUSH0 PUSH2 0x382 JUMP JUMPDEST PUSH2 0x4D9 SWAP2 SWAP5 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4E0 JUMPI JUMPDEST PUSH2 0x4D1 DUP2 DUP4 PUSH2 0x9C5 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA3E JUMP JUMPDEST SWAP3 PUSH0 PUSH2 0x36D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x819BDCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4E25774F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x53F DUP2 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 PUSH1 0x24 CALLDATALOAD DUP2 CALLDATALOAD PUSH2 0x57E DUP3 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF0 JUMPI PUSH2 0x5A1 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0xF4 JUMP JUMPDEST SWAP4 SWAP1 SWAP2 PUSH2 0x5AC PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x1EE DUP6 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND ISZERO PUSH2 0x69D JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x68C JUMPI DUP3 PUSH0 DUP4 DUP10 PUSH2 0x5FD DUP11 DUP7 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0x9E5D4C49 PUSH1 0xE0 SHL DUP8 MSTORE DUP7 ADD PUSH2 0xAFF JUMP JUMPDEST SUB DUP2 DUP4 DUP10 GAS CALL PUSH0 SWAP2 DUP2 PUSH2 0x670 JUMPI JUMPDEST POP PUSH2 0x632 JUMPI DUP8 PUSH2 0x619 PUSH2 0xB23 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2B3F6D11 PUSH1 0xE2 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST PUSH2 0x468 SWAP8 POP SWAP2 PUSH2 0x459 PUSH0 SWAP6 SWAP5 SWAP3 PUSH32 0xBDC4E709CEE662270D6B1F3B98B847541936A3762B56F7229D50448D83476E24 SWAP5 SWAP9 DUP10 SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 PUSH2 0xB52 JUMP JUMPDEST PUSH2 0x685 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x481 DUP2 DUP4 PUSH2 0x9C5 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x60B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP8 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4E25774F PUSH1 0xE1 SHL DUP2 MSTORE DUP9 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6CA PUSH2 0xBA1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x729 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH32 0xC631C273472E359A1548940DACA1E146B3B6BF7582363A16E11B9F570783BAEE SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C94B023 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x2EAAF47F5D8D55BBDFC0070D3BF4E5C48F0E169AEB82B023197C8B2C69C6A338 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH2 0x7C7 PUSH2 0xBA1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x87F DUP3 PUSH2 0xDF JUMP JUMPDEST PUSH2 0x887 PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP3 SWAP1 DUP4 ISZERO PUSH2 0x4FE JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x911 JUMPI PUSH2 0x8EB SWAP1 PUSH2 0x8CC DUP4 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0xD63BE02155B46636309FB0A4A79647C60971AECAAD53CBC83AAD90CD75FD9D54 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95B0718D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x940 DUP2 PUSH2 0xDF JUMP JUMPDEST PUSH2 0x948 PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x999 JUMPI PUSH0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9E7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x9E7 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xA14 DUP3 PUSH2 0x9EC JUMP JUMPDEST SWAP2 PUSH2 0xA22 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x9C5 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0xF0 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xF0 JUMPI MLOAD PUSH2 0x179 DUP2 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xA6C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0xF0 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xF0 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xF0 JUMPI DUP1 MLOAD PUSH2 0xAB3 DUP2 PUSH2 0x9EC JUMP JUMPDEST SWAP3 PUSH2 0xAC1 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x9C5 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0xF0 JUMPI PUSH2 0x179 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x122 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x179 SWAP5 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP2 PUSH2 0xADF JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xB4D JUMPI RETURNDATASIZE SWAP1 PUSH2 0xB34 DUP3 PUSH2 0x9EC JUMP JUMPDEST SWAP2 PUSH2 0xB42 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x9C5 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP4 PUSH2 0xB7D SWAP3 PUSH2 0x179 SWAP7 SWAP5 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP2 PUSH2 0xADF JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x143 JUMP JUMPDEST PUSH2 0x179 SWAP2 PUSH2 0xB98 SWAP2 PUSH2 0xBCC JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xC24 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xBB4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0xBFC JUMPI PUSH2 0xBF5 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH0 BYTE SWAP1 PUSH2 0xCB1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0xC10 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xC2D DUP2 PUSH2 0xC06 JUMP JUMPDEST DUP1 PUSH2 0xC36 JUMPI POP POP JUMP JUMPDEST PUSH2 0xC3F DUP2 PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0xC59 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0xC62 DUP2 PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xC8F PUSH1 0x3 SWAP3 PUSH2 0xC06 JUMP JUMPDEST EQ PUSH2 0xC97 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0xD28 JUMPI SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP3 PUSH1 0xFF PUSH0 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x4E7 JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD1E JUMPI SWAP1 PUSH0 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 PUSH1 0x1 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xD9 GT 0xE 0xB0 0xE6 SWAP15 MULMOD CALLDATASIZE 0x29 0xBA 0x22 0xBC 0xF 0xB2 DUP2 0xD0 0xE9 0x29 DUP9 SWAP2 MUL 0xC0 PUSH15 0x97DF30A314B0015964736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "13355:5903:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;13355:5903:0;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;13355:5903:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;13355:5903:0;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;13355:5903:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;16461:17;;13355:5903;;;;18278:7;13355:5903;;;;;;;16461:17;13355:5903;-1:-1:-1;;;;;13355:5903:0;;;16461:17;13355:5903;-1:-1:-1;;;;;13355:5903:0;;16492:20;16488:54;;13355:5903;;-1:-1:-1;;;;;13355:5903:0;16556:19;16552:45;;13355:5903;;16611:15;:26;16607:57;;-1:-1:-1;;;;;13355:5903:0;;;;;;;16718:6;13355:5903;;;;;17008:19;;13355:5903;;;;;;;;;;:::i;:::-;;;;;;;16824:15;13355:5903;;;14325:107;16772:85;;;13355:5903;;;;;-1:-1:-1;;;;;13355:5903:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16772:85;;-1:-1:-1;;;16772:85:0;;13355:5903;;16772:85;:::i;:::-;13355:5903;16762:96;;13355:5903;;-1:-1:-1;;;13355:5903:0;16895:58;;13355:5903;;;16924:16;13355:5903;;;;;;;;;;;;16895:58;;;;;;;;;13355:5903;16895:58;:::i;:::-;13355:5903;16885:69;;13355:5903;;;;:::i;:::-;17008:19;;:::i;:::-;13355:5903;;-1:-1:-1;;;17105:25:0;;13355:5903;;;;;;;;-1:-1:-1;;;;;13355:5903:0;17105:25;;;;;;;-1:-1:-1;17105:25:0;;;13355:5903;-1:-1:-1;;;;;;13355:5903:0;;17144:20;;;:44;;;;13355:5903;17140:72;;;17266:9;;;:::i;:::-;-1:-1:-1;;;;;13355:5903:0;;;;;;;16718:6;13355:5903;;;;;;;;-1:-1:-1;;;17401:50:0;;-1:-1:-1;13355:5903:0;;17401:50;;;;;13355:5903;17401:50;;;:::i;:::-;;13355:5903;;;;-1:-1:-1;;;;;13355:5903:0;17401:50;;-1:-1:-1;;17401:50:0;;;13355:5903;-1:-1:-1;17397:387:0;;17510:274;;:::i;:::-;13355:5903;;17598:17;;17594:142;;13355:5903;;-1:-1:-1;;;17756:17:0;;13355:5903;;17756:17;17594:142;13355:5903;17635:87;;17397:387;13355:5903;;;;17491:7;;13355:5903;;;;;-1:-1:-1;;;;;13355:5903:0;;17799:65;;13355:5903;;17799:65;;17491:7;;13355:5903;17799:65;:::i;:::-;;;;13355:5903;;;;;;;:::i;:::-;;;;17401:50;;;;;;;-1:-1:-1;17401:50:0;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;17140:72;13355:5903;;-1:-1:-1;;;17197:15:0;;13355:5903;;17197:15;17144:44;-1:-1:-1;;;;;13355:5903:0;17168:20;;;;-1:-1:-1;17144:44:0;;;17105:25;;;;;13355:5903;17105:25;13355:5903;17105:25;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;16607:57::-;13355:5903;;-1:-1:-1;;;16646:18:0;;13355:5903;;16646:18;16552:45;13355:5903;;-1:-1:-1;;;16584:13:0;;13355:5903;;16584:13;16488:54;13355:5903;;-1:-1:-1;;;16521:21:0;;13355:5903;;16521:21;13355:5903;;;;;;-1:-1:-1;;13355:5903:0;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;13355:5903:0;19236:6;13355:5903;;;;-1:-1:-1;13355:5903:0;;;;;;;;;;;;;;-1:-1:-1;;13355:5903:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;2462:62;;;;;:::i;:::-;18278:17;;;13355:5903;;18278:7;13355:5903;;;;;;;18278:17;13355:5903;-1:-1:-1;;;;;13355:5903:0;;;;18309:20;18305:54;;13355:5903;18373:19;;;18369:45;;13355:5903;-1:-1:-1;13355:5903:0;;18455:50;13355:5903;;;;;;;;;;;;18455:50;;;;;:::i;:::-;;;;;;;-1:-1:-1;;18455:50:0;;;13355:5903;-1:-1:-1;18451:345:0;;18564:232;;;:::i;:::-;13355:5903;;18610:17;;18606:142;;13355:5903;;-1:-1:-1;;;18768:17:0;;13355:5903;;18768:17;18451:345;13355:5903;18545:7;;;18890:69;-1:-1:-1;18545:7:0;;;18890:69;18545:7;18451:345;;;13355:5903;;18890:69;;;;;:::i;18455:50::-;;;;;;;-1:-1:-1;18455:50:0;;;;;;:::i;:::-;;;;;18369:45;13355:5903;;-1:-1:-1;;;18401:13:0;;13355:5903;;18401:13;18305:54;13355:5903;;-1:-1:-1;;;18338:21:0;;13355:5903;;18338:21;13355:5903;;;;;;-1:-1:-1;;13355:5903:0;;;;;;2462:62;;:::i;:::-;-1:-1:-1;13355:5903:0;;;15439:7;13355:5903;;;;;;-1:-1:-1;;;;;13355:5903:0;;15470:17;;15466:46;;-1:-1:-1;13355:5903:0;;;15439:7;13355:5903;;;;;;;-1:-1:-1;;;;;;13355:5903:0;;;15561:33;;-1:-1:-1;15561:33:0;13355:5903;15466:46;13355:5903;;-1:-1:-1;;;15496:16:0;;13355:5903;;15496:16;13355:5903;;;;;;-1:-1:-1;;13355:5903:0;;;;;;;14120:41;13355:5903;;;;;;;;;-1:-1:-1;;13355:5903:0;;;;;;;14325:107;13355:5903;;;;;;;;;-1:-1:-1;;13355:5903:0;;;;2462:62;;:::i;:::-;13355:5903;;;-1:-1:-1;;;;;;13355:5903:0;;;;-1:-1:-1;;;;;13355:5903:0;4014:40;13355:5903;;4014:40;13355:5903;;;;;;;-1:-1:-1;;13355:5903:0;;;;;;-1:-1:-1;13355:5903:0;19124:7;13355:5903;;;;;;;;;-1:-1:-1;13355:5903:0;;;;;;;;;;;;;;;-1:-1:-1;;13355:5903:0;;;;;;;;-1:-1:-1;;;;;13355:5903:0;;;;;;;;;;;;;;-1:-1:-1;;13355:5903:0;;;;;;;;;;;:::i;:::-;2462:62;;:::i;:::-;-1:-1:-1;;;;;13355:5903:0;;;;;15133:20;;15129:46;;-1:-1:-1;13355:5903:0;;;15189:7;13355:5903;;;;;;;-1:-1:-1;;;;;13355:5903:0;15185:69;;15264:26;:17;;;13355:5903;;18278:7;13355:5903;;;;;;;15264:17;13355:5903;;-1:-1:-1;;;;;;13355:5903:0;-1:-1:-1;;;;;13355:5903:0;;;;;;;;;;15264:26;15305:34;-1:-1:-1;15305:34:0;;13355:5903;15185:69;13355:5903;;-1:-1:-1;;;15229:25:0;;13355:5903;;15229:25;13355:5903;;;;;;-1:-1:-1;;13355:5903:0;;;;;;;;;:::i;:::-;2462:62;;:::i;:::-;-1:-1:-1;;;;;13355:5903:0;;;;3589:22;;3585:91;;3966:6;13355:5903;;;;;;;;3966:6;13355:5903;;4014:40;3966:6;4014:40;;13355:5903;3585:91;13355:5903;;-1:-1:-1;;;3634:31:0;;-1:-1:-1;13355:5903:0;3634:31;;13355:5903;;;3634:31;13355:5903;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;-1:-1:-1;;13355:5903:0;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;13355:5903:0;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;16461:7;13355:5903;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;13355:5903:0;;;;;;;;-1:-1:-1;;13355:5903:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;13355:5903:0;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;7811:255::-;8024:8;7811:255;7968:27;7811:255;7968:27;:::i;:::-;8024:8;;;;;:::i;2758:162::-;2672:6;13355:5903;-1:-1:-1;;;;;13355:5903:0;757:10;2817:23;2813:101;;2758:162::o;2813:101::-;13355:5903;;-1:-1:-1;;;2863:40:0;;757:10;2863:40;;;13355:5903;;;2863:40;6226:778;13355:5903;;;6226:778;6416:2;6396:22;;6416:2;;6848:25;6632:196;;;;;;;;;;;;;;;-1:-1:-1;6632:196:0;6848:25;;:::i;:::-;6841:32;;;;;:::o;6392:606::-;6904:83;;6920:1;6904:83;6924:35;6904:83;;:::o;13355:5903::-;;-1:-1:-1;13355:5903:0;;;:::o;:::-;;;;;;;;;;;;11377:532;13355:5903;;;:::i;:::-;11463:29;;;11508:7;;:::o;11459:444::-;13355:5903;;;:::i;:::-;11568:29;11559:38;;11568:29;;13355:5903;;-1:-1:-1;;;11620:23:0;;;;;11555:348;13355:5903;;;:::i;:::-;11673:35;11664:44;;11673:35;;13355:5903;;-1:-1:-1;;;11731:46:0;;;;;13355:5903;;;;;11731:46;11660:243;13355:5903;;11807:30;13355:5903;;:::i;:::-;11798:39;11794:109;;11660:243;11377:532::o;11794:109::-;13355:5903;;-1:-1:-1;;;11860:32:0;;;;;13355:5903;;;;;;11731:46;9300:1551;;;10380:66;10367:79;;10363:164;;13355:5903;;;;;;-1:-1:-1;13355:5903:0;;;;;;;;;;;;;;;;;;;10638:24;;;;;;;;;-1:-1:-1;10638:24:0;-1:-1:-1;;;;;13355:5903:0;;10676:20;10672:113;;10795:49;-1:-1:-1;10795:49:0;-1:-1:-1;9300:1551:0;:::o;10672:113::-;10712:62;-1:-1:-1;10712:62:0;10638:24;10712:62;-1:-1:-1;10712:62:0;:::o;10363:164::-;10462:54;;;10478:1;10462:54;10482:30;10462:54;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "686600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ACTION_TYPEHASH()": "267",
								"DOMAIN_SEPARATOR()": "infinite",
								"executeModuleActionByOwner(bytes32,address,uint256,bytes)": "infinite",
								"executeModuleActionWithSig(bytes32,address,uint256,bytes,uint256,bytes)": "infinite",
								"getModule(bytes32)": "2519",
								"getNonce(address)": "2429",
								"modules(bytes32)": "2585",
								"nonces(address)": "2561",
								"owner()": "2481",
								"registerModule(bytes32,address)": "30708",
								"renounceOwnership()": "28186",
								"transferOwnership(address)": "28409",
								"unregisterModule(bytes32)": "30380"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 14461,
									"end": 14471,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2235,
									"end": 2261,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2231,
									"end": 2326,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2231,
									"end": 2326,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2259,
									"end": 2260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 14461,
									"end": 14471,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14461,
									"end": 14471,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2259,
									"end": 2260,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4014,
									"end": 4054,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13355,
									"end": 19258,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20B1BA34B7B722BC32B1BABA37B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "91"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14833,
									"end": 14867,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13355,
									"end": 19258,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14885,
									"end": 14906,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14612,
									"end": 14976,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 14612,
									"end": 14976,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14612,
									"end": 14976,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 14720,
									"end": 14815,
									"name": "PUSH",
									"source": 0,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14508,
									"end": 14561,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14957,
									"end": 14961,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 14612,
									"end": 14976,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14612,
									"end": 14976,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14589,
									"end": 14986,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14589,
									"end": 14986,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 14570,
									"end": 14986,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "601"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B71"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2259,
									"end": 2260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2259,
									"end": 2260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2231,
									"end": 2326,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2231,
									"end": 2326,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2259,
									"end": 2260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2284,
									"end": 2315,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "LT",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13355,
									"end": 19258,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13355,
									"end": 19258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e1d9110eb0e69e093629ba22bc0fb281d0e929889102c06e97df30a314b0015964736f6c63430008180033",
									".code": [
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "16CA96F4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "2D0335AB"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "2DAC633B"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "3595945D"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "3644E515"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "5A35B84A"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "85ACD641"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "A78E922B"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "B0B6CC1A"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16461,
											"end": 16478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 16461,
											"end": 16478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18278,
											"end": 18285,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16461,
											"end": 16478,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 16461,
											"end": 16478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16461,
											"end": 16478,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 16461,
											"end": 16478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16492,
											"end": 16512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16488,
											"end": 16542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 16488,
											"end": 16542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 16552,
											"end": 16597,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16611,
											"end": 16626,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 16611,
											"end": 16637,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16607,
											"end": 16664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16607,
											"end": 16664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16718,
											"end": 16724,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17008,
											"end": 17027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 17008,
											"end": 17027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 16839,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14325,
											"end": 14432,
											"name": "PUSH",
											"source": 0,
											"value": "2EAAF47F5D8D55BBDFC0070D3BF4E5C48F0E169AEB82B023197C8B2C69C6A338"
										},
										{
											"begin": 16772,
											"end": 16857,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 16772,
											"end": 16857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 16772,
											"end": 16857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16857,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 16772,
											"end": 16857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16762,
											"end": 16858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16762,
											"end": 16858,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16895,
											"end": 16953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16924,
											"end": 16940,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 16895,
											"end": 16953,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 16895,
											"end": 16953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 16895,
											"end": 16953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16953,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 16895,
											"end": 16953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16885,
											"end": 16954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16885,
											"end": 16954,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17008,
											"end": 17027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17008,
											"end": 17027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 17008,
											"end": 17027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17008,
											"end": 17027,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 17008,
											"end": 17027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DA5CB5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17144,
											"end": 17164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17144,
											"end": 17164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17144,
											"end": 17164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17144,
											"end": 17188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17144,
											"end": 17188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17144,
											"end": 17188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 17144,
											"end": 17188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17140,
											"end": 17212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17140,
											"end": 17212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 17140,
											"end": 17212,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 17266,
											"end": 17275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 17266,
											"end": 17275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17275,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 17266,
											"end": 17275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16718,
											"end": 16724,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9E5D4C49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 17401,
											"end": 17451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17397,
											"end": 17784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17397,
											"end": 17784,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17510,
											"end": 17784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 17510,
											"end": 17784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 17510,
											"end": 17784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17510,
											"end": 17784,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 17510,
											"end": 17784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17598,
											"end": 17615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17598,
											"end": 17615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17594,
											"end": 17736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 17594,
											"end": 17736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2B3F6D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17756,
											"end": 17773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17756,
											"end": 17773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17756,
											"end": 17773,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17594,
											"end": 17736,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 17594,
											"end": 17736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17635,
											"end": 17722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17635,
											"end": 17722,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17784,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17397,
											"end": 17784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 17491,
											"end": 17498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17491,
											"end": 17498,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17799,
											"end": 17864,
											"name": "PUSH",
											"source": 0,
											"value": "BDC4E709CEE662270D6B1F3B98B847541936A3762B56F7229D50448D83476E24"
										},
										{
											"begin": 17799,
											"end": 17864,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17799,
											"end": 17864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 17799,
											"end": 17864,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17491,
											"end": 17498,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 17491,
											"end": 17498,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17799,
											"end": 17864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 17799,
											"end": 17864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17799,
											"end": 17864,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 17799,
											"end": 17864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17799,
											"end": 17864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17799,
											"end": 17864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17799,
											"end": 17864,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 17401,
											"end": 17451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 17401,
											"end": 17451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 17401,
											"end": 17451,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17140,
											"end": 17212,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 17140,
											"end": 17212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20578759"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17197,
											"end": 17212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17197,
											"end": 17212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17197,
											"end": 17212,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17144,
											"end": 17188,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 17144,
											"end": 17188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17188,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17144,
											"end": 17188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17144,
											"end": 17188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 17144,
											"end": 17188,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 17105,
											"end": 17130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 17105,
											"end": 17130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 17105,
											"end": 17130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16607,
											"end": 16664,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16607,
											"end": 16664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "819BDCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16646,
											"end": 16664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16646,
											"end": 16664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16646,
											"end": 16664,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16597,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 16552,
											"end": 16597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16584,
											"end": 16597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16584,
											"end": 16597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16584,
											"end": 16597,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16488,
											"end": 16542,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 16488,
											"end": 16542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E25774F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16521,
											"end": 16542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16521,
											"end": 16542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16521,
											"end": 16542,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19236,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2462,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18278,
											"end": 18295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 18278,
											"end": 18295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 18278,
											"end": 18295,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18278,
											"end": 18285,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18278,
											"end": 18295,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 18278,
											"end": 18295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18309,
											"end": 18329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18305,
											"end": 18359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 18305,
											"end": 18359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18373,
											"end": 18392,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18373,
											"end": 18392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18373,
											"end": 18392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18369,
											"end": 18414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 18369,
											"end": 18414,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "9E5D4C49"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 18455,
											"end": 18505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18451,
											"end": 18796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 18451,
											"end": 18796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18564,
											"end": 18796,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18564,
											"end": 18796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 18564,
											"end": 18796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 18564,
											"end": 18796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18564,
											"end": 18796,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 18564,
											"end": 18796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18610,
											"end": 18627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18610,
											"end": 18627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18606,
											"end": 18748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 18606,
											"end": 18748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2B3F6D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18768,
											"end": 18785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18768,
											"end": 18785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18768,
											"end": 18785,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18796,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 18451,
											"end": 18796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 18545,
											"end": 18552,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 18545,
											"end": 18552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18545,
											"end": 18552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18890,
											"end": 18959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 18545,
											"end": 18552,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 18545,
											"end": 18552,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18545,
											"end": 18552,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18890,
											"end": 18959,
											"name": "PUSH",
											"source": 0,
											"value": "BDC4E709CEE662270D6B1F3B98B847541936A3762B56F7229D50448D83476E24"
										},
										{
											"begin": 18545,
											"end": 18552,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18796,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18796,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18890,
											"end": 18959,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 18890,
											"end": 18959,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18890,
											"end": 18959,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 18890,
											"end": 18959,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18890,
											"end": 18959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 18890,
											"end": 18959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 18455,
											"end": 18505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 18455,
											"end": 18505,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18369,
											"end": 18414,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 18369,
											"end": 18414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18401,
											"end": 18414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18401,
											"end": 18414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18401,
											"end": 18414,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18305,
											"end": 18359,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 18305,
											"end": 18359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E25774F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18338,
											"end": 18359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18338,
											"end": 18359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18338,
											"end": 18359,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2462,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15439,
											"end": 15446,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15466,
											"end": 15512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 15466,
											"end": 15512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15439,
											"end": 15446,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15561,
											"end": 15594,
											"name": "PUSH",
											"source": 0,
											"value": "C631C273472E359A1548940DACA1E146B3B6BF7582363A16E11B9F570783BAEE"
										},
										{
											"begin": 15561,
											"end": 15594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 15561,
											"end": 15594,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 15466,
											"end": 15512,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 15466,
											"end": 15512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C94B023"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15496,
											"end": 15512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15496,
											"end": 15512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15496,
											"end": 15512,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14161,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14325,
											"end": 14432,
											"name": "PUSH",
											"source": 0,
											"value": "2EAAF47F5D8D55BBDFC0070D3BF4E5C48F0E169AEB82B023197C8B2C69C6A338"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2462,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19124,
											"end": 19131,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2462,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15133,
											"end": 15153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15133,
											"end": 15153,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15129,
											"end": 15175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15129,
											"end": 15175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15189,
											"end": 15196,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 15185,
											"end": 15254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15264,
											"end": 15290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 15264,
											"end": 15281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15264,
											"end": 15281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 15264,
											"end": 15281,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18278,
											"end": 18285,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15264,
											"end": 15281,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 15264,
											"end": 15281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15264,
											"end": 15290,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 15264,
											"end": 15290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15305,
											"end": 15339,
											"name": "PUSH",
											"source": 0,
											"value": "D63BE02155B46636309FB0A4A79647C60971AECAAD53CBC83AAD90CD75FD9D54"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 15305,
											"end": 15339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15305,
											"end": 15339,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15254,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 15185,
											"end": 15254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95B0718D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15229,
											"end": 15254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15229,
											"end": 15254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15229,
											"end": 15254,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2462,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2462,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3585,
											"end": 3676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4054,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3676,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3585,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3634,
											"end": 3665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3634,
											"end": 3665,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3665,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16461,
											"end": 16468,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 8066,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 7811,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 7811,
											"end": 8066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7968,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 7811,
											"end": 8066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7968,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 7968,
											"end": 7995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7968,
											"end": 7995,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 7968,
											"end": 7995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8032,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8032,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 8024,
											"end": 8032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2920,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2758,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 757,
											"end": 767,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2813,
											"end": 2914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2914,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2813,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 757,
											"end": 767,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2903,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6226,
											"end": 7004,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6226,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6226,
											"end": 7004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6416,
											"end": 6418,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6396,
											"end": 6418,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6396,
											"end": 6418,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6416,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 6416,
											"end": 6418,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6848,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 6632,
											"end": 6828,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6828,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6632,
											"end": 6828,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6828,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6632,
											"end": 6828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6632,
											"end": 6828,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6828,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6828,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 6848,
											"end": 6873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6848,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6848,
											"end": 6873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6848,
											"end": 6873,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 6848,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6841,
											"end": 6873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6841,
											"end": 6873,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6841,
											"end": 6873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6841,
											"end": 6873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6841,
											"end": 6873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6841,
											"end": 6873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6392,
											"end": 6998,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 6392,
											"end": 6998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6904,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6904,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6904,
											"end": 6987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6959,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6904,
											"end": 6987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6904,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6904,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11377,
											"end": 11909,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 11377,
											"end": 11909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11463,
											"end": 11492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11463,
											"end": 11492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 11463,
											"end": 11492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11508,
											"end": 11515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11508,
											"end": 11515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11508,
											"end": 11515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11903,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 11459,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11568,
											"end": 11597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11559,
											"end": 11597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11559,
											"end": 11597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11568,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 11568,
											"end": 11597,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F645EEDF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11620,
											"end": 11643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11643,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11620,
											"end": 11643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11643,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11555,
											"end": 11903,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 11555,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11664,
											"end": 11708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11664,
											"end": 11708,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FCE698F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11731,
											"end": 11777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11731,
											"end": 11777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11731,
											"end": 11777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11731,
											"end": 11777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11731,
											"end": 11777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11731,
											"end": 11777,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11903,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 11660,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 11807,
											"end": 11837,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11798,
											"end": 11837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11794,
											"end": 11903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 11794,
											"end": 11903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11377,
											"end": 11909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11794,
											"end": 11903,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 11794,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35E2F383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11860,
											"end": 11892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11860,
											"end": 11892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11860,
											"end": 11892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11860,
											"end": 11892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11860,
											"end": 11892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11731,
											"end": 11777,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 10851,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9300,
											"end": 10851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 10851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 10851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 10446,
											"name": "PUSH",
											"source": 0,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 10367,
											"end": 10446,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10367,
											"end": 10446,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 10363,
											"end": 10527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 10662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 10662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 10662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 10662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10638,
											"end": 10662,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 10662,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 10662,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10638,
											"end": 10662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10638,
											"end": 10662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10676,
											"end": 10696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10672,
											"end": 10785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 10672,
											"end": 10785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10795,
											"end": 10844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10795,
											"end": 10844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9300,
											"end": 10851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 10851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10672,
											"end": 10785,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 10672,
											"end": 10785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10712,
											"end": 10774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 10662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10712,
											"end": 10774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10712,
											"end": 10774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 10527,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 10363,
											"end": 10527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10478,
											"end": 10479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10462,
											"end": 10516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10482,
											"end": 10512,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10462,
											"end": 10516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ACTION_TYPEHASH()": "5a35b84a",
							"DOMAIN_SEPARATOR()": "3644e515",
							"executeModuleActionByOwner(bytes32,address,uint256,bytes)": "2dac633b",
							"executeModuleActionWithSig(bytes32,address,uint256,bytes,uint256,bytes)": "16ca96f4",
							"getModule(bytes32)": "85acd641",
							"getNonce(address)": "2d0335ab",
							"modules(bytes32)": "b0b6cc1a",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"registerModule(bytes32,address)": "a78e922b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unregisterModule(bytes32)": "3595945d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModuleAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModuleNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModuleNotRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"name\":\"ActionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleUnregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACTION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeModuleActionByOwner\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"executeModuleActionWithSig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"}],\"name\":\"getModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"modules\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"registerModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"moduleId\",\"type\":\"bytes32\"}],\"name\":\"unregisterModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"executeModuleActionWithSig(bytes32,address,uint256,bytes,uint256,bytes)\":{\"params\":{\"data\":\"Calldata to pass to module (executed from vault context)\",\"deadline\":\"Timestamp after which the signature is invalid\",\"moduleId\":\"Registered module id (bytes32)\",\"sig\":\"EIP-191 signature (65 bytes) from vault owner approving this action\",\"value\":\"ETH value to forward from vault to module (in wei)\",\"vault\":\"Address of the UserVault clone\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ModuleRegistered(bytes32,address)\":{\"notice\":\"========== EVENTS ==========\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"EIP-712 domain separator parameters\"},\"executeModuleActionByOwner(bytes32,address,uint256,bytes)\":{\"notice\":\"Admin fallback: owner of this contract can execute module actions directly (no signature). Useful for governance-driven or emergency operations.\"},\"executeModuleActionWithSig(bytes32,address,uint256,bytes,uint256,bytes)\":{\"notice\":\"Execute a registered module's action on behalf of user vault, authorized by owner's signature.\"},\"getModule(bytes32)\":{\"notice\":\"========== HELPERS / VIEWS ==========\"},\"modules(bytes32)\":{\"notice\":\"========== MODULE REGISTRY ========== moduleId => moduleAddress\"},\"nonces(address)\":{\"notice\":\"========== NONCES ========== vault => nonce\"},\"registerModule(bytes32,address)\":{\"notice\":\"========== MODULE ADMIN ==========\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":\"ActionExecutor\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":{\"keccak256\":\"0x49172c216d839c578ef9ee060fea428d358237525e8bf5d42e1c579fa1572efd\",\"urls\":[\"bzz-raw://da88e4f67c5962743d5f6794f94c025f1df7e1828c8c5064d9aa4fe119c1baca\",\"dweb:/ipfs/QmWTBRBoyETrYAoCBFwAvsKbvL7Wac5pb55WzT9ZmCEhAF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 35,
								"contract": "src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol:ActionExecutor",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 593,
								"contract": "src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol:ActionExecutor",
								"label": "modules",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_address)"
							},
							{
								"astId": 598,
								"contract": "src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol:ActionExecutor",
								"label": "nonces",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_address)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"ModuleRegistered(bytes32,address)": {
								"notice": "========== EVENTS =========="
							}
						},
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "EIP-712 domain separator parameters"
							},
							"executeModuleActionByOwner(bytes32,address,uint256,bytes)": {
								"notice": "Admin fallback: owner of this contract can execute module actions directly (no signature). Useful for governance-driven or emergency operations."
							},
							"executeModuleActionWithSig(bytes32,address,uint256,bytes,uint256,bytes)": {
								"notice": "Execute a registered module's action on behalf of user vault, authorized by owner's signature."
							},
							"getModule(bytes32)": {
								"notice": "========== HELPERS / VIEWS =========="
							},
							"modules(bytes32)": {
								"notice": "========== MODULE REGISTRY ========== moduleId => moduleAddress"
							},
							"nonces(address)": {
								"notice": "========== NONCES ========== vault => nonce"
							},
							"registerModule(bytes32,address)": {
								"notice": "========== MODULE ADMIN =========="
							}
						},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":{\"keccak256\":\"0x49172c216d839c578ef9ee060fea428d358237525e8bf5d42e1c579fa1572efd\",\"urls\":[\"bzz-raw://da88e4f67c5962743d5f6794f94c025f1df7e1828c8c5064d9aa4fe119c1baca\",\"dweb:/ipfs/QmWTBRBoyETrYAoCBFwAvsKbvL7Wac5pb55WzT9ZmCEhAF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":4441:11911  library ECDSA {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":4441:11911  library ECDSA {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220895378027733d005cb56e159811e5c90a17ff1449fb9114fbafa80525ab49b0564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220895378027733d005cb56e159811e5c90a17ff1449fb9114fbafa80525ab49b0564736f6c63430008180033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 MSTORE8 PUSH25 0x27733D005CB56E159811E5C90A17FF1449FB9114FBAFA8052 GAS 0xB4 SWAP12 SDIV PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "4441:7470:0:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea2646970667358221220895378027733d005cb56e159811e5c90a17ff1449fb9114fbafa80525ab49b0564736f6c63430008180033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 MSTORE8 PUSH25 0x27733D005CB56E159811E5C90A17FF1449FB9114FBAFA8052 GAS 0xB4 SWAP12 SDIV PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "4441:7470:0:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4441,
									"end": 11911,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "library_deploy_address"
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4441,
									"end": 11911,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220895378027733d005cb56e159811e5c90a17ff1449fb9114fbafa80525ab49b0564736f6c63430008180033",
									".code": [
										{
											"begin": 4441,
											"end": 11911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 11911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4441,
											"end": 11911,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":{\"keccak256\":\"0x49172c216d839c578ef9ee060fea428d358237525e8bf5d42e1c579fa1572efd\",\"urls\":[\"bzz-raw://da88e4f67c5962743d5f6794f94c025f1df7e1828c8c5064d9aa4fe119c1baca\",\"dweb:/ipfs/QmWTBRBoyETrYAoCBFwAvsKbvL7Wac5pb55WzT9ZmCEhAF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUserVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "executeCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "ActionExecutor",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"executeCall(address,uint256,bytes)": "9e5d4c49",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"ActionExecutor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Central onchain dispatcher that executes module actions from user vaults.         Uses EIP-712 signed approvals by the vault owner to allow a relayer/bot to         call `executeModuleActionWithSig(...)` which will call `UserVault.executeCall(...)`. CA: 0x2288B1E75e90B62012d527068A07bebE5F89be9d Flow:  1. Vault owner signs an EIP-712 message approving a module action for their vault.  2. Offchain relayer (bot) pushes the signature and params to this contract.  3. This contract validates signature, checks module whitelist, increments nonce,     and calls `UserVault(vault).executeCall(module, value, data)`. Security notes:  - The UserVault must whitelist this ActionExecutor via `setExecutorAllowed(executor, true)`    for the call to succeed (UserVault enforces that).  - Nonces are per-vault to prevent replay attacks.  - Modules must be registered by the contract owner.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":\"IUserVault\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":{\"keccak256\":\"0x49172c216d839c578ef9ee060fea428d358237525e8bf5d42e1c579fa1572efd\",\"urls\":[\"bzz-raw://da88e4f67c5962743d5f6794f94c025f1df7e1828c8c5064d9aa4fe119c1baca\",\"dweb:/ipfs/QmWTBRBoyETrYAoCBFwAvsKbvL7Wac5pb55WzT9ZmCEhAF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Central onchain dispatcher that executes module actions from user vaults.         Uses EIP-712 signed approvals by the vault owner to allow a relayer/bot to         call `executeModuleActionWithSig(...)` which will call `UserVault.executeCall(...)`. CA: 0x2288B1E75e90B62012d527068A07bebE5F89be9d Flow:  1. Vault owner signs an EIP-712 message approving a module action for their vault.  2. Offchain relayer (bot) pushes the signature and params to this contract.  3. This contract validates signature, checks module whitelist, increments nonce,     and calls `UserVault(vault).executeCall(module, value, data)`. Security notes:  - The UserVault must whitelist this ActionExecutor via `setExecutorAllowed(executor, true)`    for the call to succeed (UserVault enforces that).  - Nonces are per-vault to prevent replay attacks.  - Modules must be registered by the contract owner.",
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\":{\"keccak256\":\"0x49172c216d839c578ef9ee060fea428d358237525e8bf5d42e1c579fa1572efd\",\"urls\":[\"bzz-raw://da88e4f67c5962743d5f6794f94c025f1df7e1828c8c5064d9aa4fe119c1baca\",\"dweb:/ipfs/QmWTBRBoyETrYAoCBFwAvsKbvL7Wac5pb55WzT9ZmCEhAF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 35,
								"contract": "src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol": {
				"ast": {
					"absolutePath": "src/Contract Architecture/Core Infrastructure/ActionExecutor_flattened.sol",
					"exportedSymbols": {
						"ActionExecutor": [
							1016
						],
						"Context": [
							29
						],
						"ECDSA": [
							521
						],
						"ExecutionFailed": [
							550
						],
						"IUserVault": [
							540
						],
						"InvalidSigner": [
							548
						],
						"ModuleAlreadyRegistered": [
							552
						],
						"ModuleNotFound": [
							554
						],
						"ModuleNotRegistered": [
							544
						],
						"Ownable": [
							174
						],
						"SignatureExpired": [
							546
						],
						"ZeroAddress": [
							542
						]
					},
					"id": 1017,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "149:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "Context",
							"nameLocation": "664:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "740:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "757:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "761:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "757:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "750:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "687:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "697:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "731:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:9:0"
									},
									"scope": 29,
									"src": "678:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "847:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "864:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "868:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "864:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "857:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "789:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "797:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "831:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "831:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:16:0"
									},
									"scope": 29,
									"src": "780:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "957:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "974:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 24,
												"id": 26,
												"nodeType": "Return",
												"src": "967:8:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "894:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "914:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "948:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:9:0"
									},
									"scope": 29,
									"src": "885:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1017,
							"src": "646:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 30,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1110:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 32,
										"name": "Context",
										"nameLocations": [
											"1654:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "1654:7:0"
									},
									"id": 33,
									"nodeType": "InheritanceSpecifier",
									"src": "1654:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 31,
								"nodeType": "StructuredDocumentation",
								"src": "1137:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 174,
							"linearizedBaseContracts": [
								174,
								29
							],
							"name": "Ownable",
							"nameLocation": "1643:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1684:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 174,
									"src": "1668:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 34,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1668:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1697:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 40,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1793:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1828:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1820:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1819:17:0"
									},
									"src": "1787:50:0"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1843:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 45,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1936:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1964:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1956:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1955:15:0"
									},
									"src": "1930:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 51,
									"name": "OwnershipTransferred",
									"nameLocation": "1983:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "2020:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2004:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2051:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2035:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2003:57:0"
									},
									"src": "1977:84:0"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "2221:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 57,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2235:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2259:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2251:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 58,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2251:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2251:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2235:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 71,
												"nodeType": "IfStatement",
												"src": "2231:95:0",
												"trueBody": {
													"id": 70,
													"nodeType": "Block",
													"src": "2263:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 66,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2312:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 65,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2304:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 64,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2304:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2304:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 63,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "2284:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2284:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 69,
															"nodeType": "RevertStatement",
															"src": "2277:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 73,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2354:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 72,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "2335:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "2335:32:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2067:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 77,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2207:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2199:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2198:22:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2221:0:0"
									},
									"scope": 174,
									"src": "2187:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "2483:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 80,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2493:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "2493:13:0"
											},
											{
												"id": 83,
												"nodeType": "PlaceholderStatement",
												"src": "2516:1:0"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2380:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 85,
									"name": "onlyOwner",
									"nameLocation": "2471:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2480:2:0"
									},
									"src": "2462:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "2655:30:0",
										"statements": [
											{
												"expression": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 35,
													"src": "2672:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 90,
												"id": 92,
												"nodeType": "Return",
												"src": "2665:13:0"
											}
										]
									},
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "2530:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2609:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "2646:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:9:0"
									},
									"scope": 174,
									"src": "2600:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2803:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 98,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2817:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2817:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 100,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "2828:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2828:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2817:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 109,
												"nodeType": "IfStatement",
												"src": "2813:101:0",
												"trueBody": {
													"id": 108,
													"nodeType": "Block",
													"src": "2842:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 104,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "2890:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2890:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 103,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "2863:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2863:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 107,
															"nodeType": "RevertStatement",
															"src": "2856:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "2691:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2767:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2778:2:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2803:0:0"
									},
									"scope": 174,
									"src": "2758:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3309:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3346:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3338:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 118,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3338:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3338:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 117,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "3319:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3319:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "3319:30:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "2926:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 114,
												"name": "onlyOwner",
												"nameLocations": [
													"3299:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "3299:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3299:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3264:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3281:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3309:0:0"
									},
									"scope": 174,
									"src": "3255:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3575:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 133,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "3589:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3609:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3601:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 134,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3601:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3601:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3589:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "3585:91:0",
												"trueBody": {
													"id": 146,
													"nodeType": "Block",
													"src": "3613:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3662:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3654:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 140,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3654:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3654:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 139,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "3634:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3634:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 145,
															"nodeType": "RevertStatement",
															"src": "3627:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 149,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3704:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 148,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "3685:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3685:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "3685:28:0"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "3362:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 131,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 130,
												"name": "onlyOwner",
												"nameLocations": [
													"3565:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "3565:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3565:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3514:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3540:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3532:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3531:18:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3575:0:0"
									},
									"scope": 174,
									"src": "3505:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "3937:124:0",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3955:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 172,
														"src": "3947:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 159,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3947:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 162,
												"initialValue": {
													"id": 161,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 35,
													"src": "3966:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3947:25:0"
											},
											{
												"expression": {
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 163,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "3982:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 164,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3991:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3982:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "3982:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 168,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "4035:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 169,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4045:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "4014:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4014:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "EmitStatement",
												"src": "4009:45:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "3726:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3883:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3910:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "3902:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3901:18:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3937:0:0"
									},
									"scope": 174,
									"src": "3874:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1017,
							"src": "1625:2438:0",
							"usedErrors": [
								40,
								45
							],
							"usedEvents": [
								51
							]
						},
						{
							"id": 175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4209:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 176,
								"nodeType": "StructuredDocumentation",
								"src": "4235:205:0",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 521,
							"linearizedBaseContracts": [
								521
							],
							"name": "ECDSA",
							"nameLocation": "4449:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 181,
									"members": [
										{
											"id": 177,
											"name": "NoError",
											"nameLocation": "4489:7:0",
											"nodeType": "EnumValue",
											"src": "4489:7:0"
										},
										{
											"id": 178,
											"name": "InvalidSignature",
											"nameLocation": "4506:16:0",
											"nodeType": "EnumValue",
											"src": "4506:16:0"
										},
										{
											"id": 179,
											"name": "InvalidSignatureLength",
											"nameLocation": "4532:22:0",
											"nodeType": "EnumValue",
											"src": "4532:22:0"
										},
										{
											"id": 180,
											"name": "InvalidSignatureS",
											"nameLocation": "4564:17:0",
											"nodeType": "EnumValue",
											"src": "4564:17:0"
										}
									],
									"name": "RecoverError",
									"nameLocation": "4466:12:0",
									"nodeType": "EnumDefinition",
									"src": "4461:126:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "4593:63:0",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 184,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "4667:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4688:2:0"
									},
									"src": "4661:30:0"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "4697:60:0",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 189,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "4768:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "4804:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4796:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4795:16:0"
									},
									"src": "4762:50:0"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "4818:85:0",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 194,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "4914:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4945:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "4937:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4936:11:0"
									},
									"src": "4908:40:0"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "6382:622:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 209,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6396:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6406:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6396:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6416:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "6396:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 244,
													"nodeType": "Block",
													"src": "6890:108:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 233,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6920:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6912:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 231,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6912:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6912:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 235,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "6924:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$181_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6937:22:0",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 179,
																		"src": "6924:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$181",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 239,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 199,
																					"src": "6969:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6979:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "6969:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6961:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 237,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6961:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6961:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 242,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6911:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$181_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 208,
															"id": 243,
															"nodeType": "Return",
															"src": "6904:83:0"
														}
													]
												},
												"id": 245,
												"nodeType": "IfStatement",
												"src": "6392:606:0",
												"trueBody": {
													"id": 230,
													"nodeType": "Block",
													"src": "6420:464:0",
													"statements": [
														{
															"assignments": [
																214
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 214,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "6442:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 230,
																	"src": "6434:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 213,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6434:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 215,
															"nodeType": "VariableDeclarationStatement",
															"src": "6434:9:0"
														},
														{
															"assignments": [
																217
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 217,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "6465:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 230,
																	"src": "6457:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 216,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6457:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 218,
															"nodeType": "VariableDeclarationStatement",
															"src": "6457:9:0"
														},
														{
															"assignments": [
																220
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 220,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "6486:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 230,
																	"src": "6480:7:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 219,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6480:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 221,
															"nodeType": "VariableDeclarationStatement",
															"src": "6480:7:0"
														},
														{
															"AST": {
																"nativeSrc": "6657:171:0",
																"nodeType": "YulBlock",
																"src": "6657:171:0",
																"statements": [
																	{
																		"nativeSrc": "6675:32:0",
																		"nodeType": "YulAssignment",
																		"src": "6675:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "6690:9:0",
																							"nodeType": "YulIdentifier",
																							"src": "6690:9:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6701:4:0",
																							"nodeType": "YulLiteral",
																							"src": "6701:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6686:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "6686:3:0"
																					},
																					"nativeSrc": "6686:20:0",
																					"nodeType": "YulFunctionCall",
																					"src": "6686:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6680:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "6680:5:0"
																			},
																			"nativeSrc": "6680:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6680:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "6675:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6675:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6724:32:0",
																		"nodeType": "YulAssignment",
																		"src": "6724:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "6739:9:0",
																							"nodeType": "YulIdentifier",
																							"src": "6739:9:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6750:4:0",
																							"nodeType": "YulLiteral",
																							"src": "6750:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6735:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "6735:3:0"
																					},
																					"nativeSrc": "6735:20:0",
																					"nodeType": "YulFunctionCall",
																					"src": "6735:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6729:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "6729:5:0"
																			},
																			"nativeSrc": "6729:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6729:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "6724:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6724:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6773:41:0",
																		"nodeType": "YulAssignment",
																		"src": "6773:41:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6783:1:0",
																					"nodeType": "YulLiteral",
																					"src": "6783:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "6796:9:0",
																									"nodeType": "YulIdentifier",
																									"src": "6796:9:0"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6807:4:0",
																									"nodeType": "YulLiteral",
																									"src": "6807:4:0",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6792:3:0",
																								"nodeType": "YulIdentifier",
																								"src": "6792:3:0"
																							},
																							"nativeSrc": "6792:20:0",
																							"nodeType": "YulFunctionCall",
																							"src": "6792:20:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6786:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "6786:5:0"
																					},
																					"nativeSrc": "6786:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "6786:27:0"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "6778:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "6778:4:0"
																			},
																			"nativeSrc": "6778:36:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6778:36:0"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "6773:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6773:1:0"
																			}
																		]
																	}
																]
															},
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 214,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6675:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 217,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6724:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 199,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6690:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 199,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6739:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 199,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6796:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 220,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6773:1:0",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 222,
															"nodeType": "InlineAssembly",
															"src": "6632:196:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 224,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 197,
																		"src": "6859:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 225,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6865:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 226,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 214,
																		"src": "6868:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 227,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "6871:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 223,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		247,
																		327,
																		435
																	],
																	"referencedDeclaration": 435,
																	"src": "6848:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$181_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6848:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$181_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 208,
															"id": 229,
															"nodeType": "Return",
															"src": "6841:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "4954:1267:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "6235:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6263:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6255:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 196,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "6290:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6277:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 198,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6277:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6245:60:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "6337:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6329:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6329:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "6361:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6348:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$181",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 204,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 203,
														"name": "RecoverError",
														"nameLocations": [
															"6348:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "6348:12:0"
													},
													"referencedDeclaration": 181,
													"src": "6348:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$181",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "6374:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6366:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 206,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6328:53:0"
									},
									"scope": 521,
									"src": "6226:778:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "7898:168:0",
										"statements": [
											{
												"assignments": [
													258,
													261,
													263
												],
												"declarations": [
													{
														"constant": false,
														"id": 258,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "7917:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 276,
														"src": "7909:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 257,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7909:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 261,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "7941:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 276,
														"src": "7928:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$181",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 260,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 259,
																"name": "RecoverError",
																"nameLocations": [
																	"7928:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 181,
																"src": "7928:12:0"
															},
															"referencedDeclaration": 181,
															"src": "7928:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$181",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 263,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "7956:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 276,
														"src": "7948:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 262,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7948:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"arguments": [
														{
															"id": 265,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "7979:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 266,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "7985:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 264,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															247,
															327,
															435
														],
														"referencedDeclaration": 247,
														"src": "7968:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$181_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7968:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$181_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7908:87:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 270,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "8017:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$181",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 271,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "8024:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$181",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 269,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "8005:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$181_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8005:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "8005:28:0"
											},
											{
												"expression": {
													"id": 274,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 258,
													"src": "8050:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 256,
												"id": 275,
												"nodeType": "Return",
												"src": "8043:16:0"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "7010:796:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "7820:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "7836:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7828:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 249,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "7855:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7842:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7842:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7827:38:0"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7889:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7888:9:0"
									},
									"scope": 521,
									"src": "7811:255:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "8445:342:0",
										"statements": [
											{
												"id": 325,
												"nodeType": "UncheckedBlock",
												"src": "8455:326:0",
												"statements": [
													{
														"assignments": [
															295
														],
														"declarations": [
															{
																"constant": false,
																"id": 295,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "8487:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 325,
																"src": "8479:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 294,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8479:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 302,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 296,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "8491:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8504:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8496:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 297,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "8496:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8496:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "8491:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8479:92:0"
													},
													{
														"assignments": [
															304
														],
														"declarations": [
															{
																"constant": false,
																"id": 304,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "8688:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 325,
																"src": "8682:7:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 303,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "8682:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 317,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 309,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 284,
																							"src": "8707:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "8699:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 307,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "8699:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 310,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8699:11:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 311,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8714:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "8699:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 313,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8698:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8721:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "8698:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 305,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8682:42:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 319,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "8756:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 320,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "8762:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 321,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "8765:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 322,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "8768:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 318,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	247,
																	327,
																	435
																],
																"referencedDeclaration": 435,
																"src": "8745:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$181_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8745:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$181_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 293,
														"id": 324,
														"nodeType": "Return",
														"src": "8738:32:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "8072:205:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "8291:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "8319:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "8311:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 279,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "8341:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "8333:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 281,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "8360:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "8352:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 283,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8301:67:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "8400:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "8392:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "8424:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "8411:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$181",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 289,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 288,
														"name": "RecoverError",
														"nameLocations": [
															"8411:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "8411:12:0"
													},
													"referencedDeclaration": 181,
													"src": "8411:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$181",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "8437:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "8429:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8391:53:0"
									},
									"scope": 521,
									"src": "8282:505:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "9000:164:0",
										"statements": [
											{
												"assignments": [
													340,
													343,
													345
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "9019:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "9011:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 339,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9011:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 343,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "9043:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "9030:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$181",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 342,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 341,
																"name": "RecoverError",
																"nameLocations": [
																	"9030:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 181,
																"src": "9030:12:0"
															},
															"referencedDeclaration": 181,
															"src": "9030:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$181",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "9058:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "9050:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 344,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9050:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 351,
												"initialValue": {
													"arguments": [
														{
															"id": 347,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "9081:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 348,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "9087:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 349,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "9090:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 346,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															247,
															327,
															435
														],
														"referencedDeclaration": 327,
														"src": "9070:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$181_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9070:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$181_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9010:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 353,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "9115:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$181",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 354,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "9122:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$181",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 352,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "9103:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$181_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9103:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "9103:28:0"
											},
											{
												"expression": {
													"id": 357,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 340,
													"src": "9148:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 338,
												"id": 358,
												"nodeType": "Return",
												"src": "9141:16:0"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "8793:116:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "8923:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "8939:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "8931:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8931:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "8953:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "8945:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 331,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "8964:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "8956:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8930:37:0"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "8991:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:9:0"
									},
									"scope": 521,
									"src": "8914:250:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "9479:1372:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 381,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "10375:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 379,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10367:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10367:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10380:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "10367:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 395,
												"nodeType": "IfStatement",
												"src": "10363:164:0",
												"trueBody": {
													"id": 394,
													"nodeType": "Block",
													"src": "10448:79:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10478:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10470:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 385,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10470:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10470:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 389,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "10482:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$181_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "10495:17:0",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 180,
																		"src": "10482:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$181",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 391,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "10514:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 392,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10469:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$181_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 378,
															"id": 393,
															"nodeType": "Return",
															"src": "10462:54:0"
														}
													]
												}
											},
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "10629:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 434,
														"src": "10621:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 396,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10621:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"arguments": [
														{
															"id": 399,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "10648:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 400,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "10654:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 401,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "10657:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 402,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "10660:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 398,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "10638:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10638:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10621:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 405,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "10676:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10694:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10686:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 406,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10686:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10686:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10676:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 424,
												"nodeType": "IfStatement",
												"src": "10672:113:0",
												"trueBody": {
													"id": 423,
													"nodeType": "Block",
													"src": "10698:87:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 413,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10728:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10720:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 411,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10720:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10720:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 415,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "10732:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$181_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "10745:16:0",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 178,
																		"src": "10732:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$181",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10771:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10763:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 417,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "10763:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10763:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 421,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10719:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$181_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 378,
															"id": 422,
															"nodeType": "Return",
															"src": "10712:62:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 425,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "10803:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 426,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "10811:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$181_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "10824:7:0",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 177,
															"src": "10811:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$181",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10841:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 428,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10833:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10833:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 432,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10802:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$181_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 378,
												"id": 433,
												"nodeType": "Return",
												"src": "10795:49:0"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "9170:125:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "9309:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "9337:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "9329:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 362,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "9357:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "9351:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 364,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9351:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "9376:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "9368:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 366,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "9395:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "9387:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 368,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9319:83:0"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "9434:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "9426:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "9458:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "9445:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$181",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 374,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 373,
														"name": "RecoverError",
														"nameLocations": [
															"9445:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "9445:12:0"
													},
													"referencedDeclaration": 181,
													"src": "9445:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$181",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "9471:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "9463:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 376,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9425:53:0"
									},
									"scope": 521,
									"src": "9300:1551:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "11078:166:0",
										"statements": [
											{
												"assignments": [
													450,
													453,
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 450,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "11097:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "11089:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 449,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11089:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 453,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "11121:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "11108:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$181",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 452,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 451,
																"name": "RecoverError",
																"nameLocations": [
																	"11108:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 181,
																"src": "11108:12:0"
															},
															"referencedDeclaration": 181,
															"src": "11108:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$181",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "11136:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "11128:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 454,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "11128:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 462,
												"initialValue": {
													"arguments": [
														{
															"id": 457,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "11159:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 458,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "11165:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 459,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "11168:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 460,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "11171:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 456,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															247,
															327,
															435
														],
														"referencedDeclaration": 435,
														"src": "11148:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$181_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11148:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$181_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11088:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "11195:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$181",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 465,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "11202:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$181",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 463,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "11183:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$181_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11183:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "11183:28:0"
											},
											{
												"expression": {
													"id": 468,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 450,
													"src": "11228:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 448,
												"id": 469,
												"nodeType": "Return",
												"src": "11221:16:0"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "10857:122:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "10993:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "11009:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "11001:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 437,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "11021:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "11015:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 439,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11015:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "11032:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "11024:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "11043:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "11035:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 443,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11000:45:0"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "11069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11068:9:0"
									},
									"scope": 521,
									"src": "10984:260:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "11449:460:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$181",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 480,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "11463:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$181",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 481,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "11472:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$181_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11485:7:0",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 177,
														"src": "11472:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$181",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "11463:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$181",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 486,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "11559:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$181",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 487,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "11568:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$181_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "11581:16:0",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 178,
															"src": "11568:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$181",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "11559:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$181",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 494,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "11664:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$181",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 495,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "11673:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$181_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "11686:22:0",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 179,
																"src": "11673:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$181",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "11664:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$181",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 506,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "11798:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$181",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 507,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "11807:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$181_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "11820:17:0",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 180,
																	"src": "11807:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$181",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "11798:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 515,
															"nodeType": "IfStatement",
															"src": "11794:109:0",
															"trueBody": {
																"id": 514,
																"nodeType": "Block",
																"src": "11839:64:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 511,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 477,
																					"src": "11883:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 510,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 194,
																				"src": "11860:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11860:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 513,
																		"nodeType": "RevertStatement",
																		"src": "11853:39:0"
																	}
																]
															}
														},
														"id": 516,
														"nodeType": "IfStatement",
														"src": "11660:243:0",
														"trueBody": {
															"id": 505,
															"nodeType": "Block",
															"src": "11710:78:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 501,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 477,
																						"src": "11767:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 500,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "11759:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 499,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "11759:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 502,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11759:17:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 498,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 189,
																			"src": "11731:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11731:46:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 504,
																	"nodeType": "RevertStatement",
																	"src": "11724:53:0"
																}
															]
														}
													},
													"id": 517,
													"nodeType": "IfStatement",
													"src": "11555:348:0",
													"trueBody": {
														"id": 493,
														"nodeType": "Block",
														"src": "11599:55:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 490,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "11620:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11620:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 492,
																"nodeType": "RevertStatement",
																"src": "11613:30:0"
															}
														]
													}
												},
												"id": 518,
												"nodeType": "IfStatement",
												"src": "11459:444:0",
												"trueBody": {
													"id": 485,
													"nodeType": "Block",
													"src": "11494:55:0",
													"statements": [
														{
															"functionReturnParameters": 479,
															"id": 484,
															"nodeType": "Return",
															"src": "11508:7:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "11250:122:0",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "11386:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "11411:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "11398:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$181",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 474,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 473,
														"name": "RecoverError",
														"nameLocations": [
															"11398:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "11398:12:0"
													},
													"referencedDeclaration": 181,
													"src": "11398:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$181",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "11426:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "11418:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 476,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11418:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11397:38:0"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11449:0:0"
									},
									"scope": 521,
									"src": "11377:532:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1017,
							"src": "4441:7470:0",
							"usedErrors": [
								184,
								189,
								194
							],
							"usedEvents": []
						},
						{
							"id": 522,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "11989:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUserVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 523,
								"nodeType": "StructuredDocumentation",
								"src": "12015:964:0",
								"text": " @title ActionExecutor\n @notice Central onchain dispatcher that executes module actions from user vaults.\n         Uses EIP-712 signed approvals by the vault owner to allow a relayer/bot to\n         call `executeModuleActionWithSig(...)` which will call `UserVault.executeCall(...)`.\nCA: 0x2288B1E75e90B62012d527068A07bebE5F89be9d\n Flow:\n  1. Vault owner signs an EIP-712 message approving a module action for their vault.\n  2. Offchain relayer (bot) pushes the signature and params to this contract.\n  3. This contract validates signature, checks module whitelist, increments nonce,\n     and calls `UserVault(vault).executeCall(module, value, data)`.\n Security notes:\n  - The UserVault must whitelist this ActionExecutor via `setExecutorAllowed(executor, true)`\n    for the call to succeed (UserVault enforces that).\n  - Nonces are per-vault to prevent replay attacks.\n  - Modules must be registered by the contract owner."
							},
							"fullyImplemented": false,
							"id": 540,
							"linearizedBaseContracts": [
								540
							],
							"name": "IUserVault",
							"nameLocation": "12993:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "9e5d4c49",
									"id": 534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeCall",
									"nameLocation": "13019:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13039:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "13031:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13055:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "13047:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13077:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "13062:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13062:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13030:52:0"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "13101:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13101:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13100:14:0"
									},
									"scope": 540,
									"src": "13010:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8da5cb5b",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "13129:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13134:2:0"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "13160:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13159:9:0"
									},
									"scope": 540,
									"src": "13120:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1017,
							"src": "12983:188:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"errorSelector": "d92e233d",
							"id": 542,
							"name": "ZeroAddress",
							"nameLocation": "13179:11:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 541,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "13190:2:0"
							},
							"src": "13173:20:0"
						},
						{
							"errorSelector": "9c4aee9e",
							"id": 544,
							"name": "ModuleNotRegistered",
							"nameLocation": "13200:19:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 543,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "13219:2:0"
							},
							"src": "13194:28:0"
						},
						{
							"errorSelector": "0819bdcd",
							"id": 546,
							"name": "SignatureExpired",
							"nameLocation": "13229:16:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 545,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "13245:2:0"
							},
							"src": "13223:25:0"
						},
						{
							"errorSelector": "815e1d64",
							"id": 548,
							"name": "InvalidSigner",
							"nameLocation": "13255:13:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 547,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "13268:2:0"
							},
							"src": "13249:22:0"
						},
						{
							"errorSelector": "acfdb444",
							"id": 550,
							"name": "ExecutionFailed",
							"nameLocation": "13278:15:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 549,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "13293:2:0"
							},
							"src": "13272:24:0"
						},
						{
							"errorSelector": "95b0718d",
							"id": 552,
							"name": "ModuleAlreadyRegistered",
							"nameLocation": "13303:23:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 551,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "13326:2:0"
							},
							"src": "13297:32:0"
						},
						{
							"errorSelector": "7252c08c",
							"id": 554,
							"name": "ModuleNotFound",
							"nameLocation": "13336:14:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 553,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "13350:2:0"
							},
							"src": "13330:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 555,
										"name": "Ownable",
										"nameLocations": [
											"13382:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 174,
										"src": "13382:7:0"
									},
									"id": 556,
									"nodeType": "InheritanceSpecifier",
									"src": "13382:7:0"
								}
							],
							"canonicalName": "ActionExecutor",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1016,
							"linearizedBaseContracts": [
								1016,
								174,
								29
							],
							"name": "ActionExecutor",
							"nameLocation": "13364:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 559,
									"libraryName": {
										"id": 557,
										"name": "ECDSA",
										"nameLocations": [
											"13402:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 521,
										"src": "13402:5:0"
									},
									"nodeType": "UsingForDirective",
									"src": "13396:24:0",
									"typeName": {
										"id": 558,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "13412:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "13426:32:0",
										"text": "========== EVENTS =========="
									},
									"eventSelector": "d63be02155b46636309fb0a4a79647c60971aecaad53cbc83aad90cd75fd9d54",
									"id": 566,
									"name": "ModuleRegistered",
									"nameLocation": "13469:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"indexed": true,
												"mutability": "mutable",
												"name": "moduleId",
												"nameLocation": "13502:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "13486:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 561,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"indexed": true,
												"mutability": "mutable",
												"name": "module",
												"nameLocation": "13528:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "13512:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13485:50:0"
									},
									"src": "13463:73:0"
								},
								{
									"anonymous": false,
									"eventSelector": "c631c273472e359a1548940daca1e146b3b6bf7582363a16e11b9f570783baee",
									"id": 572,
									"name": "ModuleUnregistered",
									"nameLocation": "13547:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"indexed": true,
												"mutability": "mutable",
												"name": "moduleId",
												"nameLocation": "13582:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "13566:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 567,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"indexed": true,
												"mutability": "mutable",
												"name": "module",
												"nameLocation": "13608:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "13592:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13592:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13565:50:0"
									},
									"src": "13541:75:0"
								},
								{
									"anonymous": false,
									"eventSelector": "bdc4e709cee662270d6b1f3b98b847541936a3762b56f7229d50448d83476e24",
									"id": 588,
									"name": "ActionExecuted",
									"nameLocation": "13627:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "13667:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "13651:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13698:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "13682:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"indexed": true,
												"mutability": "mutable",
												"name": "moduleId",
												"nameLocation": "13729:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "13713:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 577,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"indexed": false,
												"mutability": "mutable",
												"name": "module",
												"nameLocation": "13755:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "13747:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13779:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "13771:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13800:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "13794:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 583,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13794:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"indexed": false,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "13820:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "13814:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13814:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13641:191:0"
									},
									"src": "13621:212:0"
								},
								{
									"constant": false,
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "13839:75:0",
										"text": "========== MODULE REGISTRY ==========\n moduleId => moduleAddress"
									},
									"functionSelector": "b0b6cc1a",
									"id": 593,
									"mutability": "mutable",
									"name": "modules",
									"nameLocation": "13954:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1016,
									"src": "13919:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
										"typeString": "mapping(bytes32 => address)"
									},
									"typeName": {
										"id": 592,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 590,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "13927:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "13919:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
											"typeString": "mapping(bytes32 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 591,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "13938:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "13968:55:0",
										"text": "========== NONCES ==========\n vault => nonce"
									},
									"functionSelector": "7ecebe00",
									"id": 598,
									"mutability": "mutable",
									"name": "nonces",
									"nameLocation": "14063:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1016,
									"src": "14028:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 597,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 595,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "14036:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "14028:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 596,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "14047:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "14076:39:0",
										"text": "EIP-712 domain separator parameters"
									},
									"functionSelector": "3644e515",
									"id": 601,
									"mutability": "immutable",
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "14145:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1016,
									"src": "14120:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 600,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "14120:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5a35b84a",
									"id": 606,
									"mutability": "constant",
									"name": "ACTION_TYPEHASH",
									"nameLocation": "14307:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1016,
									"src": "14283:149:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 602,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "14283:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "416374696f6e2861646472657373207661756c742c62797465733332206d6f64756c6549642c75696e743235362076616c75652c627974657320646174612c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 604,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "14335:96:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_2eaaf47f5d8d55bbdfc0070d3bf4e5c48f0e169aeb82b023197c8b2c69c6a338",
													"typeString": "literal_string \"Action(address vault,bytes32 moduleId,uint256 value,bytes data,uint256 nonce,uint256 deadline)\""
												},
												"value": "Action(address vault,bytes32 moduleId,uint256 value,bytes data,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_2eaaf47f5d8d55bbdfc0070d3bf4e5c48f0e169aeb82b023197c8b2c69c6a338",
													"typeString": "literal_string \"Action(address vault,bytes32 moduleId,uint256 value,bytes data,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 603,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "14325:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 605,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "14325:107:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "14473:520:0",
										"statements": [
											{
												"assignments": [
													614
												],
												"declarations": [
													{
														"constant": false,
														"id": 614,
														"mutability": "mutable",
														"name": "chainId",
														"nameLocation": "14491:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "14483:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 613,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14483:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 615,
												"nodeType": "VariableDeclarationStatement",
												"src": "14483:15:0"
											},
											{
												"AST": {
													"nativeSrc": "14517:44:0",
													"nodeType": "YulBlock",
													"src": "14517:44:0",
													"statements": [
														{
															"nativeSrc": "14531:20:0",
															"nodeType": "YulAssignment",
															"src": "14531:20:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nativeSrc": "14542:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "14542:7:0"
																},
																"nativeSrc": "14542:9:0",
																"nodeType": "YulFunctionCall",
																"src": "14542:9:0"
															},
															"variableNames": [
																{
																	"name": "chainId",
																	"nativeSrc": "14531:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "14531:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 614,
														"isOffset": false,
														"isSlot": false,
														"src": "14531:7:0",
														"valueSize": 1
													}
												],
												"id": 616,
												"nodeType": "InlineAssembly",
												"src": "14508:53:0"
											},
											{
												"expression": {
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 617,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "14570:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 622,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14730:84:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 621,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "14720:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14720:95:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416374696f6e4578656375746f72",
																						"id": 627,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14849:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_3f44aa184ab6fa31533dfbf9ef3cd970e5d63a4acb4cfad9d1d294daaac5bd92",
																							"typeString": "literal_string \"ActionExecutor\""
																						},
																						"value": "ActionExecutor"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_3f44aa184ab6fa31533dfbf9ef3cd970e5d63a4acb4cfad9d1d294daaac5bd92",
																							"typeString": "literal_string \"ActionExecutor\""
																						}
																					],
																					"id": 626,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "14843:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 625,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "14843:5:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14843:23:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 624,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "14833:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14833:34:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "31",
																						"id": 633,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14901:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 632,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "14895:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 631,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "14895:5:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14895:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 630,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "14885:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14885:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 636,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "14924:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 639,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "14957:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ActionExecutor_$1016",
																					"typeString": "contract ActionExecutor"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ActionExecutor_$1016",
																					"typeString": "contract ActionExecutor"
																				}
																			],
																			"id": 638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14949:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 637,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "14949:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14949:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 619,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "14612:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "14616:6:0",
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"src": "14612:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14612:364:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 618,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "14589:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14589:397:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "14570:416:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "14570:416:0"
											}
										]
									},
									"id": 646,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 609,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "14461:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "14465:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "14461:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 611,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 608,
												"name": "Ownable",
												"nameLocations": [
													"14453:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 174,
												"src": "14453:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14453:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14450:2:0"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14473:0:0"
									},
									"scope": 1016,
									"src": "14439:554:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "15119:227:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 656,
														"name": "module",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "15133:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15151:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15143:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 657,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15143:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15143:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15133:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 665,
												"nodeType": "IfStatement",
												"src": "15129:46:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 662,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "15162:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15162:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 664,
													"nodeType": "RevertStatement",
													"src": "15155:20:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 666,
															"name": "modules",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "15189:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 668,
														"indexExpression": {
															"id": 667,
															"name": "moduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "15197:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15189:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15218:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15210:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 669,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15210:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15210:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15189:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 677,
												"nodeType": "IfStatement",
												"src": "15185:69:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 674,
															"name": "ModuleAlreadyRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "15229:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15229:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 676,
													"nodeType": "RevertStatement",
													"src": "15222:32:0"
												}
											},
											{
												"expression": {
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 678,
															"name": "modules",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "15264:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 680,
														"indexExpression": {
															"id": 679,
															"name": "moduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "15272:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15264:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 681,
														"name": "module",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "15284:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15264:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "15264:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 685,
															"name": "moduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "15322:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 686,
															"name": "module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "15332:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 684,
														"name": "ModuleRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "15305:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15305:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "EmitStatement",
												"src": "15300:39:0"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "14999:38:0",
										"text": "========== MODULE ADMIN =========="
									},
									"functionSelector": "a78e922b",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 654,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 653,
												"name": "onlyOwner",
												"nameLocations": [
													"15109:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "15109:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15109:9:0"
										}
									],
									"name": "registerModule",
									"nameLocation": "15051:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "moduleId",
												"nameLocation": "15074:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "15066:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 648,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "module",
												"nameLocation": "15092:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "15084:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15065:34:0"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15119:0:0"
									},
									"scope": 1016,
									"src": "15042:304:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "15415:186:0",
										"statements": [
											{
												"assignments": [
													698
												],
												"declarations": [
													{
														"constant": false,
														"id": 698,
														"mutability": "mutable",
														"name": "mod",
														"nameLocation": "15433:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 723,
														"src": "15425:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 697,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15425:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 702,
												"initialValue": {
													"baseExpression": {
														"id": 699,
														"name": "modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "15439:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
															"typeString": "mapping(bytes32 => address)"
														}
													},
													"id": 701,
													"indexExpression": {
														"id": 700,
														"name": "moduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "15447:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15439:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15425:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 703,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "15470:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15485:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15477:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 704,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15477:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15477:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15470:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 712,
												"nodeType": "IfStatement",
												"src": "15466:46:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 709,
															"name": "ModuleNotFound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "15496:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15496:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 711,
													"nodeType": "RevertStatement",
													"src": "15489:23:0"
												}
											},
											{
												"expression": {
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "15522:24:0",
													"subExpression": {
														"baseExpression": {
															"id": 713,
															"name": "modules",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "15529:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 715,
														"indexExpression": {
															"id": 714,
															"name": "moduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "15537:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15529:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "15522:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 719,
															"name": "moduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "15580:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 720,
															"name": "mod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "15590:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 718,
														"name": "ModuleUnregistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "15561:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15561:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "EmitStatement",
												"src": "15556:38:0"
											}
										]
									},
									"functionSelector": "3595945d",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 695,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 694,
												"name": "onlyOwner",
												"nameLocations": [
													"15405:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "15405:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15405:9:0"
										}
									],
									"name": "unregisterModule",
									"nameLocation": "15361:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "moduleId",
												"nameLocation": "15386:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "15378:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 691,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15377:18:0"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15415:0:0"
									},
									"scope": 1016,
									"src": "15352:249:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "16434:1457:0",
										"statements": [
											{
												"assignments": [
													743
												],
												"declarations": [
													{
														"constant": false,
														"id": 743,
														"mutability": "mutable",
														"name": "module",
														"nameLocation": "16452:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "16444:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 742,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16444:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 747,
												"initialValue": {
													"baseExpression": {
														"id": 744,
														"name": "modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "16461:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
															"typeString": "mapping(bytes32 => address)"
														}
													},
													"id": 746,
													"indexExpression": {
														"id": 745,
														"name": "moduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "16469:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16461:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16444:34:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 748,
														"name": "module",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "16492:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16510:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16502:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 749,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16502:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16502:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16492:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 757,
												"nodeType": "IfStatement",
												"src": "16488:54:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 754,
															"name": "ModuleNotRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "16521:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16521:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 756,
													"nodeType": "RevertStatement",
													"src": "16514:28:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "16556:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16573:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16565:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 759,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16565:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16565:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16556:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 767,
												"nodeType": "IfStatement",
												"src": "16552:45:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 764,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "16584:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16584:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 766,
													"nodeType": "RevertStatement",
													"src": "16577:20:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 768,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "16611:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16617:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "16611:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 770,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "16629:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16611:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 775,
												"nodeType": "IfStatement",
												"src": "16607:57:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 772,
															"name": "SignatureExpired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "16646:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16646:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 774,
													"nodeType": "RevertStatement",
													"src": "16639:25:0"
												}
											},
											{
												"assignments": [
													777
												],
												"declarations": [
													{
														"constant": false,
														"id": 777,
														"mutability": "mutable",
														"name": "nonce",
														"nameLocation": "16710:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "16702:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 776,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16702:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 781,
												"initialValue": {
													"baseExpression": {
														"id": 778,
														"name": "nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "16718:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 780,
													"indexExpression": {
														"id": 779,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "16725:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16718:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16702:29:0"
											},
											{
												"assignments": [
													783
												],
												"declarations": [
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "16749:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "16741:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 782,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "16741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 798,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 787,
																	"name": "ACTION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "16783:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 788,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "16800:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 789,
																	"name": "moduleId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "16807:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 790,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "16817:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 792,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 733,
																			"src": "16834:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		],
																		"id": 791,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "16824:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16824:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 794,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "16841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 795,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "16848:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 785,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16772:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "16776:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "16772:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16772:85:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 784,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "16762:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16762:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16741:117:0"
											},
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "digest",
														"nameLocation": "16876:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "16868:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 799,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "16868:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16912:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 805,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "16924:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 806,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "16942:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 802,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16895:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "16899:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "16895:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16895:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 801,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "16885:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16885:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16868:86:0"
											},
											{
												"assignments": [
													811
												],
												"declarations": [
													{
														"constant": false,
														"id": 811,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "16999:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "16991:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 810,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16991:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 816,
												"initialValue": {
													"arguments": [
														{
															"id": 814,
															"name": "sig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "17023:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"id": 812,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "17008:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17015:7:0",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "17008:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address)"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17008:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16991:36:0"
											},
											{
												"assignments": [
													818
												],
												"declarations": [
													{
														"constant": false,
														"id": 818,
														"mutability": "mutable",
														"name": "vaultOwner",
														"nameLocation": "17092:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "17084:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 817,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17084:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 820,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "17116:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 819,
																"name": "IUserVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "17105:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUserVault_$540_$",
																	"typeString": "type(contract IUserVault)"
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17105:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUserVault_$540",
																"typeString": "contract IUserVault"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17123:5:0",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 539,
														"src": "17105:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17105:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17084:46:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 825,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "17144:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17162:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17154:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 826,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17154:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17154:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "17144:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 831,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "17168:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 832,
															"name": "vaultOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "17178:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "17168:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17144:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 838,
												"nodeType": "IfStatement",
												"src": "17140:72:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 835,
															"name": "InvalidSigner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "17197:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17197:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 837,
													"nodeType": "RevertStatement",
													"src": "17190:22:0"
												}
											},
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 839,
															"name": "nonces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "17250:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 841,
														"indexExpression": {
															"id": 840,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "17257:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17250:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 842,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "17266:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17274:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "17266:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17250:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "17250:25:0"
											},
											{
												"assignments": [
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 848,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "17384:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "17371:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 847,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17371:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"nodeType": "VariableDeclarationStatement",
												"src": "17371:16:0"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 865,
															"nodeType": "Block",
															"src": "17477:32:0",
															"statements": [
																{
																	"expression": {
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 861,
																			"name": "res",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 848,
																			"src": "17491:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 862,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 859,
																			"src": "17497:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"src": "17491:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 864,
																	"nodeType": "ExpressionStatement",
																	"src": "17491:7:0"
																}
															]
														},
														"errorName": "",
														"id": 866,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 860,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 859,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "17474:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 866,
																	"src": "17461:14:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 858,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "17461:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "17460:16:0"
														},
														"src": "17452:57:0"
													},
													{
														"block": {
															"id": 880,
															"nodeType": "Block",
															"src": "17538:246:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 870,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 868,
																				"src": "17598:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "17605:6:0",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "17598:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17614:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17598:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 876,
																	"nodeType": "IfStatement",
																	"src": "17594:142:0",
																	"trueBody": {
																		"id": 875,
																		"nodeType": "Block",
																		"src": "17617:119:0",
																		"statements": [
																			{
																				"AST": {
																					"nativeSrc": "17644:78:0",
																					"nodeType": "YulBlock",
																					"src": "17644:78:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nativeSrc": "17677:2:0",
																												"nodeType": "YulLiteral",
																												"src": "17677:2:0",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nativeSrc": "17681:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "17681:6:0"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17673:3:0",
																											"nodeType": "YulIdentifier",
																											"src": "17673:3:0"
																										},
																										"nativeSrc": "17673:15:0",
																										"nodeType": "YulFunctionCall",
																										"src": "17673:15:0"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nativeSrc": "17696:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "17696:6:0"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "17690:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "17690:5:0"
																										},
																										"nativeSrc": "17690:13:0",
																										"nodeType": "YulFunctionCall",
																										"src": "17690:13:0"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nativeSrc": "17666:6:0",
																									"nodeType": "YulIdentifier",
																									"src": "17666:6:0"
																								},
																								"nativeSrc": "17666:38:0",
																								"nodeType": "YulFunctionCall",
																								"src": "17666:38:0"
																							},
																							"nativeSrc": "17666:38:0",
																							"nodeType": "YulExpressionStatement",
																							"src": "17666:38:0"
																						}
																					]
																				},
																				"evmVersion": "shanghai",
																				"externalReferences": [
																					{
																						"declaration": 868,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "17681:6:0",
																						"valueSize": 1
																					},
																					{
																						"declaration": 868,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "17696:6:0",
																						"valueSize": 1
																					}
																				],
																				"id": 874,
																				"nodeType": "InlineAssembly",
																				"src": "17635:87:0"
																			}
																		]
																	}
																},
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 877,
																			"name": "ExecutionFailed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 550,
																			"src": "17756:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17756:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 879,
																	"nodeType": "RevertStatement",
																	"src": "17749:24:0"
																}
															]
														},
														"errorName": "",
														"id": 881,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 869,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 868,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "17530:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 881,
																	"src": "17517:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 867,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "17517:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "17516:21:0"
														},
														"src": "17510:274:0"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 854,
															"name": "module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "17431:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "17439:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 856,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "17446:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 851,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "17412:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 850,
																"name": "IUserVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "17401:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUserVault_$540_$",
																	"typeString": "type(contract IUserVault)"
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17401:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUserVault_$540",
																"typeString": "contract IUserVault"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17419:11:0",
														"memberName": "executeCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 534,
														"src": "17401:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,uint256,bytes memory) external returns (bytes memory)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17401:50:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 882,
												"nodeType": "TryStatement",
												"src": "17397:387:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 884,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "17814:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "17821:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 886,
															"name": "moduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "17829:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 887,
															"name": "module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "17839:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 888,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "17847:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 889,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "17854:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 890,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "17860:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 883,
														"name": "ActionExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "17799:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,bytes32,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17799:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "EmitStatement",
												"src": "17794:70:0"
											},
											{
												"expression": {
													"id": 893,
													"name": "res",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 848,
													"src": "17881:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 741,
												"id": 894,
												"nodeType": "Return",
												"src": "17874:10:0"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "15657:536:0",
										"text": " @notice Execute a registered module's action on behalf of user vault, authorized by owner's signature.\n @param moduleId Registered module id (bytes32)\n @param vault Address of the UserVault clone\n @param value ETH value to forward from vault to module (in wei)\n @param data Calldata to pass to module (executed from vault context)\n @param deadline Timestamp after which the signature is invalid\n @param sig EIP-191 signature (65 bytes) from vault owner approving this action"
									},
									"functionSelector": "16ca96f4",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeModuleActionWithSig",
									"nameLocation": "16207:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "moduleId",
												"nameLocation": "16251:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "16243:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 726,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16243:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "16277:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "16269:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16269:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16300:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "16292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16330:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "16315:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16315:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "16352:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "16344:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "16385:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "16370:18:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 736,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16370:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16233:161:0"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16426:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "16413:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 739,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16413:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16412:21:0"
									},
									"scope": 1016,
									"src": "16198:1693:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "18251:735:0",
										"statements": [
											{
												"assignments": [
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 913,
														"mutability": "mutable",
														"name": "module",
														"nameLocation": "18269:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "18261:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 912,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "18261:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 917,
												"initialValue": {
													"baseExpression": {
														"id": 914,
														"name": "modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "18278:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
															"typeString": "mapping(bytes32 => address)"
														}
													},
													"id": 916,
													"indexExpression": {
														"id": 915,
														"name": "moduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "18286:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18278:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18261:34:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 918,
														"name": "module",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "18309:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18327:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18319:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 919,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18319:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18319:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18309:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"nodeType": "IfStatement",
												"src": "18305:54:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 924,
															"name": "ModuleNotRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "18338:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18338:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 926,
													"nodeType": "RevertStatement",
													"src": "18331:28:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 928,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "18373:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18390:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18382:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 929,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18382:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18382:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18373:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "18369:45:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 934,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "18401:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18401:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 936,
													"nodeType": "RevertStatement",
													"src": "18394:20:0"
												}
											},
											{
												"assignments": [
													939
												],
												"declarations": [
													{
														"constant": false,
														"id": 939,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "18438:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "18425:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 938,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18425:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 940,
												"nodeType": "VariableDeclarationStatement",
												"src": "18425:16:0"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 956,
															"nodeType": "Block",
															"src": "18531:32:0",
															"statements": [
																{
																	"expression": {
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 952,
																			"name": "res",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 939,
																			"src": "18545:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 953,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 950,
																			"src": "18551:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"src": "18545:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 955,
																	"nodeType": "ExpressionStatement",
																	"src": "18545:7:0"
																}
															]
														},
														"errorName": "",
														"id": 957,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 951,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 950,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "18528:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 957,
																	"src": "18515:14:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 949,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "18515:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "18514:16:0"
														},
														"src": "18506:57:0"
													},
													{
														"block": {
															"id": 971,
															"nodeType": "Block",
															"src": "18592:204:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 961,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 959,
																				"src": "18610:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "18617:6:0",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "18610:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18626:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "18610:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 967,
																	"nodeType": "IfStatement",
																	"src": "18606:142:0",
																	"trueBody": {
																		"id": 966,
																		"nodeType": "Block",
																		"src": "18629:119:0",
																		"statements": [
																			{
																				"AST": {
																					"nativeSrc": "18656:78:0",
																					"nodeType": "YulBlock",
																					"src": "18656:78:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nativeSrc": "18689:2:0",
																												"nodeType": "YulLiteral",
																												"src": "18689:2:0",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nativeSrc": "18693:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "18693:6:0"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18685:3:0",
																											"nodeType": "YulIdentifier",
																											"src": "18685:3:0"
																										},
																										"nativeSrc": "18685:15:0",
																										"nodeType": "YulFunctionCall",
																										"src": "18685:15:0"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nativeSrc": "18708:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "18708:6:0"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "18702:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "18702:5:0"
																										},
																										"nativeSrc": "18702:13:0",
																										"nodeType": "YulFunctionCall",
																										"src": "18702:13:0"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nativeSrc": "18678:6:0",
																									"nodeType": "YulIdentifier",
																									"src": "18678:6:0"
																								},
																								"nativeSrc": "18678:38:0",
																								"nodeType": "YulFunctionCall",
																								"src": "18678:38:0"
																							},
																							"nativeSrc": "18678:38:0",
																							"nodeType": "YulExpressionStatement",
																							"src": "18678:38:0"
																						}
																					]
																				},
																				"evmVersion": "shanghai",
																				"externalReferences": [
																					{
																						"declaration": 959,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "18693:6:0",
																						"valueSize": 1
																					},
																					{
																						"declaration": 959,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "18708:6:0",
																						"valueSize": 1
																					}
																				],
																				"id": 965,
																				"nodeType": "InlineAssembly",
																				"src": "18647:87:0"
																			}
																		]
																	}
																},
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 968,
																			"name": "ExecutionFailed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 550,
																			"src": "18768:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18768:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 970,
																	"nodeType": "RevertStatement",
																	"src": "18761:24:0"
																}
															]
														},
														"errorName": "",
														"id": 972,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 960,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 959,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "18584:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 972,
																	"src": "18571:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 958,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "18571:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "18570:21:0"
														},
														"src": "18564:232:0"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 945,
															"name": "module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "18485:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 946,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "18493:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 947,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "18500:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 942,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "18466:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 941,
																"name": "IUserVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "18455:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUserVault_$540_$",
																	"typeString": "type(contract IUserVault)"
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18455:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUserVault_$540",
																"typeString": "contract IUserVault"
															}
														},
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18473:11:0",
														"memberName": "executeCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 534,
														"src": "18455:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,uint256,bytes memory) external returns (bytes memory)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18455:50:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 973,
												"nodeType": "TryStatement",
												"src": "18451:345:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 975,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "18905:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18920:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18912:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 976,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18912:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18912:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "moduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "18924:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 981,
															"name": "module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "18934:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 982,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "18942:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 983,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "18949:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 984,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "18955:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 974,
														"name": "ActionExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "18890:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,bytes32,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18890:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "EmitStatement",
												"src": "18885:74:0"
											},
											{
												"expression": {
													"id": 987,
													"name": "res",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 939,
													"src": "18976:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 911,
												"id": 988,
												"nodeType": "Return",
												"src": "18969:10:0"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "17897:164:0",
										"text": "@notice Admin fallback: owner of this contract can execute module actions directly (no signature).\n Useful for governance-driven or emergency operations."
									},
									"functionSelector": "2dac633b",
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 908,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 907,
												"name": "onlyOwner",
												"nameLocations": [
													"18218:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "18218:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "18218:9:0"
										}
									],
									"name": "executeModuleActionByOwner",
									"nameLocation": "18075:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "moduleId",
												"nameLocation": "18119:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "18111:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 898,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "18145:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "18137:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18168:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "18160:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18198:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "18183:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18183:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18101:107:0"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "18237:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 909,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18237:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18236:14:0"
									},
									"scope": 1016,
									"src": "18066:920:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "19107:41:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 998,
														"name": "modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "19124:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
															"typeString": "mapping(bytes32 => address)"
														}
													},
													"id": 1000,
													"indexExpression": {
														"id": 999,
														"name": "moduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "19132:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19124:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 997,
												"id": 1001,
												"nodeType": "Return",
												"src": "19117:24:0"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "18992:41:0",
										"text": "========== HELPERS / VIEWS =========="
									},
									"functionSelector": "85acd641",
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getModule",
									"nameLocation": "19047:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "moduleId",
												"nameLocation": "19065:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "19057:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 992,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19056:18:0"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "19098:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19098:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19097:9:0"
									},
									"scope": 1016,
									"src": "19038:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "19219:37:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1010,
														"name": "nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "19236:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1012,
													"indexExpression": {
														"id": 1011,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "19243:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19236:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1009,
												"id": 1013,
												"nodeType": "Return",
												"src": "19229:20:0"
											}
										]
									},
									"functionSelector": "2d0335ab",
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNonce",
									"nameLocation": "19163:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "19180:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "19172:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19171:15:0"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "19210:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19209:9:0"
									},
									"scope": 1016,
									"src": "19154:102:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1017,
							"src": "13355:5903:0",
							"usedErrors": [
								40,
								45,
								184,
								189,
								194,
								542,
								544,
								546,
								548,
								550,
								552,
								554
							],
							"usedEvents": [
								51,
								566,
								572,
								588
							]
						}
					],
					"src": "123:19136:0"
				},
				"id": 0
			}
		}
	}
}